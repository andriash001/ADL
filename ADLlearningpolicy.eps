%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Untitled Diagram (18).pdf
%%Creator: Adobe Acrobat 10.1.16
%%For: andri
%%CreationDate: 10/12/2018, 12:32:21 PM
%%BoundingBox: 0 0 408 354
%%HiResBoundingBox: 0 0 408 354
%%CropBox: 0 0 408 354
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 561 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2018-10-12T04:31:43Z"
   xmp:CreatorTool="Chromium"
   xmp:ModifyDate="2018-10-12T04:31:43Z"
   pdf:Producer="Skia/PDF m64"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -354 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 354 li
408 354 li
408 0 li
cp
clp
0 0 mo
408 0 li
408 353.312 li
0 353.312 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
0 0 mo
408 0 li
408 353.312 li
0 353.312 li
cp
eclp
.719577 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
14.4635 .359788 mo
354.679 .359788 li
358.574 .359788 361.898 1.73675 364.652 4.49067 cv
367.406 7.24459 368.783 10.5689 368.783 14.4635 cv
368.783 338.849 li
368.783 342.743 367.406 346.068 364.652 348.821 cv
361.898 351.575 358.574 352.952 354.679 352.952 cv
14.4635 352.952 li
10.5689 352.952 7.24459 351.575 4.49067 348.821 cv
1.73675 346.068 .359788 342.743 .359788 338.849 cv
.359788 14.4635 li
.359788 10.5689 1.73675 7.24459 4.49067 4.49067 cv
7.24459 1.73675 10.5689 .359788 14.4635 .359788 cv
cp
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
grestore
59.6772 69.8228 mo
59.6772 65.9546 58.3096 62.6529 55.5744 59.9177 cv
52.8392 57.1825 49.5375 55.8148 45.6693 55.8148 cv
41.8011 55.8148 38.4994 57.1825 35.7642 59.9177 cv
33.029 62.6529 31.6614 65.9546 31.6614 69.8228 cv
31.6614 73.6909 33.029 76.9926 35.7642 79.7279 cv
38.4994 82.4631 41.8011 83.8307 45.6693 83.8307 cv
49.5375 83.8307 52.8392 82.4631 55.5744 79.7279 cv
58.3096 76.9926 59.6772 73.6909 59.6772 69.8228 cv
cp
.885801 .607721 .320989 .118837 cmyk
f
52.2444 75.7785 mo
52.2444 75.0154 51.6025 74.364 50.3186 73.8244 cv
49.0347 73.2848 47.485 73.015 45.6693 73.015 cv
43.8536 73.015 42.3038 73.2848 41.02 73.8244 cv
39.7361 74.364 39.0941 75.0154 39.0941 75.7785 cv
39.0941 76.5416 39.7361 77.193 41.02 77.7326 cv
42.3038 78.2722 43.8536 78.542 45.6693 78.542 cv
47.485 78.542 49.0347 78.2722 50.3186 77.7326 cv
51.6025 77.193 52.2444 76.5416 52.2444 75.7785 cv
cp
0 0 0 0 cmyk
f
52.4827 74.8256 mo
52.1492 73.3486 49.2427 72.2051 45.6693 72.2051 cv
42.0958 72.2051 39.1894 73.3486 38.8559 74.8256 cv
38.8083 74.8256 li
38.8083 63.9147 li
38.8083 62.2947 41.8576 61.0083 45.6693 61.0083 cv
49.481 61.0083 52.5303 62.2947 52.5303 63.9147 cv
52.4827 74.8256 li
cp
f
2.15873 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
80.8085 47.8518 mo
146.578 47.8518 li
148.426 47.8518 150.003 48.5052 151.31 49.8119 cv
152.616 51.1186 153.27 52.696 153.27 54.5439 cv
153.27 85.7735 li
153.27 87.6215 152.616 89.1988 151.31 90.5055 cv
150.003 91.8122 148.426 92.4656 146.578 92.4656 cv
80.8085 92.4656 li
78.9605 92.4656 77.3832 91.8122 76.0765 90.5055 cv
74.7697 89.1988 74.1164 87.6215 74.1164 85.7735 cv
74.1164 54.5439 li
74.1164 52.696 74.7697 51.1186 76.0765 49.8119 cv
77.3832 48.5052 78.9605 47.8518 80.8085 47.8518 cv
cp
.724666 .633692 .581445 .511833 cmyk
@
.719577 lw
10 ml
60.0847 70.1587 mo
74.4762 70.1587 li
60.0847 70.1587 li
69.5327 70.1587 li
@
73.3105 70.1587 mo
68.2734 72.6772 li
69.5327 70.1587 li
68.2734 67.6402 li
73.3105 70.1587 li
cp
f
73.3105 70.1587 mo
68.2734 72.6772 li
69.5327 70.1587 li
68.2734 67.6402 li
73.3105 70.1587 li
cp
@
31.9735 61.5476 mo
31.9735 57.6795 30.6059 54.3778 27.8707 51.6425 cv
25.1355 48.9073 21.8338 47.5397 17.9656 47.5397 cv
14.0974 47.5397 10.7957 48.9073 8.0605 51.6425 cv
5.32528 54.3778 3.95767 57.6795 3.95767 61.5476 cv
3.95767 65.4158 5.32528 68.7175 8.0605 71.4527 cv
10.7957 74.1879 14.0974 75.5556 17.9656 75.5556 cv
21.8338 75.5556 25.1355 74.1879 27.8707 71.4527 cv
30.6059 68.7175 31.9735 65.4158 31.9735 61.5476 cv
cp
.885801 .607721 .320989 .118837 cmyk
f
24.5407 67.5034 mo
24.5407 66.7403 23.8988 66.0889 22.6149 65.5493 cv
21.331 65.0097 19.7813 64.7399 17.9656 64.7399 cv
16.1499 64.7399 14.6001 65.0097 13.3163 65.5493 cv
12.0324 66.0889 11.3904 66.7403 11.3904 67.5034 cv
11.3904 68.2665 12.0324 68.9178 13.3163 69.4575 cv
14.6001 69.997 16.1499 70.2668 17.9656 70.2668 cv
19.7813 70.2668 21.331 69.997 22.6149 69.4575 cv
23.8988 68.9178 24.5407 68.2665 24.5407 67.5034 cv
cp
0 0 0 0 cmyk
f
24.779 66.5505 mo
24.4454 65.0734 21.539 63.9299 17.9656 63.9299 cv
14.3921 63.9299 11.4857 65.0734 11.1522 66.5505 cv
11.1046 66.5505 li
11.1046 55.6395 li
11.1046 54.0196 14.1539 52.7331 17.9656 52.7331 cv
21.7773 52.7331 24.8266 54.0196 24.8266 55.6395 cv
24.779 66.5505 li
cp
f
35.9312 92.1296 mo
35.9312 88.2615 34.5636 84.9598 31.8284 82.2245 cv
29.0931 79.4893 25.7914 78.1217 21.9233 78.1217 cv
18.0551 78.1217 14.7534 79.4893 12.0182 82.2245 cv
9.28295 84.9598 7.91534 88.2615 7.91534 92.1296 cv
7.91534 95.9978 9.28295 99.2995 12.0182 102.035 cv
14.7534 104.77 18.0551 106.138 21.9233 106.138 cv
25.7914 106.138 29.0931 104.77 31.8284 102.035 cv
34.5636 99.2995 35.9312 95.9978 35.9312 92.1296 cv
cp
.885801 .607721 .320989 .118837 cmyk
f
28.4984 98.0854 mo
28.4984 97.3223 27.8565 96.6709 26.5726 96.1313 cv
25.2887 95.5917 23.7389 95.3219 21.9233 95.3219 cv
20.1076 95.3219 18.5578 95.5917 17.2739 96.1313 cv
15.9901 96.6709 15.3481 97.3223 15.3481 98.0854 cv
15.3481 98.8485 15.9901 99.4999 17.2739 100.039 cv
18.5578 100.579 20.1076 100.849 21.9233 100.849 cv
23.7389 100.849 25.2887 100.579 26.5726 100.039 cv
27.8565 99.4999 28.4984 98.8485 28.4984 98.0854 cv
cp
0 0 0 0 cmyk
f
28.7366 97.1325 mo
28.4031 95.6554 25.4967 94.5119 21.9233 94.5119 cv
18.3498 94.5119 15.4434 95.6554 15.1099 97.1325 cv
15.0622 97.1325 li
15.0622 86.2215 li
15.0622 84.6016 18.1116 83.3151 21.9233 83.3151 cv
25.7349 83.3151 28.7843 84.6016 28.7843 86.2215 cv
28.7366 97.1325 li
cp
f
183.852 84.5503 mo
183.852 93.9048 li
210.93 93.9048 li
1 /0 /CSD get_res sepcs
1 sep
@
214.707 93.9048 mo
209.67 96.4233 li
210.93 93.9048 li
209.67 91.3862 li
214.707 93.9048 li
cp
f
214.707 93.9048 mo
209.67 96.4233 li
210.93 93.9048 li
209.67 91.3862 li
214.707 93.9048 li
cp
@
197.476 69.8228 mo
197.476 65.9546 196.109 62.6529 193.373 59.9177 cv
190.638 57.1825 187.336 55.8148 183.468 55.8148 cv
179.6 55.8148 176.298 57.1825 173.563 59.9177 cv
170.828 62.6529 169.46 65.9546 169.46 69.8228 cv
169.46 73.6909 170.828 76.9926 173.563 79.7279 cv
176.298 82.4631 179.6 83.8307 183.468 83.8307 cv
187.336 83.8307 190.638 82.4631 193.373 79.7279 cv
196.109 76.9926 197.476 73.6909 197.476 69.8228 cv
cp
.885801 .607721 .320989 .118837 cmyk
f
190.043 75.7785 mo
190.043 75.0154 189.401 74.364 188.118 73.8244 cv
186.834 73.2848 185.284 73.015 183.468 73.015 cv
181.653 73.015 180.103 73.2848 178.819 73.8244 cv
177.535 74.364 176.893 75.0154 176.893 75.7785 cv
176.893 76.5416 177.535 77.193 178.819 77.7326 cv
180.103 78.2722 181.653 78.542 183.468 78.542 cv
185.284 78.542 186.834 78.2722 188.118 77.7326 cv
189.401 77.193 190.043 76.5416 190.043 75.7785 cv
cp
0 0 0 0 cmyk
f
190.282 74.8256 mo
189.948 73.3486 187.042 72.2051 183.468 72.2051 cv
179.895 72.2051 176.988 73.3486 176.655 74.8256 cv
176.607 74.8256 li
176.607 63.9147 li
176.607 62.2947 179.657 61.0083 183.468 61.0083 cv
187.28 61.0083 190.329 62.2947 190.329 63.9147 cv
190.282 74.8256 li
cp
f
gsave
0 0 mo
408 0 li
408 353.312 li
0 353.312 li
cp
eclp
153.63 70.1587 mo
165.596 70.1587 li
.724666 .633692 .581445 .511833 cmyk
@
169.374 70.1587 mo
164.337 72.6772 li
165.596 70.1587 li
164.337 67.6402 li
169.374 70.1587 li
cp
f
169.374 70.1587 mo
164.337 72.6772 li
165.596 70.1587 li
164.337 67.6402 li
169.374 70.1587 li
cp
@
321.291 281.714 mo
319.852 281.714 li
319.852 290.803 li
0 0 0 1 cmyk
@
319.852 294.58 mo
317.333 289.543 li
319.852 290.803 li
322.37 289.543 li
319.852 294.58 li
cp
f
319.852 294.58 mo
317.333 289.543 li
319.852 290.803 li
322.37 289.543 li
319.852 294.58 li
cp
@
220.226 197.164 mo
222.385 197.164 li
222.385 197.884 li
220.226 197.884 li
220.226 197.164 li
cp
224.544 197.164 mo
226.703 197.164 li
226.703 197.884 li
224.544 197.884 li
224.544 197.164 li
cp
228.861 197.164 mo
231.02 197.164 li
231.02 197.884 li
228.861 197.884 li
228.861 197.164 li
cp
233.179 197.164 mo
235.338 197.164 li
235.338 197.884 li
233.179 197.884 li
233.179 197.164 li
cp
237.496 197.164 mo
239.655 197.164 li
239.655 197.884 li
237.496 197.884 li
237.496 197.164 li
cp
241.814 197.164 mo
243.972 197.164 li
243.972 197.884 li
241.814 197.884 li
241.814 197.164 li
cp
246.131 197.164 mo
248.29 197.164 li
248.29 197.884 li
246.131 197.884 li
246.131 197.164 li
cp
250.449 197.164 mo
252.607 197.164 li
252.607 197.884 li
250.449 197.884 li
250.449 197.164 li
cp
254.766 197.164 mo
256.925 197.164 li
256.925 197.884 li
254.766 197.884 li
254.766 197.164 li
cp
259.084 197.164 mo
261.242 197.164 li
261.242 197.884 li
259.084 197.884 li
259.084 197.164 li
cp
263.401 197.164 mo
265.56 197.164 li
265.56 197.884 li
263.401 197.884 li
263.401 197.164 li
cp
267.718 197.164 mo
269.877 197.164 li
269.877 197.884 li
267.718 197.884 li
267.718 197.164 li
cp
272.036 197.164 mo
274.195 197.164 li
274.195 197.884 li
272.036 197.884 li
272.036 197.164 li
cp
276.353 197.164 mo
278.512 197.164 li
278.512 197.884 li
276.353 197.884 li
276.353 197.164 li
cp
280.671 197.164 mo
282.83 197.164 li
282.83 197.884 li
280.671 197.884 li
280.671 197.164 li
cp
284.988 197.164 mo
287.147 197.164 li
287.147 197.884 li
284.988 197.884 li
284.988 197.164 li
cp
289.306 197.164 mo
291.465 197.164 li
291.465 197.884 li
289.306 197.884 li
289.306 197.164 li
cp
293.623 197.164 mo
295.782 197.164 li
295.782 197.884 li
293.623 197.884 li
293.623 197.164 li
cp
297.941 197.164 mo
300.099 197.164 li
300.099 197.884 li
297.941 197.884 li
297.941 197.164 li
cp
302.258 197.164 mo
304.417 197.164 li
304.417 197.884 li
302.258 197.884 li
302.258 197.164 li
cp
306.576 197.164 mo
308.734 197.164 li
308.734 197.884 li
306.576 197.884 li
306.576 197.164 li
cp
310.893 197.164 mo
313.052 197.164 li
313.052 197.884 li
310.893 197.884 li
310.893 197.164 li
cp
315.211 197.164 mo
317.369 197.164 li
317.369 197.884 li
315.211 197.884 li
315.211 197.164 li
cp
319.528 197.164 mo
321.687 197.164 li
321.687 197.884 li
319.528 197.884 li
319.528 197.164 li
cp
323.845 197.164 mo
326.004 197.164 li
326.004 197.884 li
323.845 197.884 li
323.845 197.164 li
cp
328.163 197.164 mo
330.322 197.164 li
330.322 197.884 li
328.163 197.884 li
328.163 197.164 li
cp
332.48 197.164 mo
334.639 197.164 li
334.639 197.884 li
332.48 197.884 li
332.48 197.164 li
cp
336.798 197.164 mo
338.957 197.164 li
338.957 197.884 li
336.798 197.884 li
336.798 197.164 li
cp
341.115 197.164 mo
343.274 197.164 li
343.274 197.884 li
341.115 197.884 li
341.115 197.164 li
cp
345.433 197.164 mo
347.52 197.164 li
347.588 197.164 li
347.587 197.884 li
347.52 197.884 li
345.433 197.884 li
345.433 197.164 li
cp
349.745 197.356 mo
350.498 197.487 351.233 197.683 351.952 197.944 cv
351.706 198.62 li
351.028 198.374 350.333 198.189 349.622 198.065 cv
349.745 197.356 li
cp
353.969 198.878 mo
354.621 199.251 355.236 199.678 355.814 200.157 cv
355.354 200.711 li
354.808 200.258 354.227 199.855 353.611 199.503 cv
353.969 198.878 li
cp
357.423 201.749 mo
357.909 202.322 358.343 202.933 358.723 203.581 cv
358.102 203.945 li
357.743 203.333 357.334 202.756 356.874 202.214 cv
357.423 201.749 li
cp
359.677 205.581 mo
359.947 206.298 360.151 207.034 360.291 207.788 cv
359.583 207.919 li
359.451 207.207 359.258 206.512 359.003 205.834 cv
359.677 205.581 li
cp
360.506 209.949 mo
360.507 210.017 360.508 210.085 360.508 210.152 cv
360.508 212.103 li
359.788 212.103 li
359.788 210.152 li
359.788 210.088 359.788 210.025 359.787 209.961 cv
360.506 209.949 li
cp
360.508 214.261 mo
360.508 216.42 li
359.788 216.42 li
359.788 214.261 li
360.508 214.261 li
cp
360.508 218.579 mo
360.508 220.737 li
359.788 220.737 li
359.788 218.579 li
360.508 218.579 li
cp
360.508 222.896 mo
360.508 225.055 li
359.788 225.055 li
359.788 222.896 li
360.508 222.896 li
cp
360.508 227.214 mo
360.508 229.372 li
359.788 229.372 li
359.788 227.214 li
360.508 227.214 li
cp
360.508 231.531 mo
360.508 233.69 li
359.788 233.69 li
359.788 231.531 li
360.508 231.531 li
cp
360.508 235.849 mo
360.508 238.007 li
359.788 238.007 li
359.788 235.849 li
360.508 235.849 li
cp
360.508 240.166 mo
360.508 242.325 li
359.788 242.325 li
359.788 240.166 li
360.508 240.166 li
cp
360.508 244.483 mo
360.508 246.642 li
359.788 246.642 li
359.788 244.483 li
360.508 244.483 li
cp
360.508 248.801 mo
360.508 250.96 li
359.788 250.96 li
359.788 248.801 li
360.508 248.801 li
cp
360.508 253.118 mo
360.508 255.277 li
359.788 255.277 li
359.788 253.118 li
360.508 253.118 li
cp
360.508 257.436 mo
360.508 259.595 li
359.788 259.595 li
359.788 257.436 li
360.508 257.436 li
cp
360.508 261.753 mo
360.508 263.912 li
359.788 263.912 li
359.788 261.753 li
360.508 261.753 li
cp
360.508 266.071 mo
360.508 268.229 li
359.788 268.229 li
359.788 266.071 li
360.508 266.071 li
cp
360.444 270.372 mo
360.37 271.116 360.233 271.849 360.032 272.569 cv
359.339 272.376 li
359.528 271.696 359.658 271.004 359.728 270.301 cv
360.444 270.372 li
cp
359.236 274.691 mo
358.914 275.363 358.538 276.003 358.106 276.61 cv
357.52 276.194 li
357.927 275.62 358.283 275.016 358.587 274.381 cv
359.236 274.691 li
cp
356.642 278.331 mo
356.104 278.862 355.524 279.342 354.903 279.771 cv
354.494 279.179 li
355.081 278.774 355.629 278.32 356.137 277.819 cv
356.642 278.331 li
cp
352.972 280.874 mo
352.282 281.193 351.569 281.45 350.833 281.644 cv
350.65 280.948 li
351.344 280.765 352.018 280.523 352.67 280.221 cv
352.972 280.874 li
cp
348.64 282.026 mo
348.267 282.058 347.894 282.074 347.52 282.074 cv
346.498 282.074 li
346.498 281.354 li
347.52 281.354 li
347.873 281.354 348.226 281.339 348.578 281.309 cv
348.64 282.026 li
cp
344.339 282.074 mo
342.18 282.074 li
342.18 281.354 li
344.339 281.354 li
344.339 282.074 li
cp
340.021 282.074 mo
337.863 282.074 li
337.863 281.354 li
340.021 281.354 li
340.021 282.074 li
cp
335.704 282.074 mo
333.545 282.074 li
333.545 281.354 li
335.704 281.354 li
335.704 282.074 li
cp
331.386 282.074 mo
329.228 282.074 li
329.228 281.354 li
331.386 281.354 li
331.386 282.074 li
cp
327.069 282.074 mo
324.91 282.074 li
324.91 281.354 li
327.069 281.354 li
327.069 282.074 li
cp
322.751 282.074 mo
320.593 282.074 li
320.593 281.354 li
322.751 281.354 li
322.751 282.074 li
cp
318.434 282.074 mo
316.275 282.074 li
316.275 281.354 li
318.434 281.354 li
318.434 282.074 li
cp
314.117 282.074 mo
311.958 282.074 li
311.958 281.354 li
314.117 281.354 li
314.117 282.074 li
cp
309.799 282.074 mo
307.64 282.074 li
307.64 281.354 li
309.799 281.354 li
309.799 282.074 li
cp
305.482 282.074 mo
303.323 282.074 li
303.323 281.354 li
305.482 281.354 li
305.482 282.074 li
cp
301.164 282.074 mo
299.005 282.074 li
299.005 281.354 li
301.164 281.354 li
301.164 282.074 li
cp
296.847 282.074 mo
294.688 282.074 li
294.688 281.354 li
296.847 281.354 li
296.847 282.074 li
cp
292.529 282.074 mo
290.371 282.074 li
290.371 281.354 li
292.529 281.354 li
292.529 282.074 li
cp
288.212 282.074 mo
286.053 282.074 li
286.053 281.354 li
288.212 281.354 li
288.212 282.074 li
cp
283.894 282.074 mo
281.736 282.074 li
281.736 281.354 li
283.894 281.354 li
283.894 282.074 li
cp
279.577 282.074 mo
277.418 282.074 li
277.418 281.354 li
279.577 281.354 li
279.577 282.074 li
cp
275.259 282.074 mo
273.101 282.074 li
273.101 281.354 li
275.259 281.354 li
275.259 282.074 li
cp
270.942 282.074 mo
268.783 282.074 li
268.783 281.354 li
270.942 281.354 li
270.942 282.074 li
cp
266.625 282.074 mo
264.466 282.074 li
264.466 281.354 li
266.625 281.354 li
266.625 282.074 li
cp
262.307 282.074 mo
260.148 282.074 li
260.148 281.354 li
262.307 281.354 li
262.307 282.074 li
cp
257.99 282.074 mo
255.831 282.074 li
255.831 281.354 li
257.99 281.354 li
257.99 282.074 li
cp
253.672 282.074 mo
251.513 282.074 li
251.513 281.354 li
253.672 281.354 li
253.672 282.074 li
cp
249.355 282.074 mo
247.196 282.074 li
247.196 281.354 li
249.355 281.354 li
249.355 282.074 li
cp
245.037 282.074 mo
242.878 282.074 li
242.878 281.354 li
245.037 281.354 li
245.037 282.074 li
cp
240.72 282.074 mo
238.561 282.074 li
238.561 281.354 li
240.72 281.354 li
240.72 282.074 li
cp
236.402 282.074 mo
234.244 282.074 li
234.244 281.354 li
236.402 281.354 li
236.402 282.074 li
cp
232.085 282.074 mo
229.926 282.074 li
229.926 281.354 li
232.085 281.354 li
232.085 282.074 li
cp
227.767 282.074 mo
225.609 282.074 li
225.609 281.354 li
227.767 281.354 li
227.767 282.074 li
cp
223.45 282.074 mo
221.291 282.074 li
221.291 281.354 li
223.45 281.354 li
223.45 282.074 li
cp
219.132 282.074 mo
216.974 282.074 li
216.974 281.354 li
219.132 281.354 li
219.132 282.074 li
cp
214.831 282.029 mo
214.089 281.967 213.359 281.843 212.639 281.656 cv
212.82 280.959 li
213.5 281.136 214.19 281.254 214.891 281.312 cv
214.831 282.029 li
cp
210.496 280.892 mo
209.82 280.582 209.175 280.217 208.562 279.797 cv
208.969 279.203 li
209.549 279.6 210.157 279.945 210.796 280.238 cv
210.496 280.892 li
cp
206.819 278.363 mo
206.279 277.833 205.788 277.262 205.348 276.647 cv
205.933 276.228 li
206.349 276.809 206.812 277.349 207.322 277.849 cv
206.819 278.363 li
cp
204.211 274.731 mo
203.882 274.048 203.615 273.342 203.409 272.613 cv
204.101 272.418 li
204.296 273.106 204.548 273.773 204.86 274.418 cv
204.211 274.731 li
cp
202.989 270.415 mo
202.943 269.973 202.921 269.53 202.921 269.086 cv
202.921 268.272 li
203.64 268.272 li
203.64 269.086 li
203.64 269.506 203.662 269.924 203.705 270.342 cv
202.989 270.415 li
cp
202.921 266.113 mo
202.921 263.955 li
203.64 263.955 li
203.64 266.113 li
202.921 266.113 li
cp
202.921 261.796 mo
202.921 259.637 li
203.64 259.637 li
203.64 261.796 li
202.921 261.796 li
cp
202.921 257.479 mo
202.921 255.32 li
203.64 255.32 li
203.64 257.479 li
202.921 257.479 li
cp
202.921 253.161 mo
202.921 251.002 li
203.64 251.002 li
203.64 253.161 li
202.921 253.161 li
cp
202.921 248.844 mo
202.921 246.685 li
203.64 246.685 li
203.64 248.844 li
202.921 248.844 li
cp
202.921 244.526 mo
202.921 242.367 li
203.64 242.367 li
203.64 244.526 li
202.921 244.526 li
cp
202.921 240.209 mo
202.921 238.05 li
203.64 238.05 li
203.64 240.209 li
202.921 240.209 li
cp
202.921 235.891 mo
202.921 233.733 li
203.64 233.733 li
203.64 235.891 li
202.921 235.891 li
cp
202.921 231.574 mo
202.921 229.415 li
203.64 229.415 li
203.64 231.574 li
202.921 231.574 li
cp
202.921 227.256 mo
202.921 225.098 li
203.64 225.098 li
203.64 227.256 li
202.921 227.256 li
cp
202.921 222.939 mo
202.921 220.78 li
203.64 220.78 li
203.64 222.939 li
202.921 222.939 li
cp
202.921 218.621 mo
202.921 216.463 li
203.64 216.463 li
203.64 218.621 li
202.921 218.621 li
cp
202.921 214.304 mo
202.921 212.145 li
203.64 212.145 li
203.64 214.304 li
202.921 214.304 li
cp
202.922 209.991 mo
202.931 209.265 203 208.546 203.13 207.831 cv
203.838 207.96 li
203.715 208.634 203.65 209.314 203.641 210 cv
202.922 209.991 li
cp
203.735 205.624 mo
203.994 204.929 204.31 204.26 204.683 203.619 cv
205.305 203.981 li
204.953 204.587 204.654 205.218 204.41 205.875 cv
203.735 205.624 li
cp
205.977 201.783 mo
206.465 201.204 206.999 200.671 207.58 200.186 cv
208.042 200.738 li
207.493 201.197 206.988 201.699 206.527 202.246 cv
205.977 201.783 li
cp
209.422 198.9 mo
210.065 198.529 210.736 198.216 211.433 197.96 cv
211.681 198.635 li
211.022 198.877 210.389 199.173 209.781 199.524 cv
209.422 198.9 li
cp
213.64 197.364 mo
214.354 197.237 215.073 197.171 215.797 197.164 cv
215.804 197.884 li
215.119 197.89 214.44 197.953 213.766 198.072 cv
213.64 197.364 li
cp
215.909 197.164 mo
218.068 197.164 li
218.068 197.884 li
215.909 197.884 li
215.909 197.164 li
cp
.724666 .633692 .581445 .511833 cmyk
f
323.45 106.857 mo
323.45 125.3 li
0 0 0 1 cmyk
@
323.45 129.078 mo
320.931 124.041 li
323.45 125.3 li
325.968 124.041 li
323.45 129.078 li
cp
f
323.45 129.078 mo
320.931 124.041 li
323.45 125.3 li
325.968 124.041 li
323.45 129.078 li
cp
@
230.804 37.7778 mo
232.963 37.7778 li
232.963 38.4974 li
230.804 38.4974 li
230.804 37.7778 li
cp
235.122 37.7778 mo
237.28 37.7778 li
237.28 38.4974 li
235.122 38.4974 li
235.122 37.7778 li
cp
239.439 37.7778 mo
241.598 37.7778 li
241.598 38.4974 li
239.439 38.4974 li
239.439 37.7778 li
cp
243.757 37.7778 mo
245.915 37.7778 li
245.915 38.4974 li
243.757 38.4974 li
243.757 37.7778 li
cp
248.074 37.7778 mo
250.233 37.7778 li
250.233 38.4974 li
248.074 38.4974 li
248.074 37.7778 li
cp
252.392 37.7778 mo
254.55 37.7778 li
254.55 38.4974 li
252.392 38.4974 li
252.392 37.7778 li
cp
256.709 37.7778 mo
258.868 37.7778 li
258.868 38.4974 li
256.709 38.4974 li
256.709 37.7778 li
cp
261.026 37.7778 mo
263.185 37.7778 li
263.185 38.4974 li
261.026 38.4974 li
261.026 37.7778 li
cp
265.344 37.7778 mo
267.503 37.7778 li
267.503 38.4974 li
265.344 38.4974 li
265.344 37.7778 li
cp
269.661 37.7778 mo
271.82 37.7778 li
271.82 38.4974 li
269.661 38.4974 li
269.661 37.7778 li
cp
273.979 37.7778 mo
276.138 37.7778 li
276.138 38.4974 li
273.979 38.4974 li
273.979 37.7778 li
cp
278.296 37.7778 mo
280.455 37.7778 li
280.455 38.4974 li
278.296 38.4974 li
278.296 37.7778 li
cp
282.614 37.7778 mo
284.772 37.7778 li
284.772 38.4974 li
282.614 38.4974 li
282.614 37.7778 li
cp
286.931 37.7778 mo
289.09 37.7778 li
289.09 38.4974 li
286.931 38.4974 li
286.931 37.7778 li
cp
291.249 37.7778 mo
293.407 37.7778 li
293.407 38.4974 li
291.249 38.4974 li
291.249 37.7778 li
cp
295.566 37.7778 mo
297.725 37.7778 li
297.725 38.4974 li
295.566 38.4974 li
295.566 37.7778 li
cp
299.884 37.7778 mo
302.042 37.7778 li
302.042 38.4974 li
299.884 38.4974 li
299.884 37.7778 li
cp
304.201 37.7778 mo
306.36 37.7778 li
306.36 38.4974 li
304.201 38.4974 li
304.201 37.7778 li
cp
308.518 37.7778 mo
310.677 37.7778 li
310.677 38.4974 li
308.518 38.4974 li
308.518 37.7778 li
cp
312.836 37.7778 mo
314.995 37.7778 li
314.995 38.4974 li
312.836 38.4974 li
312.836 37.7778 li
cp
317.153 37.7778 mo
319.312 37.7778 li
319.312 38.4974 li
317.153 38.4974 li
317.153 37.7778 li
cp
321.471 37.7778 mo
323.63 37.7778 li
323.63 38.4974 li
321.471 38.4974 li
321.471 37.7778 li
cp
325.788 37.7778 mo
327.947 37.7778 li
327.947 38.4974 li
325.788 38.4974 li
325.788 37.7778 li
cp
330.106 37.7778 mo
332.265 37.7778 li
332.265 38.4974 li
330.106 38.4974 li
330.106 37.7778 li
cp
334.423 37.7778 mo
336.582 37.7778 li
336.582 38.4974 li
334.423 38.4974 li
334.423 37.7778 li
cp
338.741 37.7778 mo
340.899 37.7778 li
340.899 38.4974 li
338.741 38.4974 li
338.741 37.7778 li
cp
343.058 37.7778 mo
345.217 37.7778 li
345.217 38.4974 li
343.058 38.4974 li
343.058 37.7778 li
cp
347.376 37.7778 mo
349.534 37.7778 li
349.534 38.4974 li
347.376 38.4974 li
347.376 37.7778 li
cp
351.7 37.9325 mo
352.46 38.0637 353.196 38.275 353.909 38.5666 cv
353.637 39.2327 li
352.972 38.9609 352.286 38.7639 351.578 38.6416 cv
351.7 37.9325 li
cp
355.871 39.6208 mo
356.501 40.0498 357.077 40.5407 357.601 41.0937 cv
357.078 41.5885 li
356.59 41.073 356.053 40.6153 355.466 40.2155 cv
355.871 39.6208 li
cp
358.974 42.8952 mo
359.363 43.5388 359.681 44.216 359.926 44.9269 cv
359.246 45.1618 li
359.017 44.499 358.721 43.8677 358.358 43.2679 cv
358.974 42.8952 li
cp
360.434 47.1435 mo
360.483 47.5581 360.508 47.9741 360.508 48.3915 cv
360.508 49.2985 li
359.788 49.2985 li
359.788 48.3915 li
359.788 48.0023 359.765 47.6145 359.72 47.2281 cv
360.434 47.1435 li
cp
360.508 51.4572 mo
360.508 53.6159 li
359.788 53.6159 li
359.788 51.4572 li
360.508 51.4572 li
cp
360.508 55.7747 mo
360.508 57.9334 li
359.788 57.9334 li
359.788 55.7747 li
360.508 55.7747 li
cp
360.508 60.0921 mo
360.508 62.2509 li
359.788 62.2509 li
359.788 60.0921 li
360.508 60.0921 li
cp
360.508 64.4096 mo
360.508 66.5683 li
359.788 66.5683 li
359.788 64.4096 li
360.508 64.4096 li
cp
360.508 68.727 mo
360.508 70.8858 li
359.788 70.8858 li
359.788 68.727 li
360.508 68.727 li
cp
360.508 73.0445 mo
360.508 75.2032 li
359.788 75.2032 li
359.788 73.0445 li
360.508 73.0445 li
cp
360.508 77.362 mo
360.508 79.5207 li
359.788 79.5207 li
359.788 77.362 li
360.508 77.362 li
cp
360.508 81.6794 mo
360.508 83.8382 li
359.788 83.8382 li
359.788 81.6794 li
360.508 81.6794 li
cp
360.508 85.9969 mo
360.508 88.1556 li
359.788 88.1556 li
359.788 85.9969 li
360.508 85.9969 li
cp
360.508 90.3143 mo
360.508 92.4731 li
359.788 92.4731 li
359.788 90.3143 li
360.508 90.3143 li
cp
360.508 94.6318 mo
360.508 96.2434 li
360.508 96.4234 360.503 96.6033 360.494 96.783 cv
359.776 96.7464 li
359.784 96.5788 359.788 96.4111 359.788 96.2434 cv
359.788 94.6318 li
360.508 94.6318 li
cp
360.148 98.9824 mo
359.952 99.7184 359.679 100.425 359.331 101.102 cv
358.691 100.773 li
359.016 100.141 359.27 99.4828 359.453 98.7967 cv
360.148 98.9824 li
cp
358.093 102.983 mo
357.609 103.573 357.067 104.104 356.468 104.576 cv
356.022 104.011 li
356.581 103.571 357.086 103.076 357.537 102.527 cv
358.093 102.983 li
cp
354.567 105.773 mo
353.881 106.11 353.167 106.369 352.425 106.551 cv
352.253 105.852 li
352.945 105.682 353.61 105.441 354.25 105.127 cv
354.567 105.773 li
cp
350.233 106.852 mo
350.12 106.855 350.007 106.857 349.894 106.857 cv
348.08 106.857 li
348.08 106.138 li
349.894 106.138 li
350 106.138 350.105 106.136 350.21 106.133 cv
350.233 106.852 li
cp
345.922 106.857 mo
343.763 106.857 li
343.763 106.138 li
345.922 106.138 li
345.922 106.857 li
cp
341.604 106.857 mo
339.445 106.857 li
339.445 106.138 li
341.604 106.138 li
341.604 106.857 li
cp
337.287 106.857 mo
335.128 106.857 li
335.128 106.138 li
337.287 106.138 li
337.287 106.857 li
cp
332.969 106.857 mo
330.81 106.857 li
330.81 106.138 li
332.969 106.138 li
332.969 106.857 li
cp
328.652 106.857 mo
326.493 106.857 li
326.493 106.138 li
328.652 106.138 li
328.652 106.857 li
cp
324.334 106.857 mo
322.175 106.857 li
322.175 106.138 li
324.334 106.138 li
324.334 106.857 li
cp
320.017 106.857 mo
317.858 106.857 li
317.858 106.138 li
320.017 106.138 li
320.017 106.857 li
cp
315.699 106.857 mo
313.541 106.857 li
313.541 106.138 li
315.699 106.138 li
315.699 106.857 li
cp
311.382 106.857 mo
309.223 106.857 li
309.223 106.138 li
311.382 106.138 li
311.382 106.857 li
cp
307.064 106.857 mo
304.906 106.857 li
304.906 106.138 li
307.064 106.138 li
307.064 106.857 li
cp
302.747 106.857 mo
300.588 106.857 li
300.588 106.138 li
302.747 106.138 li
302.747 106.857 li
cp
298.429 106.857 mo
296.271 106.857 li
296.271 106.138 li
298.429 106.138 li
298.429 106.857 li
cp
294.112 106.857 mo
291.953 106.857 li
291.953 106.138 li
294.112 106.138 li
294.112 106.857 li
cp
289.795 106.857 mo
287.636 106.857 li
287.636 106.138 li
289.795 106.138 li
289.795 106.857 li
cp
285.477 106.857 mo
283.318 106.857 li
283.318 106.138 li
285.477 106.138 li
285.477 106.857 li
cp
281.16 106.857 mo
279.001 106.857 li
279.001 106.138 li
281.16 106.138 li
281.16 106.857 li
cp
276.842 106.857 mo
274.683 106.857 li
274.683 106.138 li
276.842 106.138 li
276.842 106.857 li
cp
272.525 106.857 mo
270.366 106.857 li
270.366 106.138 li
272.525 106.138 li
272.525 106.857 li
cp
268.207 106.857 mo
266.048 106.857 li
266.048 106.138 li
268.207 106.138 li
268.207 106.857 li
cp
263.89 106.857 mo
261.731 106.857 li
261.731 106.138 li
263.89 106.138 li
263.89 106.857 li
cp
259.572 106.857 mo
257.414 106.857 li
257.414 106.138 li
259.572 106.138 li
259.572 106.857 li
cp
255.255 106.857 mo
253.096 106.857 li
253.096 106.138 li
255.255 106.138 li
255.255 106.857 li
cp
250.937 106.857 mo
248.779 106.857 li
248.779 106.138 li
250.937 106.138 li
250.937 106.857 li
cp
246.62 106.857 mo
244.461 106.857 li
244.461 106.138 li
246.62 106.138 li
246.62 106.857 li
cp
242.302 106.857 mo
240.144 106.857 li
240.144 106.138 li
242.302 106.138 li
242.302 106.857 li
cp
237.985 106.857 mo
235.826 106.857 li
235.826 106.138 li
237.985 106.138 li
237.985 106.857 li
cp
233.668 106.857 mo
231.509 106.857 li
231.509 106.138 li
233.668 106.138 li
233.668 106.857 li
cp
229.35 106.857 mo
227.191 106.857 li
227.191 106.138 li
229.35 106.138 li
229.35 106.857 li
cp
225.033 106.757 mo
224.274 106.652 223.534 106.467 222.815 106.202 cv
223.064 105.527 li
223.734 105.774 224.424 105.946 225.132 106.044 cv
225.033 106.757 li
cp
220.811 105.212 mo
220.169 104.806 219.577 104.335 219.035 103.802 cv
219.54 103.289 li
220.045 103.787 220.597 104.225 221.196 104.604 cv
220.811 105.212 li
cp
217.599 102.044 mo
217.191 101.419 216.852 100.758 216.583 100.061 cv
217.255 99.8025 li
217.505 100.452 217.821 101.068 218.201 101.651 cv
217.599 102.044 li
cp
215.994 97.8424 mo
215.913 97.3124 215.873 96.7794 215.873 96.2434 cv
215.873 95.6813 li
216.593 95.6813 li
216.593 96.2434 li
216.593 96.7431 216.63 97.2399 216.706 97.734 cv
215.994 97.8424 li
cp
215.873 93.5225 mo
215.873 91.3638 li
216.593 91.3638 li
216.593 93.5225 li
215.873 93.5225 li
cp
215.873 89.2051 mo
215.873 87.0464 li
216.593 87.0464 li
216.593 89.2051 li
215.873 89.2051 li
cp
215.873 84.8876 mo
215.873 82.7289 li
216.593 82.7289 li
216.593 84.8876 li
215.873 84.8876 li
cp
215.873 80.5702 mo
215.873 78.4114 li
216.593 78.4114 li
216.593 80.5702 li
215.873 80.5702 li
cp
215.873 76.2527 mo
215.873 74.094 li
216.593 74.094 li
216.593 76.2527 li
215.873 76.2527 li
cp
215.873 71.9353 mo
215.873 69.7765 li
216.593 69.7765 li
216.593 71.9353 li
215.873 71.9353 li
cp
215.873 67.6178 mo
215.873 65.4591 li
216.593 65.4591 li
216.593 67.6178 li
215.873 67.6178 li
cp
215.873 63.3003 mo
215.873 61.1416 li
216.593 61.1416 li
216.593 63.3003 li
215.873 63.3003 li
cp
215.873 58.9829 mo
215.873 56.8242 li
216.593 56.8242 li
216.593 58.9829 li
215.873 58.9829 li
cp
215.873 54.6654 mo
215.873 52.5067 li
216.593 52.5067 li
216.593 54.6654 li
215.873 54.6654 li
cp
215.873 50.348 mo
215.873 48.3915 li
215.873 48.3256 215.874 48.2595 215.875 48.1933 cv
216.594 48.2066 li
216.593 48.2682 216.593 48.3298 216.593 48.3915 cv
216.593 50.348 li
215.873 50.348 li
cp
216.144 46.008 mo
216.316 45.262 216.566 44.5431 216.893 43.851 cv
217.544 44.1588 li
217.238 44.804 217.006 45.4742 216.845 46.1696 cv
216.144 46.008 li
cp
218.062 41.936 mo
218.526 41.3306 219.049 40.7815 219.631 40.2889 cv
220.096 40.8382 li
219.553 41.2975 219.066 41.8093 218.633 42.3736 cv
218.062 41.936 li
cp
221.498 39.0235 mo
222.168 38.6662 222.869 38.3843 223.601 38.1777 cv
223.796 38.8701 li
223.115 39.0628 222.461 39.3256 221.836 39.6586 cv
221.498 39.0235 li
cp
225.805 37.7997 mo
226.032 37.7851 226.259 37.7778 226.487 37.7778 cv
228.645 37.7778 li
228.645 38.4974 li
226.487 38.4974 li
226.275 38.4974 226.063 38.5042 225.851 38.5178 cv
225.805 37.7997 li
cp
.724666 .633692 .581445 .511833 cmyk
f
316.254 184.571 mo
316.974 184.571 li
316.974 192.94 li
0 0 0 1 cmyk
@
316.974 196.718 mo
314.455 191.681 li
316.974 192.94 li
319.492 191.681 li
316.974 196.718 li
cp
f
316.974 196.718 mo
314.455 191.681 li
316.974 192.94 li
319.492 191.681 li
316.974 196.718 li
cp
@
197.416 127.365 mo
199.575 127.365 li
199.575 128.085 li
197.416 128.085 li
197.416 127.365 li
cp
201.733 127.365 mo
203.892 127.365 li
203.892 128.085 li
201.733 128.085 li
201.733 127.365 li
cp
206.051 127.365 mo
208.21 127.365 li
208.21 128.085 li
206.051 128.085 li
206.051 127.365 li
cp
210.368 127.365 mo
212.527 127.365 li
212.527 128.085 li
210.368 128.085 li
210.368 127.365 li
cp
214.686 127.365 mo
216.844 127.365 li
216.844 128.085 li
214.686 128.085 li
214.686 127.365 li
cp
219.003 127.365 mo
221.162 127.365 li
221.162 128.085 li
219.003 128.085 li
219.003 127.365 li
cp
223.321 127.365 mo
225.479 127.365 li
225.479 128.085 li
223.321 128.085 li
223.321 127.365 li
cp
227.638 127.365 mo
229.797 127.365 li
229.797 128.085 li
227.638 128.085 li
227.638 127.365 li
cp
231.956 127.365 mo
234.114 127.365 li
234.114 128.085 li
231.956 128.085 li
231.956 127.365 li
cp
236.273 127.365 mo
238.432 127.365 li
238.432 128.085 li
236.273 128.085 li
236.273 127.365 li
cp
240.59 127.365 mo
242.749 127.365 li
242.749 128.085 li
240.59 128.085 li
240.59 127.365 li
cp
244.908 127.365 mo
247.067 127.365 li
247.067 128.085 li
244.908 128.085 li
244.908 127.365 li
cp
249.225 127.365 mo
251.384 127.365 li
251.384 128.085 li
249.225 128.085 li
249.225 127.365 li
cp
253.543 127.365 mo
255.702 127.365 li
255.702 128.085 li
253.543 128.085 li
253.543 127.365 li
cp
257.86 127.365 mo
260.019 127.365 li
260.019 128.085 li
257.86 128.085 li
257.86 127.365 li
cp
262.178 127.365 mo
264.336 127.365 li
264.336 128.085 li
262.178 128.085 li
262.178 127.365 li
cp
266.495 127.365 mo
268.654 127.365 li
268.654 128.085 li
266.495 128.085 li
266.495 127.365 li
cp
270.813 127.365 mo
272.971 127.365 li
272.971 128.085 li
270.813 128.085 li
270.813 127.365 li
cp
275.13 127.365 mo
277.289 127.365 li
277.289 128.085 li
275.13 128.085 li
275.13 127.365 li
cp
279.448 127.365 mo
281.606 127.365 li
281.606 128.085 li
279.448 128.085 li
279.448 127.365 li
cp
283.765 127.365 mo
285.924 127.365 li
285.924 128.085 li
283.765 128.085 li
283.765 127.365 li
cp
288.083 127.365 mo
290.241 127.365 li
290.241 128.085 li
288.083 128.085 li
288.083 127.365 li
cp
292.4 127.365 mo
294.559 127.365 li
294.559 128.085 li
292.4 128.085 li
292.4 127.365 li
cp
296.717 127.365 mo
298.876 127.365 li
298.876 128.085 li
296.717 128.085 li
296.717 127.365 li
cp
301.035 127.365 mo
303.194 127.365 li
303.194 128.085 li
301.035 128.085 li
301.035 127.365 li
cp
305.352 127.365 mo
307.511 127.365 li
307.511 128.085 li
305.352 128.085 li
305.352 127.365 li
cp
309.67 127.365 mo
311.829 127.365 li
311.829 128.085 li
309.67 128.085 li
309.67 127.365 li
cp
313.987 127.365 mo
316.146 127.365 li
316.146 128.085 li
313.987 128.085 li
313.987 127.365 li
cp
318.305 127.365 mo
320.463 127.365 li
320.463 128.085 li
318.305 128.085 li
318.305 127.365 li
cp
322.622 127.365 mo
324.781 127.365 li
324.781 128.085 li
322.622 128.085 li
322.622 127.365 li
cp
326.94 127.365 mo
329.098 127.365 li
329.098 128.085 li
326.94 128.085 li
326.94 127.365 li
cp
331.257 127.365 mo
333.416 127.365 li
333.416 128.085 li
331.257 128.085 li
331.257 127.365 li
cp
335.575 127.365 mo
337.733 127.365 li
337.733 128.085 li
335.575 128.085 li
335.575 127.365 li
cp
339.892 127.365 mo
342.051 127.365 li
342.051 128.085 li
339.892 128.085 li
339.892 127.365 li
cp
344.21 127.365 mo
346.368 127.365 li
346.368 128.085 li
344.21 128.085 li
344.21 127.365 li
cp
348.527 127.365 mo
350.686 127.365 li
350.686 128.085 li
348.527 128.085 li
348.527 127.365 li
cp
352.853 127.451 mo
353.618 127.558 354.357 127.761 355.069 128.061 cv
354.79 128.724 li
354.135 128.449 353.456 128.262 352.753 128.163 cv
352.853 127.451 li
cp
357.015 129.19 mo
357.627 129.656 358.168 130.193 358.64 130.801 cv
358.071 131.242 li
357.638 130.684 357.14 130.19 356.579 129.761 cv
357.015 129.19 li
cp
359.785 132.74 mo
360.09 133.45 360.299 134.187 360.412 134.951 cv
359.7 135.056 li
359.596 134.354 359.404 133.677 359.124 133.024 cv
359.785 132.74 li
cp
360.508 137.12 mo
360.508 139.278 li
359.788 139.278 li
359.788 137.12 li
360.508 137.12 li
cp
360.508 141.437 mo
360.508 143.596 li
359.788 143.596 li
359.788 141.437 li
360.508 141.437 li
cp
360.508 145.755 mo
360.508 147.913 li
359.788 147.913 li
359.788 145.755 li
360.508 145.755 li
cp
360.508 150.072 mo
360.508 152.231 li
359.788 152.231 li
359.788 150.072 li
360.508 150.072 li
cp
360.508 154.389 mo
360.508 156.548 li
359.788 156.548 li
359.788 154.389 li
360.508 154.389 li
cp
360.508 158.707 mo
360.508 160.866 li
359.788 160.866 li
359.788 158.707 li
360.508 158.707 li
cp
360.508 163.024 mo
360.508 165.183 li
359.788 165.183 li
359.788 163.024 li
360.508 163.024 li
cp
360.508 167.342 mo
360.508 169.501 li
359.788 169.501 li
359.788 167.342 li
360.508 167.342 li
cp
360.508 171.659 mo
360.508 173.818 li
359.788 173.818 li
359.788 171.659 li
360.508 171.659 li
cp
360.508 175.977 mo
360.508 176.044 li
360.508 176.764 360.422 177.474 360.249 178.173 cv
359.551 178 li
359.709 177.358 359.788 176.706 359.788 176.044 cv
359.788 175.977 li
360.508 175.977 li
cp
359.422 180.301 mo
359.056 180.972 358.611 181.585 358.087 182.141 cv
357.563 181.647 li
358.045 181.136 358.454 180.573 358.791 179.956 cv
359.422 180.301 li
cp
356.321 183.587 mo
355.674 183.99 354.986 184.305 354.259 184.531 cv
354.045 183.844 li
354.714 183.636 355.346 183.347 355.94 182.976 cv
356.321 183.587 li
cp
352.041 184.921 mo
351.901 184.928 351.761 184.931 351.621 184.931 cv
349.885 184.931 li
349.885 184.212 li
351.621 184.212 li
351.75 184.212 351.879 184.209 352.007 184.203 cv
352.041 184.921 li
cp
347.727 184.931 mo
345.568 184.931 li
345.568 184.212 li
347.727 184.212 li
347.727 184.931 li
cp
343.409 184.931 mo
341.251 184.931 li
341.251 184.212 li
343.409 184.212 li
343.409 184.931 li
cp
339.092 184.931 mo
336.933 184.931 li
336.933 184.212 li
339.092 184.212 li
339.092 184.931 li
cp
334.774 184.931 mo
332.616 184.931 li
332.616 184.212 li
334.774 184.212 li
334.774 184.931 li
cp
330.457 184.931 mo
328.298 184.931 li
328.298 184.212 li
330.457 184.212 li
330.457 184.931 li
cp
326.139 184.931 mo
323.981 184.931 li
323.981 184.212 li
326.139 184.212 li
326.139 184.931 li
cp
321.822 184.931 mo
319.663 184.931 li
319.663 184.212 li
321.822 184.212 li
321.822 184.931 li
cp
317.505 184.931 mo
315.346 184.931 li
315.346 184.212 li
317.505 184.212 li
317.505 184.931 li
cp
313.187 184.931 mo
311.028 184.931 li
311.028 184.212 li
313.187 184.212 li
313.187 184.931 li
cp
308.87 184.931 mo
306.711 184.931 li
306.711 184.212 li
308.87 184.212 li
308.87 184.931 li
cp
304.552 184.931 mo
302.393 184.931 li
302.393 184.212 li
304.552 184.212 li
304.552 184.931 li
cp
300.235 184.931 mo
298.076 184.931 li
298.076 184.212 li
300.235 184.212 li
300.235 184.931 li
cp
295.917 184.931 mo
293.759 184.931 li
293.759 184.212 li
295.917 184.212 li
295.917 184.931 li
cp
291.6 184.931 mo
289.441 184.931 li
289.441 184.212 li
291.6 184.212 li
291.6 184.931 li
cp
287.282 184.931 mo
285.124 184.931 li
285.124 184.212 li
287.282 184.212 li
287.282 184.931 li
cp
282.965 184.931 mo
280.806 184.931 li
280.806 184.212 li
282.965 184.212 li
282.965 184.931 li
cp
278.647 184.931 mo
276.489 184.931 li
276.489 184.212 li
278.647 184.212 li
278.647 184.931 li
cp
274.33 184.931 mo
272.171 184.931 li
272.171 184.212 li
274.33 184.212 li
274.33 184.931 li
cp
270.012 184.931 mo
267.854 184.931 li
267.854 184.212 li
270.012 184.212 li
270.012 184.931 li
cp
265.695 184.931 mo
263.536 184.931 li
263.536 184.212 li
265.695 184.212 li
265.695 184.931 li
cp
261.378 184.931 mo
259.219 184.931 li
259.219 184.212 li
261.378 184.212 li
261.378 184.931 li
cp
257.06 184.931 mo
254.901 184.931 li
254.901 184.212 li
257.06 184.212 li
257.06 184.931 li
cp
252.743 184.931 mo
250.584 184.931 li
250.584 184.212 li
252.743 184.212 li
252.743 184.931 li
cp
248.425 184.931 mo
246.266 184.931 li
246.266 184.212 li
248.425 184.212 li
248.425 184.931 li
cp
244.108 184.931 mo
241.949 184.931 li
241.949 184.212 li
244.108 184.212 li
244.108 184.931 li
cp
239.79 184.931 mo
237.632 184.931 li
237.632 184.212 li
239.79 184.212 li
239.79 184.931 li
cp
235.473 184.931 mo
233.314 184.931 li
233.314 184.212 li
235.473 184.212 li
235.473 184.931 li
cp
231.155 184.931 mo
228.997 184.931 li
228.997 184.212 li
231.155 184.212 li
231.155 184.931 li
cp
226.838 184.931 mo
224.679 184.931 li
224.679 184.212 li
226.838 184.212 li
226.838 184.931 li
cp
222.52 184.931 mo
220.362 184.931 li
220.362 184.212 li
222.52 184.212 li
222.52 184.931 li
cp
218.203 184.931 mo
216.044 184.931 li
216.044 184.212 li
218.203 184.212 li
218.203 184.931 li
cp
213.885 184.931 mo
211.727 184.931 li
211.727 184.212 li
213.885 184.212 li
213.885 184.931 li
cp
209.568 184.931 mo
207.409 184.931 li
207.409 184.212 li
209.568 184.212 li
209.568 184.931 li
cp
205.251 184.931 mo
203.092 184.931 li
203.092 184.212 li
205.251 184.212 li
205.251 184.931 li
cp
200.933 184.931 mo
198.774 184.931 li
198.774 184.212 li
200.933 184.212 li
200.933 184.931 li
cp
196.616 184.931 mo
194.457 184.931 li
194.457 184.212 li
196.616 184.212 li
196.616 184.931 li
cp
192.298 184.895 mo
191.534 184.826 190.792 184.661 190.071 184.4 cv
190.316 183.723 li
190.979 183.963 191.661 184.115 192.363 184.178 cv
192.298 184.895 li
cp
188.066 183.369 mo
187.433 182.934 186.866 182.426 186.364 181.843 cv
186.909 181.374 li
187.37 181.909 187.892 182.376 188.474 182.776 cv
188.066 183.369 li
cp
185.117 179.953 mo
184.778 179.261 184.534 178.537 184.383 177.782 cv
185.089 177.641 li
185.227 178.335 185.452 179 185.763 179.636 cv
185.117 179.953 li
cp
184.212 175.6 mo
184.212 173.441 li
184.931 173.441 li
184.931 175.6 li
184.212 175.6 li
cp
184.212 171.282 mo
184.212 169.123 li
184.931 169.123 li
184.931 171.282 li
184.212 171.282 li
cp
184.212 166.965 mo
184.212 164.806 li
184.931 164.806 li
184.931 166.965 li
184.212 166.965 li
cp
184.212 162.647 mo
184.212 160.489 li
184.931 160.489 li
184.931 162.647 li
184.212 162.647 li
cp
184.212 158.33 mo
184.212 156.171 li
184.931 156.171 li
184.931 158.33 li
184.212 158.33 li
cp
184.212 154.012 mo
184.212 151.854 li
184.931 151.854 li
184.931 154.012 li
184.212 154.012 li
cp
184.212 149.695 mo
184.212 147.536 li
184.931 147.536 li
184.931 149.695 li
184.212 149.695 li
cp
184.212 145.377 mo
184.212 143.219 li
184.931 143.219 li
184.931 145.377 li
184.212 145.377 li
cp
184.212 141.06 mo
184.212 138.901 li
184.931 138.901 li
184.931 141.06 li
184.212 141.06 li
cp
184.212 136.743 mo
184.212 136.252 li
184.212 135.683 184.266 135.12 184.374 134.562 cv
185.08 134.699 li
184.981 135.212 184.931 135.729 184.931 136.252 cv
184.931 136.743 li
184.212 136.743 li
cp
185.096 132.386 mo
185.427 131.702 185.839 131.07 186.332 130.49 cv
186.88 130.957 li
186.427 131.489 186.048 132.07 185.744 132.699 cv
185.096 132.386 li
cp
188.027 128.955 mo
188.648 128.523 189.313 128.176 190.023 127.914 cv
190.272 128.589 li
189.62 128.83 189.008 129.149 188.437 129.545 cv
188.027 128.955 li
cp
192.252 127.405 mo
192.533 127.379 192.816 127.365 193.098 127.365 cv
195.257 127.365 li
195.257 128.085 li
193.098 128.085 li
192.838 128.085 192.579 128.097 192.32 128.122 cv
192.252 127.405 li
cp
.724666 .633692 .581445 .511833 cmyk
f
198.963 309.058 mo
159.386 309.058 li
159.386 261.113 li
0 0 0 1 cmyk
@
159.386 257.335 mo
161.905 262.372 li
159.386 261.113 li
156.868 262.372 li
159.386 257.335 li
cp
f
159.386 257.335 mo
161.905 262.372 li
159.386 261.113 li
156.868 262.372 li
159.386 257.335 li
cp
@
4 ml
207.166 295.386 mo
351.945 295.386 li
354.21 295.386 356.144 296.187 357.745 297.789 cv
359.347 299.391 360.148 301.324 360.148 303.589 cv
360.148 341.871 li
360.148 344.136 359.347 346.07 357.745 347.671 cv
356.144 349.273 354.21 350.074 351.945 350.074 cv
207.166 350.074 li
204.901 350.074 202.967 349.273 201.366 347.671 cv
199.764 346.07 198.963 344.136 198.963 341.871 cv
198.963 303.589 li
198.963 301.324 199.764 299.391 201.366 297.789 cv
202.967 296.187 204.901 295.386 207.166 295.386 cv
cp
.724666 .633692 .581445 .511833 cmyk
@
10 ml
135.64 180.254 mo
133.481 180.254 li
133.481 161.092 li
0 0 0 1 cmyk
@
133.481 157.314 mo
136 162.351 li
133.481 161.092 li
130.963 162.351 li
133.481 157.314 li
cp
f
133.481 157.314 mo
136 162.351 li
133.481 161.092 li
130.963 162.351 li
133.481 157.314 li
cp
@
4 ml
33.5323 180.254 mo
162.193 180.254 li
165.292 180.254 167.938 181.35 170.13 183.542 cv
172.322 185.734 173.418 188.38 173.418 191.479 cv
173.418 243.865 li
173.418 246.964 172.322 249.61 170.13 251.802 cv
167.938 253.994 165.292 255.09 162.193 255.09 cv
33.5323 255.09 li
30.4325 255.09 27.7866 253.994 25.5947 251.802 cv
23.4028 249.61 22.3069 246.964 22.3069 243.865 cv
22.3069 191.479 li
22.3069 188.38 23.4028 185.734 25.5947 183.542 cv
27.7866 181.35 30.4325 180.254 33.5323 180.254 cv
cp
.724666 .633692 .581445 .511833 cmyk
@
10 ml
114.053 111.175 mo
114.053 97.0493 li
0 0 0 1 cmyk
@
114.053 93.2715 mo
116.571 98.3086 li
114.053 97.0493 li
111.534 98.3086 li
114.053 93.2715 li
cp
f
114.053 93.2715 mo
116.571 98.3086 li
114.053 97.0493 li
111.534 98.3086 li
114.053 93.2715 li
cp
@
4 ml
80.9164 110.815 mo
146.47 110.815 li
148.348 110.815 149.95 111.479 151.278 112.806 cv
152.606 114.134 153.27 115.737 153.27 117.615 cv
153.27 149.348 li
153.27 151.226 152.606 152.829 151.278 154.156 cv
149.95 155.484 148.348 156.148 146.47 156.148 cv
80.9164 156.148 li
79.0386 156.148 77.4358 155.484 76.1081 154.156 cv
74.7803 152.829 74.1164 151.226 74.1164 149.348 cv
74.1164 117.615 li
74.1164 115.737 74.7803 114.134 76.1081 112.806 cv
77.4358 111.479 79.0386 110.815 80.9164 110.815 cv
cp
.724666 .633692 .581445 .511833 cmyk
@
10 ml
184.571 32.0212 mo
183.852 32.0212 li
183.852 51.9031 li
@
183.852 55.6808 mo
181.333 50.6438 li
183.852 51.9031 li
186.37 50.6438 li
183.852 55.6808 li
cp
f
183.852 55.6808 mo
181.333 50.6438 li
183.852 51.9031 li
186.37 50.6438 li
183.852 55.6808 li
cp
@
2.15873 lw
4 ml
136.756 5.03704 mo
232.387 5.03704 li
235.05 5.03704 236.381 6.36825 236.381 9.03069 cv
236.381 27.6677 li
236.381 30.3302 235.05 31.6614 232.387 31.6614 cv
136.756 31.6614 li
134.093 31.6614 132.762 30.3302 132.762 27.6677 cv
132.762 9.03069 li
132.762 6.36825 134.093 5.03704 136.756 5.03704 cv
cp
@
.719577 lw
10 ml
115.492 18.3492 mo
129.884 18.3492 li
118.37 18.3492 li
128.178 18.3492 li
@
131.956 18.3492 mo
126.919 20.8677 li
128.178 18.3492 li
126.919 15.8307 li
131.956 18.3492 li
cp
f
131.956 18.3492 mo
126.919 20.8677 li
128.178 18.3492 li
126.919 15.8307 li
131.956 18.3492 li
cp
@
115.492 18.3492 mo
129.884 18.3492 li
118.37 18.3492 li
128.178 18.3492 li
@
131.956 18.3492 mo
126.919 20.8677 li
128.178 18.3492 li
126.919 15.8307 li
131.956 18.3492 li
cp
f
131.956 18.3492 mo
126.919 20.8677 li
128.178 18.3492 li
126.919 15.8307 li
131.956 18.3492 li
cp
@
35.324 287.111 mo
37.4827 287.111 li
37.4827 287.831 li
35.324 287.831 li
35.324 287.111 li
cp
39.6415 287.111 mo
41.8002 287.111 li
41.8002 287.831 li
39.6415 287.831 li
39.6415 287.111 li
cp
43.9589 287.111 mo
46.1177 287.111 li
46.1177 287.831 li
43.9589 287.831 li
43.9589 287.111 li
cp
48.2764 287.111 mo
48.7225 287.111 li
49.682 287.111 50.1617 287.591 50.1617 288.55 cv
50.1617 288.736 li
49.4421 288.736 li
49.4421 288.55 li
49.4421 288.071 49.2023 287.831 48.7225 287.831 cv
48.2764 287.831 li
48.2764 287.111 li
cp
50.1617 290.895 mo
50.1617 293.054 li
49.4421 293.054 li
49.4421 290.895 li
50.1617 290.895 li
cp
48.6237 295.026 mo
46.465 295.026 li
46.465 294.307 li
48.6237 294.307 li
48.6237 295.026 li
cp
44.3062 295.026 mo
42.1475 295.026 li
42.1475 294.307 li
44.3062 294.307 li
44.3062 295.026 li
cp
39.9888 295.026 mo
37.83 295.026 li
37.83 294.307 li
39.9888 294.307 li
39.9888 295.026 li
cp
35.6713 295.026 mo
33.5126 295.026 li
33.5126 294.307 li
35.6713 294.307 li
35.6713 295.026 li
cp
31.3539 295.026 mo
31.0066 295.026 li
30.6092 295.026 30.27 294.886 29.9889 294.605 cv
29.7079 294.324 29.5674 293.985 29.5674 293.587 cv
29.5674 293.302 li
30.287 293.302 li
30.287 293.587 li
30.287 294.067 30.5268 294.307 31.0066 294.307 cv
31.3539 294.307 li
31.3539 295.026 li
cp
29.5674 291.144 mo
29.5674 288.985 li
30.287 288.985 li
30.287 291.144 li
29.5674 291.144 li
cp
31.0066 287.111 mo
33.1653 287.111 li
33.1653 287.831 li
31.0066 287.831 li
31.0066 287.111 li
cp
f
4 ml
31.0066 301.862 mo
48.7225 301.862 li
49.4421 301.862 49.8019 302.222 49.8019 302.942 cv
49.8019 307.979 li
49.8019 308.698 49.4421 309.058 48.7225 309.058 cv
31.0066 309.058 li
30.287 309.058 29.9272 308.698 29.9272 307.979 cv
29.9272 302.942 li
29.9272 302.222 30.287 301.862 31.0066 301.862 cv
cp
@
2.15873 lw
31.0066 316.254 mo
48.7225 316.254 li
49.4421 316.254 49.8019 316.614 49.8019 317.333 cv
49.8019 322.37 li
49.8019 323.09 49.4421 323.45 48.7225 323.45 cv
31.0066 323.45 li
30.287 323.45 29.9272 323.09 29.9272 322.37 cv
29.9272 317.333 li
29.9272 316.614 30.287 316.254 31.0066 316.254 cv
cp
@
.719577 lw
23.0265 270.921 mo
150.895 270.921 li
150.895 328.487 li
23.0265 328.487 li
cp
0 0 0 1 cmyk
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b637674208de93e9e000000bc0000036c6670
676de80497d30000042800000a1d676c79666042f68300005e4c000022b8
6865616497cde50d00000e4800000036686865610a220fad00000e800000
0024686d747837741f4300000ea4000022546c6f636101218cf0000030f8
000022586d61787010ff0b2d00005350000000206e616d657dcc29c50000
53700000070c70726570bc836e3100005a7c000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
00000000d5411b0d5f0f3cf500110800000000005f4d8f0000000000d567
0beef865fc270b9108f9000000090001000100000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000008950512
0042000000000239000002390000023900ed02d700520473000004730040
071d0042055600590187009c02aa008e02aa0044031d004e04ac005c0239
00aa02aa0055023900af0239000004730040047300c40473004004730031
04730034047300420473004d0473004b0473004204730049023900e30239
00e304ac001c04ac005c04ac001c0473009c081f00e10556001e05560097
05c7005a05c700a5055600af04e300af0639006305c700a1023900c90400
00230556009c0473009c06aa009705c7009c06390050055600af06390050
05c700b40556006004e3002105c700aa05560034078d00250556002a0556
002a04e3002f023900800239ffbb0239002f03c100780473000002aa0026
04730052047300760400003b04730038047300480239001c0473003d0473
008401c7008401c7ffda0400008001c7008906aa0084047300840473003b
047300760473003c02aa00890400004202390017047300800400000b05c7
00120400000b040000150400003402acffd50214009002ac002a04ac0012
0556001e0556001e05c7005a055600af05c7009c0639005005c700aa0473
005204730052047300520473005204730052047300520400003b04730048
047300480473004804730048023900670239000802390000023900250473
00840473003b0473003b0473003b0473003b0473003b0473008004730080
0473008004730080047300500333006f04730068047300380473004b02cd
0095044cfff504e300c705e5001505e50012080000ed02aa008a02aa0052
0464005c080000100639004205b4002a0464005c0464005a0464005c0473
ffe1049cffb403f4006a05b400280696001c0464002f0231ff7902f6003b
02ec00310625005e071d004904e3005c04e300ba02aa00e804ac005c0464
ffef047300280464005c04e50071047300c2047300c2080000ed02390000
0556001e0556001e0639005008000049078d00470473fffb080000f102aa
004e02aa004e01c7008401c700aa0464005c03f40042040000150556002a
0156feaa05f4006002aa00b402aa00aa0400001c0400001c047300500239
009701c700aa02aa004e0800000e0556001e055600af0556001e055600af
055600af0239006b0239fff9023900200239000206390050063900500652
00690639005005c700aa05c700aa05c700aa023900bd02aa002a02aafff7
02aa001502aa001902aa00f702aa008402aa007902aaffff02aa00a102aa
002a0473ffe801c7ffd7055600600400004204e3002f0400003402140090
05c700210473003d0556002a04000015055600800473008004ac005c04ac
007402aa005702aa000b02aa000706ac005a06ac00a306ac004b04730000
063900630473003d023900c9055600600400004205c7005a0400003b05c7
005a0400003b047300380556001e047300520556001e047300520556001e
0473005205c7005a0400003b05c7005a0400003b05c700a5054800380556
00af04730048055600af04730048055600af04730048055600af04730048
055600af04730048063900630473003d063900630473003d063900630473
003d0473003d05c700a10473008405c700350473003e038f006903710044
03330059031f00650239003501c7ffdf063900c9038e00840400002301c7
ffa3055600320400fff10473009c021f00830473009c01c7000c0473009c
021a004e0473009c027b008905c7009c0473008405c7002a0473000a05c7
009c047300840473000e063900500473003b063900500473003b06390050
0473003b05c700b402aa008905c7004902aa001705c700b402aa00420556
006004000042055600600400004204e300210239001704e3002102e10017
04e30021028fffe205c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa0473008005c700aa04730080078d0025
05c700120556002a0400001504e3002f0400003404e3002f040000340556
00600400004204e30021023900170473004b0000fcfc0000fcfc0000fc9c
0000fc680000fc860000fc8a0000fd690000fcc40000fcf60000fc700000
fc9c0000fd5b0000fcea0000fd120000fc9105c70021063900630473003d
0473009c01c700890556009c0400008005c7009c0473008405c700b402aa
008901aaffdb023700e102aa005501c7ffda040000800239001c04730048
047300480400003a047300510000fd3c0000fc660000fc8a0239fffb0239
fffb05c7009c047300840000fcc4056d0024054c00980556009804270098
059c00250556009807f0000a0554004505c7009805c7009805560098057e
002506aa009805c700980639005005c700980556009805c7005004e3001d
0556002f06d800410556002505db009805360060078d009807a1009806aa
001d070900980536009805c700640800009805b7006a0473005604730048
046200870339008704d9001c04730050063d00170400003304ab008704ab
0087046200870498001b055400870473008704730048047300870473007d
04000048040000330400001706a800460400001404910087044e005c0639
00870657008704e3001b05c7008703ff00870414002f0639008704770050
05560098047300500427009803390087023900ba01c700870400002305c7
0050040000480239001d020300290800002506c3001b07e10098067c0087
01c7ffdd055600620639004e0473001b0556009804620087040000480617
001b0473001b0556002f0400001705c700980473008704730098031d0087
0000fd5b0000fd5b0000fd5b0000fd5b0000fc700000fd930000fd2a0000
fc8a0000fcfc0000fcfc0000fc860000fd690000fcc40000fcf60000fd93
0000fc9c0000fc9c0000fc8a0000fc8a0000fc680000fc860000fc660000
fc680000fc860000fc660000fc660000fd500000fc660000fd5b0000fc8a
0000fc8d0000fd2a000000000239001b0473008306aa008302aa008806aa
008302aa008902aa0088042b0052042b005302020087033afffd02390017
023900170400000a05c70011040000140473009c0473009d0473009c0400
008004b2003904b2003905c7005905c7002104890049055600af05560060
040000420498003906e600aa05950080060a0052021400b6037300b60239
00c3048c002b0400003b0134005102aa00c102aa00c20b06000e055600ed
029600ed02aa004e01c700aa02aa0055044cfff5042f00c1042f00c20565
00c1056500c202aa0055029600ed02aa0055080000f102d500a4011d0000
000000000000000000000000000000000000000000000000000000000239
000002390000023900000239000002390000023900000239000002390000
023900000000000000000000000000000000000000000000011d0000008f
000002aafff7037000b60473009c02aa005502aa0006044c0072044c0073
0556001e04e300ae04730048071c00500568003b0000fd5e0000fd5e0000
fd5e0000fd5e0000fcc90000fcd20000fd980000fccd0000fcef0000fce1
0000fcd90000fcec0000fc5e0000fd440000fd4a0000fccf0000fcd10000
fc860000fc910000fcc10000fcc10000fcc10000fcc20000fcc20000fc8a
01550061027b00610155006101550061046400320464002b03f4002d03f4
002f05b4011305b400280231006b0231fe830464ff330464ffef0464002b
0464002d08fa006f0816006f0556009c023900c9047200c906ab00c9078f
00c905560034078f003409c800340c010034078f00c90556002a078f002a
09c8002a0473009c05c7005a05c700a506aa009701c70084038e00840555
008405c700840400000b05c7000b078e000b0955000b05c700840400000b
05c7000b078e000b01c700890400003b0473003806aa008409e2007408c1
004f07db003807da006b05a7007102f7005808e7007106f0006b05a10053
0556001e047300520239001e0239ffff063900500473003b05c700aa0473
008005c700aa0473008005c700aa0473008005c700aa0473008005c700aa
047300800556001e047300520556001e0473005208000010071d00490639
00630473003d0556009c04000080063900500473003b063900500473003b
01c7ffbe09cd005408fc006f07fb00380639006305c7009c047300840556
001e0473005208000010071d00490639004204e3005c0556001e04730052
0556001e04730052055600af04730048055600af047300480239ff7101c7
ff350239fff801c7ffaa063900500473003b063900500473003b05c700b4
02aaffd605c700b402aa004f05c700aa0473008005c700aa0473008005c7
00a1047300840556001e04730052055600af04730048063900500473003b
063900500473003b063900500473003b063900500473003b0556002a0400
001502aa004e023900c90556001e04730052055600970473007605560097
04730076055600970473007605c7005a0400003b05c700a50473003805c7
00a50473003805c700a50473003805c700a50473003805c700a504730038
055600af04730048055600af04730048055600af04730048055600af0473
0048055600af0473004804e300af0239001c063900630473003d05c700a1
0473008405c700a10473008405c700a10473008405c700390473001b05c7
00a1047300840239ffec01c7ff9e02390027023900160556009c04000080
0556009c040000800556009c040000800473009c01c700890473009c01c7
ff9d0473009c01c7ffb50473009c01c7ffc006aa009706aa008406aa0097
06aa008406aa009706aa008405c7009c0473008405c7009c0473008405c7
009c0473008405c7009c04730084063900500473003b063900500473003b
063900500473003b063900500473003b055600af04730076055600af0473
007605c700b402aa008905c700b402aa008305c700b402aa004a05c700b4
02aa00180556006004000042055600600400004205560060040000420556
006004000042055600600400004204e300210239001704e3002102390017
04e300210239ffe204e300210239ffe705c700aa0473008005c700aa0473
008005c700aa0473008005c700aa0473008005c700aa0473008005560034
0400000b055600340400000b078d002505c70012078d002505c70012078d
002505c70012078d002505c70012078d002505c700120556002a0400000b
0556002a0400000b0556002a0400001504e3002f0400003404e3002f0400
003404e3002f04000034047300840239001005c70012040000150239001c
0556001e047300520556001e047300520556001e047300520556001e0473
ffcb0556001e047300520556001e047300520556001e047300520556001e
047300520556001e047300520556001e047300520556001e047300520556
001e04730052055600af04730048055600af04730048055600af04730048
055600af047300480556008c0473fff0055600af04730048055600af0473
0048055600af04730048023900ae02390099023900c701c7008406390050
0473003b063900500473003b063900500473003b063900500473ffd80639
00500473003b063900500473003b063900500473003b071c00500568003b
071c00500568003b071c00500568003b071c00500568003b071c00500568
003b05c700aa0473008005c700aa0473008006e600aa0595008006e600aa
0595008006e600aa0595008006e600aa0595008006e600aa059500800556
002a040000150556002a040000150556002a040000150556002a04000015
055600af04730048055600af04730048056d007505df0096048600520486
00870723000a05890017056d002404860043056d002404860043056d0075
0486005208d9001006dd0012054f0043040a003005df00960486008705df
009604860087065500500486005205df006004120037056d001004120019
056d001004120019056d00100412001905ac005e047a0069074800980600
008d08000010071d004906aa009706aa008405c700b402aa004c0222ffc5
0556001b05c700c504e300d505c70029055600c504e3004805c700b00639
0071023900ba055600b00556002f071d00be05c700b004e3006206390071
05c700b0055600c504e3005804e1002f0556002905c700500558003d06a8
007f063900640239000a0556002904e3005a04e300b40473001204e30068
04730077038d004a04e3003b04e5008f023900b0047300b00473002504e3
00b8047300420400007104e3006f04e300aa0473004c04e3006f0400003b
04e300b805c700770473000e05c7008f0610006a0239000a04e300b80239
009a0222000b0000fd19023900b0016c0088016c00880000fcfc0000fcfc
016c008802ca001a02b5001a03050088031200880222002e0222002f031e
00880362006f033300880362006f0735007f0625005e0639ffef01c70084
01c700aa047200ed06ac009c06ac00ed04730048047300480556001e0473
005204730052055600af04730048055600af04730048055600af04730048
0239fff00239ffdb01c70079063900500473003b063900500473003b0639
00500473003b055600600400004205c700aa047300800400000b06e600aa
05950080060200610473ffd605c7fff20473008406aa008403f0009c0460
009a03a6005a03e9000c02cf00020448005c06020061047300500655004e
0486004c0639005002aa001e07c6002407c6002408e6ffca0000f9200000
fa0b0000fa0b0000fa060000fa0606020061047300500655004e0486004c
0222002f02b5001a0473002504e3002f040000340473003b04d2008404dc
00380473007204bd003804d7003d0473008204d7008202220086078d0047
0387008802aa008604d2003c04b80032052b00320772003805600017043a
001705ce001c04c2008904b8008901a9008a01a9008a01c700aa01870078
02aa000802aa00c102aa003a0187007802aa000802aa00c102aa003a01a9
008a01a9008a02aa001e02aafff7023a0042023a004100e4ffed01550045
0155004401c4004402e400090200000b023a004e023a004f0256000e0256
000e025600240256002402aa00550256002e0256002e0256002e02000021
0200000600e300440256003a023a000902560024025600240256000e0256
000e02aa0078023a004f0000fccd0000fca20000fca20000fd6f0000fd6f
0000fc490000fc490000fb9e0000fca20000fc490000fccd0000fcc20000
fcc20000000002390000000000000000000000000000031d004e031d004e
06da00c107c60024023900e308e6009c07c60024071d00d00703001b0239
008002390080000000000000000000000000000000000000000000000000
067b003a023a00200239001a02390021023a002702390025023a00210239
00240256002e0155002b0256002e0155004701550022023a0042023a0020
023a006202390020023900180239001a02390021023a002702390025023a
0021023900240256002e0155002b0256002e0155004701550022063c0011
063900630473009c0473009c0556002a06ab002806000030075600110473
007207c8005806ac005a05c7005a0556005904e500710696001c06ab0034
06ab0028055600af04730076055600af0473007604e300020639005004c4
00a1024100230369001105c7005002bb0023033afffd0473009c0473009c
01c7002a01c7002a0473003d04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a05c1005b05b3005b076c008807760088
07760088078d008807ca006f07a0006f0473007704730077047300770473
0077047300770473007706c2008806c200880874008808890088085b0088
0868008804e3003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3
003b04e3003b073300880733008808e5008808fa008808cc008808d90088
0929006f0929006f023900b0023900b002390041023900390239003d0239
003d023900230239002303a5008803a5008805570088056c0088053e0088
054b0088059b006f059b006f04e3006f04e3006f04e3006f04e3006f04e3
006f04e3006f07a5008807a5008809570088096c0088093e0088094b0088
04e300b804e300b804e300b804e300b804e300b804e300b804e300b804e3
00b806c20088088900880868008808b8006f0610006a0610006a0610006a
0610006a0610006a0610006a0610006a0610006a07910088079100880943
008809580088092a0088093700880987006f0987006f04e3005a04e3005a
047300770473007704e3003b04e3003b023900b0023900b004e3006f04e3
006f04e300b804e300b80610006a0610006a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a0811005b080c005b0991
008809d80088097f0088099b008809d3006f09ce006f04e3003b04e3003b
04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b096c0088096c
00880b1e00880b3300880b0500880b1200880b62006f0b62006f0610006a
0610006a0610006a0610006a0610006a0610006a0610006a0610006a09ca
008809ca00880b7c00880b9100880b6300880b7000880bc0006f0bc0006f
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a0556
001b0556001b0666002e0661002f07a9001b04e3003b04e3003b04e3003b
04e3003b04e3003b06ac002e06a7002f06d2002e06ba002f083100b00239
ffcf0239ffce0239ffcc0239ffda0239ffdc0239ffc50239ffe10239ffee
0343002e0348002f04e300b804e300b804e300b804e300b804e300aa04e3
00aa04e300b804e300b8055600290556002906b1002e0713002f06c20088
0610006a0610006a0610006a0610006a0610006a075a002e0789002f0792
002e07a9002f0878005e04e3005a0473007704e3003b023900b004e3006f
04e300b80610006a05d5007206a7002f06ba002f0348002f0789002f0713
002f07a9002f0239ffcb04e300b804ac002504ea011704f700a102f3001b
02bb00230473002504e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a0239ffd70239ffe40239ffd20239ffd70239
ffdb0239ffdb0239ffcd0239ffe00239ffc80239ffc30239ffdc0239ffdc
0239ffd70239ffd70239ffd20239ffcd0239ffd20239ffd704e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b804e3
00b804e300b80666002e0661002f05c1005b076c00880776008805b3005b
07760088078d00880666002e0661002f05c1005b076c00880776008805b3
005b07760088078d00880343002e0348002f0348002f03a5008805570088
053e008803a50088056c0088054b00880343002e0348002f0348002f03a5
008805570088053e008803a50088056c0088054b008806b1002e0713002f
0713002f06c20088088900880868008806c20088088900880868008806b1
002e0713002f0713002f06c20088088900880868008806c2008808890088
0868008805c700b405c7005a0639005001c70020051d0029055600af05c7
00a10000fd31055200680473003806390050047300480772005b07380045
05e5001306ac003d06ac003d06ac003a06ac003a066d001d04e3001b0822
00d005e1008a06a8007f05c7008f0556001e0400000b079900d005cf008a
04da003802ca002405d900160588003805c700b404730052031f000004da
00a103eb00a1064900a104cf00840556009c0400008004e3002f04000034
08d9001406dd0030054f0072040a0047056d00a50412007a05df00ac0486
009105df00630412003f04f8002b0412003a056d002e0412002405ac00ac
047a007705ac00ac047a00770556002a0556002a04d900bc037c009105ac
00ac047a0077063200a504df007a075f00ac059b00910556002a0556002a
06fe0028054e00350748003a059400260748003a059400260772004805b3
003805df00ac0486009104730052054f00ac054f00ac06a8007f04dc005d
0855004405e0002605560025040000040556003404b6000b0400003b054f
0072040a004705f10026049c0024023900bd056d002e0412002405560034
0556001e05c7005a0400003b0473ffe804e3002101c7003e02bb002304e3
0021055600af0473009c0473009c055600af047300480456002301c7ffda
05c700aa01a9002101a9002102aa003302aa003302aa003a02aaffe90239
00e302aa003c02aa003c057f005b04ac002504ac0074023900e304ac0025
057c004c04ac0074023900e3023900e3063900710412003f0412003f0556
00ae0473008005c7005a06aa009705dd0097059b004605c7005a05c7005a
05c7005a0400003b0400003b0400003b0473003805ca003006c6002e063f
002f031f001a062e001904e900310488004502aa00be02aa00be02aa00be
02aa00be0277003b0277003b034b0000034b0000034b0000034b0000034b
00000487001203f7001e045e0054043600830436008302fd005d034f0012
069900390655003e052900300000f86506e1002204e9002001e0004b01e9
004b015d0025015d000a0199002a0198001202fb00170304001702670013
025700120257001202c8004b01d8000701d8000707e9003a097c004b0931
004909310002013c004b04570022058900050589000d04be001504420018
01d8000701d8000703fe003d03fe003d0404003a036f000b0467003c0000
fb760000fcc10000fc080000fc730000fc730000fa630000fce00000fe95
0000fc8e0000fc510000fa0b0000fc9f0465003604650022040100340401
002407760017044c001b03ea001d051a00340653003204c8003306c20088
08890088086800880556001b0556001b0239ffdf0239ffe1055600290556
00290404001505e5001405e5001405e500140800ffeb0800ffeb080003b4
0800038c080003b40800038c0800ffe90800ffe9080003b40800038c0800
ffe90800ffe9080000000404001500e40042023a0029023a0024023a001e
02000006023a002405c7005a0639006305c7005a047100220552002904e3
00210556001e04d0002805c2004e04d9004e05c7005a06aa008405d00031
06640037082d00350552006805520068039c003f0380003b039c003f0380
003b039c00530381003c039c00530381003c02eb005302e3005302e30053
02e3005302eb005302eb000802e3000002e3000002e3000002eb00080363
005303630053036300530363005303630053027f00010330004503b20026
03c3000b050b0031069c00290390007f0000fc4f0000fc4f0000fc420000
fc420000fc420000fc420000fc010000fc010000fd440465002204010024
0a3900500873003b0436008304360083043600830329003a0329003a0355
0028050d00340329005403290028032900330329003302f6003a02f6003a
0329002b0143005e02d7005b04bb005e0329005e0329002a02d700290329
00270329002a03290054019400100329005b0373003704bb005e02d70008
037800800329000d0378004a04dc004d0632002a04be0033047300390473
003b04e6003804e1003a04fa0039076e003e0329000a0143005e01e40061
0329005b02d70008037800800329000d037800790329000a042b005205c5
001001c70084045e0054070a002e06cb003504d6001b04fa001a02d8000d
04e9001b0330000d02d9000a02db000c01c700aa02aa004e01c700aa02aa
004e01c700aa02aa004e01c700aa02aa004e053d007a0708003b0310008f
0574009708c000220473004002e000340473004004730031047300340473
00420473004d0430002b047300420473004903cc000903cc000903cc0009
0428005803b7006b0497007104b0004f0797004a0418006a045a005505d5
004c07a9004404bf004b03e0003b0965004a03f900560419004e06ed004a
0420003f0450005006a3004a03f3004d0633006006b90047064000440419
004b0667004503be003e043d003d03d60052048400440412004a04160046
0497003903fa00580650002d03cd005e0560005604950032045e005503e9
003e0462005406c20049044500f604d500b10473005e0473002f00000000
0000006c0000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c000000fc000001800000018000000180
00000180000001bc000001fc000001fc000002d800000324000003240000
0324000003c0000003c0000003c0000003c0000003c0000003c000000418
000004940000049400000494000004940000049400000494000005ac0000
05ac000005ac00000670000006f80000075c000008ac0000091c0000091c
0000091c0000091c0000096c0000096c00000a1800000a1800000ac40000
0ac400000ac400000c5c00000cb800000d4800000d4800000ee000000ee0
00000ee000000ee000000ee000000ee000000ee000000ee000000ee00000
0ee000001074000011480000124c00001324000014b800001550000016a0
000017400000179c0000179c0000179c000017e0000018d8000019900000
1a8000001b6400001b6400001bf000001db000001e5000001f0400002030
0000218c0000218c000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80000
22b8000022b8000022b8000022b8000022b8000022b8000022b8000022b8
000022b8000022b8000022b8000022b8000022b8000022b8000022b80001
0000089500920009006b0007000200100010005d000007e80a1d00040001
0000003902b2000100000000000000500000000100000000000100090050
0001000000000002000700590001000000000003001f0216000100000000
00040009023500010000000000050008023e000100000000000600090246
00010000000000070032024f0001000000000012000903f8000100000000
01000009040100010000000001010010040a0001000000000102000e041a
00010000000001030014042800010000000001040012043c000100000000
01050009044e0001000000010007002f02810001000000020007003c02b0
0001000000030007003002ec0001000000040007003a031c000100000005
00070036035600010000000600070030038c0001000000070007003c03bc
0003000104030002000c01580003000104040002000600cc000300010405
0002000e01760003000104060002000c00e60003000104070002000c007c
0003000104080002000801920003000104090002000e006000030001040b
0002001000f200030001040c0002000e006e00030001040d00020008019a
00030001040e0002000c01a20003000104100002001000a8000300010411
0002000a00880003000104120002000600b8000300010413000200100098
0003000104140002000c01020003000104150002000e010e000300010416
0002000c00da0003000104180002000c01c60003000104190002000e012a
00030001041a00020012016400030001041b0002000e01d200030001041d
0002000c013800030001041e00020008014400030001041f0002000c014c
0003000104210002000e01ae0003000104220002001201e000030001042a
0002001801fe0003000104390002000c01f200030001043e0002000a01bc
0003000108040002000600920003000108090002000e0184000300010816
0002000e011c000300010c010002000800d2000300010c0a0002000e00be
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c76657469636152
6567756c61720052006500670075006c006100720043006f007500720061
006e0074004e006f0072006d0061006c30ec30ae30e530e930fc5e3889c4
4f530052006500670075006c006900650072005200650067006f006c0061
00720065c77cbc18ccb40052006500670075006c006100726a196e969ad4
06390627062f064a004e006f0072006d0061006c004e006f0072006d0061
006c004e006f0072006d00610061006c0069004e006f0072006d0061006c
0052006500670075006c006100720052006500670075006c00610072041e
0431044b0447043d044b0439004e006f0072006d0061006c0e1b0e010e15
0e34004e006f0072006d0061006c004e006f0072006d0061006c00520065
00670075006c00610072006e00690052006500670075006c006100720052
006500670075006c00610072039103c003bb03ac05e805d205d905dc004e
006f0072006d00e1006c0052006500670075006c00650072004200690061
00730061004e006f0072006d0061006c0052006500670075006c00610072
041704320438044704300439043d043804390928093f092f092e093f0924
0054006800f4006e006700200074006801b01edd006e006748656c766574
6963613b2031332e30643165313b20323031372d30362d313448656c7665
7469636131332e306431653148656c76657469636148656c766574696361
206973206120726567697374657265642074726164656d61726b206f6620
4c696e6f7479706520414748656c7665746963612065737420756e65206d
617271756520648e706f738e65206465204c696e6f747970652041474865
6c766574696361206973742065696e2065696e676574726167656e657320
576172656e7a65696368656e20646572204c696e6f747970652041474865
6c766574696361208f20756e206d61726368696f20726567697374726174
6f206469204c696e6f7479706520414748656c7665746963612069732065
656e20676572656769737472656572642068616e64656c736d65726b2076
616e204c696e6f7479706520414748656c766574696361208a7220657474
20726567697374726572617420766172756d8a726b6520669a72204c696e
6f7479706520414748656c76657469636120657320756e61206d61726361
2072656769737472616461206465204c696e6f7479706520414748656c76
657469636120657220657420726567697374726572657420766172656dbe
726b652074696c68bf72656e6465204c696e6f7479706520414748656c76
65746963614c6967617475726573436f6d6d6f6e204c6967617475726573
4e756d6265722053706163696e6750726f706f7274696f6e616c204e756d
626572734d6f6e6f737061636564204e756d626572734e6f204368616e67
65000000b800532bb800492bb8003f2bb800352bb8002b2b4118008001a6
009001a600a001a600030069018b0079018b0089018b0099018b00040089
018b0099018b00a9018b00b9018bb2040840ba0179001a014a400b041f54
14191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b20d0009
410a01a0019f0064001f01a50025017a00480028019ab3296c1f60410a01
a9007001a9008001a90003008001a9000101a9b21e321fbe012c00250401
001f0126001e0401b61fe7312d1fe531b80201b21fc227b80401b21fc11e
b80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401
b61fa91d6c1f931eb8019ab21f921db80101b21f911db80101b21f751db8
0201b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156400b1f
3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb2
1f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b
002a019bb2254a1fba019b0025017ab349293896b8017bb348283125b801
7a403648289629482725294c1f252946272729482756c80784075b074107
32072b072807260721071b071408120810080e080c080a08080807b801ac
b23f1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01ad003f
001f01adb70804080208000814b8ffe0b40000010014b801abb410000001
00b801abb606100000010006b801adb300000100b801ad401f0400000100
0410000001001002000001000200000001000002010802004a00b0018db8
06008516763f183f123e113946443e113946443e113946443e113946443e
113946443e11394660443e11394660443e11394660442b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d
59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b
2b4b5279b376706a66456523456023456560234560b08b766818b0806220
20b16a704565234520b003266062636820b003266165b070236544b06a23
4420b176664565234520b003266062636820b003266165b066236544b076
2344b10066455458b166406544b27640764523614459b36242725d456523
456023456560234560b089766818b080622020b172424565234520b00326
6062636820b003266165b042236544b072234420b1625d4565234520b003
266062636820b003266165b05d236544b0622344b1005d455458b15d4065
44b262406245236144592b2b2b2b456953427374b8019a2045694b20b028
53b049515a58b020615944b801a620456944750000>
[8889 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 3 <> PBAAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>PBAAAA+Helvetica AddT42Char 
PBAAAA+Helvetica /CharStrings get begin
/space 3 def
end
PBAAAA+Helvetica /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/DYERLT+Helvetica /PBAAAA+Helvetica findfont ct_VMDictPut
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
102.832 41.0159 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERLU+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.124 -0.207 0.769 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g23 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g23 {611 0 -8 -653 588 0 setcachedevice
130 -653 mo
130 -637 li
193 -632 207 -625 207 -596 cv
207 -581 203 -557 196 -532 cv
75 -96 li
58 -34 47 -24 -8 -16 cv
-8 0 li
264 0 li
426 0 539 -66 539 -200 cv
539 -271 499 -324 413 -350 cv
413 -351 li
456 -360 493 -369 524 -390 cv
560 -414 588 -449 588 -503 cv
588 -602 519 -653 380 -653 cv
130 -653 li
cp
248 -363 mo
311 -587 li
321 -623 331 -623 370 -623 cv
451 -623 487 -589 487 -515 cv
487 -416 417 -363 286 -363 cv
248 -363 li
cp
238 -331 mo
301 -331 344 -326 364 -319 cv
402 -306 431 -262 431 -200 cv
431 -89 353 -30 238 -30 cv
196 -30 171 -44 171 -72 cv
171 -85 186 -136 206 -212 cv
238 -331 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERLV+ /DYERLU+ findfont ct_VMDictPut
/DYERLV+*1 
[32{/.notdef}rp /g23 223{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
6.47619 41.0159 mo
( )sh
%ADOBeginSubsetFont: DYERLW+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERLW+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.217 0.775 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g1E put
dup 33 /g3C put
dup 34 /gD put
dup 35 /gF put
dup 36 /g3E put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g1E {685 0 48 -386 637 -120 setcachedevice
637 -320 mo
637 -386 li
48 -386 li
48 -320 li
637 -320 li
cp
637 -120 mo
637 -186 li
48 -186 li
48 -120 li
637 -120 li
cp
false sop
f
}bind def
/g3C {333 0 88 -662 299 156 setcachedevice
299 156 mo
299 131 li
216 131 li
183 131 164 117 164 77 cv
164 -589 li
164 -625 182 -637 216 -637 cv
299 -637 li
299 -662 li
88 -662 li
88 156 li
299 156 li
cp
false sop
f
}bind def
/gD {250 0 55 -102 195 141 setcachedevice
83 141 mo
152 108 195 45 195 -15 cv
195 -67 160 -102 115 -102 cv
79 -102 55 -79 55 -45 cv
55 -11 76 6 113 6 cv
124 6 134 2 142 2 cv
150 2 156 8 156 15 cv
156 48 128 85 73 122 cv
83 141 li
cp
false sop
f
}bind def
/gF {250 0 70 -100 181 11 setcachedevice
181 -43 mo
181 -73 155 -100 126 -100 cv
95 -100 70 -75 70 -44 cv
70 -13 94 11 125 11 cv
155 11 181 -14 181 -43 cv
cp
false sop
f
}bind def
/g3E {333 0 34 -662 245 156 setcachedevice
245 156 mo
245 -662 li
34 -662 li
34 -637 li
118 -637 li
156 -637 169 -618 169 -583 cv
169 85 li
169 116 157 131 122 131 cv
34 131 li
34 156 li
245 156 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERLX+ /DYERLW+ findfont ct_VMDictPut
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E 219{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
16.4491 41.0159 mo
( )sh
27.1978 41.0159 mo
(!)sh
41.5331 41.0159 mo
(")sh
46.3003 41.0159 mo
(#)sh
48.9123 41.0159 mo
(#)sh
51.5244 41.0159 mo
(#)sh
54.1257 41.0159 mo
(")sh
69.4616 41.0159 mo
(")sh
74.2288 41.0159 mo
(#)sh
76.8409 41.0159 mo
(#)sh
79.4529 41.0159 mo
(#)sh
82.0542 41.0159 mo
(")sh
99.3241 41.0159 mo
($)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
30.672 41.0159 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLY+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERLY+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.177 0.775 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g12 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g12 {500 0 111 -676 394 0 setcachedevice
394 0 mo
394 -15 li
319 -15 299 -33 299 -76 cv
299 -673 li
290 -676 li
111 -585 li
111 -571 li
138 -581 li
156 -588 173 -593 183 -593 cv
204 -593 213 -578 213 -544 cv
213 -95 li
213 -40 192 -19 118 -15 cv
118 0 li
394 0 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERLZ+ /DYERLY+ findfont ct_VMDictPut
/DYERLZ+*1 
[32{/.notdef}rp /g12 223{/.notdef}rp]
DYERLZ+ nf
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
37.047 42.455 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
58.8929 41.0159 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMA+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.124 -0.207 0.906 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g4C put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g4C {444 0 14 -683 461 11 setcachedevice
461 -428 mo
282 -428 li
282 -412 li
296 -412 li
321 -412 333 -405 333 -394 cv
333 -374 284 -326 190 -254 cv
147 -221 li
267 -677 li
261 -683 li
202 -670 163 -663 104 -656 cv
104 -640 li
122 -640 li
156 -640 171 -634 173 -616 cv
171 -599 168 -576 155 -528 cv
14 0 li
89 0 li
137 -180 li
177 -212 li
193 -168 219 -106 237 -71 cv
269 -8 289 11 318 11 cv
358 11 383 -14 429 -98 cv
414 -109 li
409 -100 404 -91 399 -83 cv
381 -52 369 -41 354 -41 cv
335 -41 312 -78 273 -170 cv
236 -258 li
383 -389 414 -409 461 -412 cv
461 -428 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMB+ /DYERMA+ findfont ct_VMDictPut
/DYERMB+*1 
[32{/.notdef}rp /g4C 223{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
65.2679 42.455 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
86.8214 41.0159 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g2C {667 0 7 -653 722 0 setcachedevice
722 -653 mo
501 -653 li
501 -637 li
525 -634 li
549 -631 561 -626 561 -615 cv
561 -591 507 -541 418 -478 cv
265 -369 li
318 -563 li
333 -619 365 -633 417 -637 cv
417 -653 li
147 -653 li
147 -637 li
209 -634 226 -621 226 -594 cv
226 -578 219 -557 212 -532 cv
88 -87 li
73 -34 67 -23 7 -16 cv
7 0 li
254 0 li
254 -16 li
199 -21 183 -29 183 -60 cv
183 -71 186 -83 194 -111 cv
259 -348 li
382 -133 li
400 -101 419 -72 419 -51 cv
419 -34 404 -22 373 -19 cv
344 -16 li
344 0 li
619 0 li
619 -16 li
556 -22 546 -28 515 -82 cv
347 -375 li
645 -600 li
674 -622 697 -637 722 -637 cv
722 -653 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C 222{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
93.1964 42.455 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 108 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>DYERLT+Helvetica AddT42Char 
1 252 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>DYERLT+Helvetica AddT42Char 
1 444 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>DYERLT+Helvetica AddT42Char 
1 728 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>DYERLT+Helvetica AddT42Char 
1 804 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>DYERLT+Helvetica AddT42Char 
1 1172 36 <0003001e0000053d05bd0002000a000b00da405048015801680103880397
04980aa90ab809b80a06280a010007060601020809090102080a00070501
8c01030420140a0a251209090114050525120606010b0b0503090a040605
010b02010300021e0708b80159400904030206090a030508b801a840120d
0d17171a059e019e0a190c0da1218c5e182b2b194ef4184dfdfd194e4565
44e6464418003f173c3f3c4dfd3cfd3c11393f011112393912393911392f
872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b003c01bb0
03c4592b1112393912393987103c3c07103c3c3130015d5d005d010b0113
3301230321032301038edfed85e10215da95fdbb9fcc0290025a0289fd77
0363fa4301b8fe4805bd>DYERLT+Helvetica AddT42Char 
1 1452 39 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>DYERLT+Helvetica AddT42Char 
1 1784 41 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>DYERLT+Helvetica AddT42Char 
1 2332 47 <0001009c0000044b05bd000500314013000203021e040508031a07010225
0500190607b80153b321765e182b2b4ef43c4dfd3c4e10e6003f3c4dfd3c
3f31301333112115219cc702e8fc5105bdfaf2af>DYERLT+Helvetica AddT42Char 
1 3164 55 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>DYERLT+Helvetica AddT42Char 
1 3808 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>DYERLT+Helvetica AddT42Char 
1 4212 69 <00020076ffde042505c20011001e0070402ea607a71cd71c0322080f1e02
050000171d0507110a1e1d0b0b1427081a201a2e102e01290011191f2087
21bd5d182b2b4ef43c4dfde4e44e10f64ded003fed3f3fed3f1139113931
30437940181216060a1606142601120a142601150717260113091e26002b
2b012b2b8181005d1333113e013332121114022322272627152324363534
26232206151417163376af3ba460c8f9f6da7a543239a6026691918d7bb9
2647c205c2fdeb4d51feedfef4fefeb03b234d897de8bea9deb6d1975eb1
0000>DYERLT+Helvetica AddT42Char 
1 4424 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>DYERLT+Helvetica AddT42Char 
1 4684 71 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>DYERLT+Helvetica AddT42Char 
1 4900 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>DYERLT+Helvetica AddT42Char 
1 5456 74 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d0000>DYERLT+Helvetica AddT42Char 
1 5792 75 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc8000000>DYERLT+Helvetica AddT42Char 
1 5952 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>DYERLT+Helvetica AddT42Char 
1 6044 79 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>DYERLT+Helvetica AddT42Char 
1 6112 80 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>DYERLT+Helvetica AddT42Char 
1 6360 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>DYERLT+Helvetica AddT42Char 
1 6544 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>DYERLT+Helvetica AddT42Char 
1 7012 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>DYERLT+Helvetica AddT42Char 
1 7152 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>DYERLT+Helvetica AddT42Char 
1 7600 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>DYERLT+Helvetica AddT42Char 
1 7940 89 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>DYERLT+Helvetica AddT42Char 
1 8240 90 <00010012000005a1042f000c0120407e4704aa09028e09014607490b8703
8a08850aca02c403c607c908c60ac90b0b66076a08650a690b7607790876
0a790b85078a0b0a4607490b0247037700780503572816282b012b043b01
3b048f018f0406090401030b020305060c050006080a0b03070a0e17171a
0705069b080304c40a0209c40b00019b0c190d677e182b194e10f4184dfd
3939fd3939fd3939fd3939194e456544e618003f173c3f173c1217395d4b
5179400c0529120607060029120c0c0b0587102b87102b4b5279b4090a09
080ab8018b401312010102070604050529120606070908090a08b8018b40
0e120404030b0c00010029120c0c0b01874d2e2b87107dc41805872e182b
087d10c505872e182b877d10c405872e182b087d10c53130015d71717100
715d1b02331b013301230b012301d7ced1cad2dbb4fec9bbdad3bbfecb04
2ffcb4034cfcb90347fbd1033dfcc3042f00>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/period 17 def
/one 20 def
/four 23 def
/A 36 def
/D 39 def
/F 41 def
/L 47 def
/T 55 def
/a 68 def
/b 69 def
/c 70 def
/d 71 def
/e 72 def
/g 74 def
/h 75 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/v 89 def
/w 90 def
end
DYERLT+Helvetica /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 49 /one put
dup 52 /four put
dup 65 /A put
dup 68 /D put
dup 70 /F put
dup 76 /L put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp 
/one 2{/.notdef}rp /four 12{/.notdef}rp /A 2{/.notdef}rp /D /.notdef 
/F 5{/.notdef}rp /L 7{/.notdef}rp /T 12{/.notdef}rp /a /b 
/c /d /e /.notdef /g /h /i 2{/.notdef}rp 
/l /m /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v /w 136{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
87.6534 63.6825 mo
(T)sh
91.9709 63.6825 mo
(est ADL with)sh
87.17 73.7566 mo
(incoming data)sh
84.0668 83.8307 mo
(stream via \(4.1\))sh
33.9157 17.2698 mo
(Feed the class label)sh
110.708 17.2698 mo
( )sh
90.4699 29.5026 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g24 {667 0 66 -666 689 18 setcachedevice
689 -664 mo
668 -664 li
660 -648 650 -642 630 -642 cv
621 -642 609 -642 589 -649 cv
547 -664 505 -666 472 -666 cv
393 -666 317 -639 253 -593 cv
143 -515 66 -384 66 -243 cv
66 -78 174 18 327 18 cv
430 18 510 -25 600 -131 cv
582 -146 li
495 -56 435 -27 353 -27 cv
242 -27 178 -92 178 -232 cv
178 -342 214 -456 286 -533 cv
341 -592 411 -630 485 -630 cv
573 -630 622 -574 634 -467 cv
652 -464 li
689 -664 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 222{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
54.165 29.5026 mo
(!)sh
%ADOBeginSubsetFont: DYERMC+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMC+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.189 0.637 0.69 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g41D put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g41D {685 0 60 -531 625 27 setcachedevice
625 27 mo
625 -39 li
334 -39 li
231 -39 145 -124 128 -219 cv
625 -219 li
625 -285 li
129 -285 li
146 -380 232 -465 335 -465 cv
625 -465 li
625 -531 li
331 -531 li
172 -531 60 -400 60 -252 cv
60 -104 174 27 334 27 cv
625 27 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMD+ /DYERMC+ findfont ct_VMDictPut
/DYERMD+*1 
[32{/.notdef}rp /g41D 223{/.notdef}rp]
DYERMD+ nf
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
64.9474 29.5026 mo
( )sh
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g60 {0 0 setcharwidth
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 218{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
75.6961 29.5026 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g33 {611 0 -13 -653 588 0 setcachedevice
132 -653 mo
132 -637 li
174 -631 178 -630 189 -623 cv
196 -618 203 -606 203 -595 cv
203 -578 198 -559 191 -532 cv
72 -101 li
56 -42 42 -23 -13 -16 cv
-13 0 li
230 0 li
230 -16 li
173 -22 163 -33 163 -63 cv
163 -73 165 -87 176 -126 cv
231 -329 li
297 -324 li
420 0 li
567 0 li
567 -16 li
522 -16 502 -39 480 -98 cv
391 -333 li
458 -348 491 -360 522 -384 cv
563 -415 588 -464 588 -512 cv
588 -597 516 -653 384 -653 cv
132 -653 li
cp
306 -593 mo
311 -612 332 -623 363 -623 cv
441 -623 483 -580 483 -511 cv
483 -418 413 -361 294 -361 cv
276 -361 268 -362 243 -366 cv
306 -593 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 221{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
78.3046 29.5026 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g35 {556 0 59 -653 633 0 setcachedevice
633 -653 mo
101 -653 li
59 -498 li
77 -494 li
125 -602 157 -618 315 -618 cv
172 -91 li
157 -37 134 -22 65 -16 cv
65 0 li
353 0 li
353 -16 li
318 -19 li
277 -23 265 -31 265 -62 cv
265 -84 273 -107 279 -128 cv
416 -618 li
474 -618 li
539 -618 575 -590 575 -537 cv
575 -524 574 -508 572 -491 cv
589 -489 li
633 -653 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 221{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
84.6796 25.1852 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 2756 54 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>DYERLT+Helvetica AddT42Char 
1 5304 73 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
0000>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/S 54 def
/f 73 def
end
DYERLT+Helvetica /Encoding get
dup 83 /S put
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp 
/one 2{/.notdef}rp /four 12{/.notdef}rp /A 2{/.notdef}rp /D /.notdef 
/F 5{/.notdef}rp /L 6{/.notdef}rp /S /T 12{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 
/t /.notdef /v /w 136{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
231.929 210.836 mo
(Drift Detection Scenario)sh
286.583 224.508 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Helvetica-Bold
Type42DictBegin
[<00010000000b000b000b000b637674206741296a000000bc000003886670
676db24d5cc50000044400000b97676c796641076f8f000060d80000080c
68656164da0d84dd00000fdc000000366868656109860f9b000010140000
0024686d7478d124be4a00001038000022546c6f6361004302840000328c
000022586d61787011090c90000054e4000000206e616d651875eb0d0000
55040000080070726570b552e59100005d04000003d36764697200000000
000000000000000005c0001105c2002d0597001d0442001d0000ffda0000
ffdb0000ffdafe53ffef05d0000afffdffed03340000012200000122dffb
011400af000700b7007e000400d200aa0109002300ed013200d9011d012a
00d800fe00db00e2001a008b00a0001a004500e801f6000900e901280132
00360082009e009fff700070003f003f00e801050015003800e9ff7bffc8
fff90042008a00c401070113011dffb9002f00870087009a009c010c0262
ffb10018004c00770080008200c900daffb2ffea001a003600e50111012f
043bffdd00020005001a0039008900aa00b701210123012a015bffe50002
00180023005c00aaff4dff76ffb2ffef001a002f004e007b008a00e1011f
0126012b019a01de03edff80ff8e0007001c004e005500630063006d0081
0098009c00ad011f01260162041c051500390044004b0063008e00cc00e8
00f2010001290142017802d503ea03f0043b049affc400050055005c0060
009f0103011d012401550164017001ad01b401c301f602370261033903d5
047004a100020055008800a100bd00c700d300dd00eb00ed00fa00fd0104
012b013e014f017b019d01ad01e20233025d027d028c02da02ef033103de
0407048b058505bbff04ffd5fffa0007001e002a003b0047005100580065
00650066006e0075007f00840107009700b100c300cc00df00df010a0110
012f013101470154015b016b0179009101a401ba01dc01e401e601e901f6
0213021f0223022f0276027d0282028902ad02b202b902ed03110374037d
03c003de03f60415045d04c004c004df052d0574061c064b0751fe94fedf
ff2dff90ff9affea0016001600240029002d003e0104006d006d00840087
0089008e009c00a400ab00ae00b200b2fffb013900c400d100df00e100ef
00f70121011c011c012101320138015001510154016c016d017f019801a4
01aa01b601ba01bb01bb00d701d701fb01fb01fe00190209022d025b0261
02790279029a009802d302da02ef030c03210328032d034b0353fff103ad
03b103f20425045a0471047b048a0498049f051c053d0557055a05700595
05b605cb05d605ef05f4061d068706a406b406d307080734079807fe0122
01320120012500b400be0082009603700132012400430184011d015600cc
010500ed00c500fb00f900c000a7011d00fe035500880026ffa100b8ff88
00dd00bd00b5037c003c00910293024aff3f03a803090132fff700820030
002a002a002a002a002a002a402a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b2d
2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c20b0032552582359212d2c69b04061b000
8b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b011
2bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458c
b0172344b0177ae5182d2cb002254661658a46b040608b482d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005058b21a401a4523604459b0005258b219401945236044592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442db8002a2c4bb800095058b101018e59b801ff85
b800441db9000900035f5e2db8002b2c2020456944b001602db8002c2cb8
002b2a212db8002d2c2046b003254652582359208a208a49648a20462068
6164b004254620686164525823658a592f20b00053586920b000545821b0
40591b6920b000545821b0406559593a2db8002e2c2046b0042546525823
8a592046206a6164b0042546206a61645258238a592ffd2db8002f2c4b20
b0032650585158b080441bb04044591b21212045b0c05058b0c0441b2159
592db800302c2020456944b001602020457d691844b001602db800312cb8
00302a2db800322c4b20b003265358b0801bb040598a8a20b00326535823
21b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326
53582321b801408a8a1b8a235920b80003265358b0032545b80180505823
21b8018023211bb003254523212321591b2159442db800332c4b53584544
1b2121592db800342c4bb800095058b101018e59b801ff85b800441db900
0900035f5e2db800352c2020456944b001602db800362cb800352a212db8
00372c2046b003254652582359208a208a49648a204620686164b0042546
20686164525823658a592f20b00053586920b000545821b040591b6920b0
00545821b0406559593a2db800382c2046b00425465258238a592046206a
6164b0042546206a61645258238a592ffd2db800392c4b20b00326505851
58b080441bb04044591b21212045b0c05058b0c0441b2159592db8003a2c
2020456944b001602020457d691844b001602db8003b2cb8003a2a2db800
3c2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b
8a235920b0032653582321b801008a8a1b8a235920b0032653582321b801
408a8a1b8a235920b80003265358b0032545b8018050582321b801802321
1bb003254523212321591b2159442db8003d2c4b535845441b2121592db8
003e2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2d
b8003f2c2020456944b001602db800402cb8003f2a212db800412c2046b0
03254652582359208a208a49648a204620686164b0042546206861645258
23658a592f20b00053586920b000545821b040591b6920b000545821b040
6559593a2db800422c2046b00425465258238a592046206a6164b0042546
206a61645258238a592ffd2db800432c4b20b0032650585158b080441bb0
4044591b21212045b0c05058b0c0441b2159592db800442c2020456944b0
01602020457d691844b001602db800452cb800442a2db800462c4b20b003
265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db800472c4b535845441b2121592db800482c4bb800
095058b101018e59b801ff85b800441db9000900035f5e2db800492c2020
456944b001602db8004a2cb800492a212db8004b2c2046b0032546525823
59208a208a49648a204620686164b004254620686164525823658a592f20
b00053586920b000545821b040591b6920b000545821b0406559593a2db8
004c2c2046b00425465258238a592046206a6164b0042546206a61645258
238a592ffd2db8004d2c4b20b0032650585158b080441bb04044591b2121
2045b0c05058b0c0441b2159592db8004e2c2020456944b001602020457d
691844b001602db8004f2cb8004e2a2db800502c4b20b003265358b0801b
b040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db800512c4b535845441b2121592db800522c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db800532c2020456944b00160
2db800542cb800532a212db800552c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800562c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800572c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800582c2020456944b001602020457d691844b00160
2db800592cb800582a2db8005a2c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db8005b2c4b535845441b2121592db800
5c2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
005d2c2020456944b001602db8005e2cb8005d2a212db8005f2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800602c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800612c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800622c2020456944b001
602020457d691844b001602db800632cb800622a2db800642c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800652c4b
535845441b2121592d0000010000000100002ae52ada5f0f3cf500110800
00000000a2272e8000000000d5670bf1f7dcfc270b7e0946000100090001
000100000000000100000629fe2900000c01f7dcfcdb0b7e000100000000
00000000000000000000089505c7009a00000000023900000239000002aa
00e103cb00a70473000004730038071d002f05c7006f01e7006302aa0059
02aa0015031d002f04ac00490239007602aa002f023900800239ff900473
00400473008e047300400473003604730036047300360473004004730034
047300360473003d02aa00e802aa00e804ac001704ac004904ac001704e3
007b07cd00c705c7003405c700a105c7005c05c7009c055600a504e3009c
0639005505c7009a023900840473002d05c700a104e3009c06aa009705c7
009706390065055600a30639006505c700a30556005504e3002105c7009c
0556002f078d001e055600210556002304e3003402aa00800239ff9002aa
002f04ac008b0473000002aaffce0473003b04e3007b0473004704e3003f
0473002f02aa001504e3004204e300870239008902390009047300820239
008b071d008004e3008704e3004204e3007d04e3003c031d008204730042
02aa001504e3007d0473001a0639000e0473001a0473001504000021031d
0000023d006a031d002d04ac000405c7003405c7003405c7005c055600a5
05c700970639006505c7009c0473003b0473003b0473003b0473003b0473
003b0473003b047300470473002f0473002f0473002f0473002f02390076
0239ffce0239ffb60239ffd504e3008704e3004204e3004204e3004204e3
004204e3004204e3007d04e3007d04e3007d04e3007d047300470333005e
04730045047300420473004102cd00910473ffc304e3008905e5001a05e5
001a080000cb02aa007602aaffd504640049080000120639004705b40019
0464004904640047046400490473ffea049cffcb03f4002405b4fff70696
0007046400290231007602f6002802ec000e06250031071d003804e3002a
04e3006d02aa00e104ac00490464ffd50473001e0464004904e5fffa0473
00af04730000080000bd0239000005c7003405c70034063900650800004b
078d003f0473fffb080000f10400008b0400009702390089023900840464
004903f4002104730015055600230156fea305f4004402aa00aa02aa00aa
04e3001c04e3001c047300470239007102390092040000920800000405c7
0034055600a505c70034055600a5055600a5023900760239ffb60239ffd5
0239ffce0639006506390065065200690639006505c7009c05c7009c05c7
009c0239008902aaffb602aaffa802aaffbd02aaffc902aa009a02aa0042
02aa001202aaffd302aa004202aaffb604e3fff10239ffe8055600550473
004204e3003404000021023d006a05c7001204e3006d0556002304730015
0556008004e3008004ac004904ac005502aa005002aa001a02aa001206ac
002f06ac005a06ac004e047300000639005504e300420239008405560055
0473004205c7005c0473004705c7005c0473004704e3003f05c700340473
003b05c700340473003b05c700340473003b05c7005c0473004705c7005c
0473004705c7009c0600003f055600a50473002f055600a50473002f0556
00a50473002f055600a50473002f055600a50473002f0639005504e30042
0639005504e300420639005504e3004204e3004205c7009a04e3008705c7
000f04e3fff1035cfffc037100010366000a035c000c0239000b02390003
06ac0084047200890473002d027bffc905c7008e0473005804e3009c0271
008b04e3009c0239002704e3009c0356008b04e3009c0329008b05c70097
04e3008705c7007504e3005c05c7009704e3008704e300870639006504e3
00420639006504e300420639006504e3004205c700a3031d008205c70092
031d006905c700a3031d00360556005504730042055600550473004204e3
002102aa001504e3002103b8001504e3002102aaffe305c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d05c7009c04e3007d078d001e0639000e055600230473001504e30034
0400002104e3003404000021055600550473004204e3002102aa00150473
00360000fc910000fc900000fc250000fc180000fc2c0000fc360000fd0d
0000fc450000fcb50000fbd80000fc250000fd010000fc9d0000fcb50000
fbfb05c700120639005504e3004204e3009c0239008b05c700a104730082
05c7009704e3008705c700a3031d0080020e000802aa00e702aa002f0239
00090473008202aa0015047300300473002e047300460473003a0000fcfb
0000fc2c0000fc360239ffcc0239ffc905c7009704e300870000fc2b05c7
002905bd00a805c700a804a000a805e50019055600a8080000190564003d
05c7008f05c7008f05c700b205c4003906aa008f05c7008f0639005a05c7
008f055600a805c7005a04e500190556003106ac003d0556001b05e5008f
0556005a078d008f07ab008f06aa002f078d00a8055600a805c7005a0800
008f05cb00460473003904e3004604c5008f038d0087051d002904730035
06ac00100400002d04e3008704e3008704e3008f0538003c05c7008704e3
008704e5004604e3008704e3007f04730046040000290473001d06a80046
0473001f04e300870473003f06ac008706aa008705560029066e008704a0
00850473004606aa008704e30056055600a80473003504a000a8038d0087
023900830239008f0473002f05c7005a047300460239ffcf028900290800
00390750003c07e9008f070e0087023900040556004e0664001704e30029
05c700b204e3008f047300440617001004e30029055600310473001d05c7
008f04e3008504e300a8038d00870000fd010000fd010000fd010000fd01
0000fbd80000fd430000fc9e0000fc360000fc910000fc900000fc2c0000
fd0d0000fc450000fcb50000fd430000fc250000fc250000fc360000fc36
0000fc180000fc540000fc2c0000fc180000fc2c0000fc2c0000fc2c0000
fd0d0000fc2c0000fd010000fc360000fc240000fc9e0000000002aa0015
04e30086071d0080031d0081071d0080031d0082031d0081040a0046040a
004702390089030bffd802aa001502aa0015047300190639000d04730014
04e3007b04e3007b04e3007b0473008104bc003b04bc003b05c7005b05c7
0012049e0048055600a4055600560473004304c3003d0758009c0671007d
0633005b023d00a5043b00a502aa00e10494001b04730047011d004502aa
00af02aa00af0b620004056500bd02a500bd040000970239008502aa002f
0473000004e200af04e200af06e400af06e400af02aa002f02a500bd02aa
002f080000f1055401d00000000000000000000000000000000000000000
000000000000000000000000023900000239000002390000023900000239
000002390000023900000239000002390000000000000000000000000000
0000000000000000023900000239000002aafff6043b00a504e3007b02aa
002f02aafff6047300050473000005c7003404e3009c0473002e07920065
065c00420000fd220000fd220000fd220000fd220000fc900000fc8d0000
fd470000fc790000fc990000fc940000fc860000fc9a0000fc080000fcf1
0000fcf70000fc800000fc820000fc540000fbfb0000fc810000fc810000
fc810000fc820000fc820000fc3602aa00af04e200af02aa00af02aa00af
046400130464001904510011046e002405b4007705b400830231ff5e0231
ff6e0464ff530464ffd5046400110464001a08fa005e0816005e05c700a1
023900840472008406ab0084078f00840556002f078f002f09c8002f0c01
002f078f008405560021078f002109c8002104e3009c05c7005c05c7009c
06aa0097023900890472008906ab008906ac00890473001a06ac001a08e5
001a0b1e001a06ac00890473001a06ac001a08e5001a0239008b04730047
04e3003f071d008009d70048090f0058087b003f0876006d06af006d042c
008b09440063073f00680667005d05c700340473003b0239ffb60239ffb6
0639006504e3004205c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d05c7009c04e3007d05c7009c04e3007d05c700340473003b05c70034
0473003b08000012071d00380639005504e3004205c700a1047300820639
006504e300420639006504e300420239ffb60a0c006d0939006808ab003f
0639005505c7009704e3008705c700340473003b08000012071d00380639
004704e3002a05c700340473003605c700340473003b055600a50473002f
055600a50473002f0239ff1d0239ff190239ffc60239ffcc0639006504e3
00420639006504e3004205c700a3031dffaa05c700a3031d005e05c7009c
04e3005c05c7009c04e3007d05c7009a04e3008705c700340473003b0556
00a50473002f0639006504e300420639006504e300420639006504e30042
0639006504e300420556002304730015040000970239008405c700340473
003b05c700a104e3007b05c700a104e3007b05c700a104e3007b05c7005c
0473004705c7009c04e3003f05c7009c04e3003f05c7009c04e3003f05c7
009c04e3003f05c7009c04e3003f055600a50473002f055600a50473002f
055600a50473002f055600a50473002f055600a50473002f04e3009c02aa
00150639005504e3004205c7009a04e3008705c7009a04e3008705c7009a
04e3008705c7008204e3006605c7009a04e300870239ffa80239ffa00239
ffd90239ffe905c700a10473008205c700a10473008205c700a104730082
04e3009c0239008b04e3009c0239ffbd04e3009c0239ffbd04e3009c0239
ffae06aa0097071d008006aa0097071d008006aa0097071d008005c70097
04e3008705c7009704e3008705c7009704e3008705c7009704e300870639
006504e300420639006504e300420639006504e300420639006504e30042
055600a304e3007d055600a304e3007d05c700a3031d008205c700a3031d
008205c700a3031d005105c700a3031d0001055600550473004205560055
0473004205560055047300420556005504730042055600550473004204e3
002102aa001504e3002102aa001504e3002102aaffe304e3002102aa0015
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d05c7009c04e3007d0556002f0473001a0556002f0473001a078d001e
0639000e078d001e0639000e078d001e0639000e078d001e0639000e078d
001e0639000e055600210473001a055600210473001a0556002304730015
04e300340400002104e300340400002104e300340400002104e3008702aa
fffc0639000e0473001502aa001505c700340473003b05c700340473003b
05d3003404ec003b05d7ffe804a8ff8505c70034048d003b05c700340473
003b05c700340473003b05c700340473003b05c700340473003b05c70034
0473003b05c700340473003b05c700340473003b055600a50473002f0556
00a50473002f055600a50473002f057500a5047d002f0556002b04a2ffb4
055600a50473002f055600a50473002f055600a50473002f023900840239
008902390084023900890639006504e300420639006504e3004206390065
04e300420639006504e3ffc00639006504e300420639006504e300420639
006504e3004207920065065c004207920065065c004207920065065c0042
07920065065c004207920065065c004205c7009c04e3007d05c7009c04e3
007d0758009c0671007d0758009c0671007d0758009c0671007d0758009c
0671007d0758009c0671007d055600230473001505560023047300150556
0023047300150556002304730015055600a50473002f055600a50473002f
056d008605df008e048600370486008708d9002006dd000c056d00290486
0027056d002904860027056d00860486003708d9002006dd000c054f003d
040a002b05df008e0486008705df008e048600870655005a0486005005df
005b04120050056d00170412001e056d00170412001e056d00170412001e
05ac0059047a004c074800a80600008d08000012071d003806aa0097071d
008005c700a3031d00600222ffbc05c7003705c700a204e300a205c7001b
055600a204e3003d05c700a206390068025e009305c700a20558002d071a
00ae063900ba04e300520639006805c700a2055600a204e3002f04e50029
0556002705c700420556002d06ac007b06390044025e00040556002704e5
004804d500770473002504e3006204730077038d005204e1009a04e10081
0239008d0473008d0473003104e1009a047300310400005604e5006004e3
009a0473004e04e500600400004604e1009a05c700580473001405c7006d
05c7003b0239ffe904e1009a023900710222ffb20000fd4802c601a401c7
006a01c7006a0000fc910000fc9001c7006a03290014032900140340006a
036a006a022200060222008c0376006a01c7ff9e036e006a01c7ff9e0800
0073062500310639fffe0239008902390084055400e1078d007b078d00e1
0473002f0473002f05c700340473003b0473003b055600a50473002f0556
00a50473002f055600a50473002f0239ffbb0239ffb70239008906390065
04e300420639006504e300420639006504e30042055600550473004205c7
009c04e3007d0473001a0758009c0671007d0602003f04e3ffff05c7000d
04e30087071d0080043f009c0460007f0400006004d9006e0356fff8048b
00350602005d047300350655004b048600370639006502aaffef07ac001b
07ac001b09b600870000f9290000f9d30000f9d30000f9650000f9dd0602
005d047300350655004b048600370222008c032900140464003104e30034
0400002104e3004205300087052b003f04e3007704e3003f04e3004204e3
0087054500870271008b078d003f03c60081031d008104e3003c04e3fffe
04e3fffe0800003f064c001504db001506b00015057f008b0555008b01a4
006f01a4006f0239008402aa010d02aafff602aa00af02aa000702aa010d
02aafff602aa00af02aa000701a4006f01a4006f02aaffef02aafff60272
004402720044011d0005018f0041018f004101e30041031d0007023a000b
0272003e0272003e0256000c0256000c025600130256001302aa002f0256
00250256002502560025023900210239000d011c00450256002b02390012
02560013025600130256000c0256000c02aa007b0272003e0000fc870000
fc690000fc690000fd260000fd260000fc2c0000fc2c0000fb4f0000fc69
0000fc2c0000fc870000fc810000fc810000000002390000000000000000
000000000000031d002f031d002f08dc00af07ac001b02aa00e809c6007b
07ac001b071d01040702000602aa008002aa008000000000000000000000
000000000000000000000000000006c5001b023a0020023a001b0239001b
02390020023a001a0239001b0239001e0256002501550018025600250155
002e0155000a02720044023a0020023a0047023a00200239001b023a001b
0239001b02390020023a001a0239001b0239001e02560025015500180256
00250155002e0155000a06f900340639005504e3009c04e3009c05560023
07d6fff70600002a078e001104e300820800004e06ac002f05c7005c05c7
006f04e5fffa0696000707d6002407d600310556009b04e300730556009b
04e3007304e3001306390065052b009a02ad002f036dfff605c700420306
0017030bffd804e3007b04e3007b023900090239000904e3004204e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e500480629
006a063b006a086e009b081d006e078d006a07f0006a078e0070078e0048
047300770473007704730077047300770473007704730077071d006a071d
00b208cc009008c4009a0896009108c0009504e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a04e1009a04e1009a078e006a078e006a093d
006a0935006a0907006a0931006a078eff9e078eff9e0239008d0239008d
0239ffbd0239ffc10239ffd10239ffc10239ffd30239ffd30425006a0425
006a05d4006a05cc006a059e006a05c8006a0425ff9e0425ff9e04e50060
04e5006004e5006004e5006004e5006004e500600800006a0800006a09af
006a09a7006a0979006a09a3006a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a04e1009a071d006a08c4006a08c0006a0792
ff9e05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b
05c7003b07ec006a07ec006a099b006a0993006a0965006a098f006a07ec
ff9e07ecff9e04e5004804e50048047300770473007704e1009a04e1009a
023900510239005604e5006004e5006004e1009a04e1009a05c7003b05c7
003b04e5004804e5004804e5004804e5004804e5004804e5004804e50048
04e500480899006a0878006a0a73006a0a7c006a0a15006a0a77006a09c7
006609c7006604e1009204e1009204e1009204e1009204e1009204e10092
04e1009204e1009209c7006a09c7006a0b76006a0b6e006a0b40006a0b6a
006a09c7ff9e09c7ff9e05c7003b05c7003b05c7003b05c7003b05c7003b
05c7003b05c7003b05c7003b0a25006a0a25006a0bd4006a0bcc006a0b9e
006a0bc8006a0a25ff9e0a25ff9e04e5004804e5004804e5004804e50048
04e5004804e5004804e5004805c7003705c7003706cd000606cd008c07d8
003704e1009204e1009204e1009204e1009a04e10092076300060784008c
07e2000607ca008c080700a20239ffbf0239ffaa0239ffb60239ffb60239
ffcf0239ffc9025effd2025effc2043b002d0453008c04e1009a04e1009a
04e1009a04e1009a04e3009a04e3009a04e1009a04e1009a055600270556
002707a500580797008c071d006a05c7003b05c7003b05c7003b05c7003b
05c7003b07f60045082b0059086500060899008c0852003104e500480473
007704e1009a0239008d04e5006004e1009a05c7003b06cd008c0784008c
07ca008c0453008c07d4005e0775006c0842006c0239ffb604e1009a067d
003d04f700db04f7007b03220013031e002b0464003104e5004804e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e5004804e5
004804e5004804e5004804e5004804e5004804e5004804e500480239ffb6
0239ffb60239ffb50239ffb60239ffb60239ffb60239ffb60239ffb60239
ffb60239ffbe0239ffbe0239ffb50239ffbe0239ffbc0239ffbe0239ffbe
0239ffbe0239ffbe04e1009a04e1009a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a04e1009a04e1009a06cd000606cd008c0629
006a086e006a078d006a063b006a085c006a07f0006a06cd000606cd008c
0629006a086e006a078d006a063b006a085c006a07f0006a047000060453
008c0453008c0425006a05d4006a059e006a0425006a05cc006a05c8006a
047000060453008c0453008c0425006a05d4006a059e006a0425006a05cc
006a05c8006a07a500060797008c0797008c071d006a08c4006a08c0006a
071d006a08c4006a08c0006a07a500060797008c0797008c071d006a08c4
006a08c0006a071d006a08c4006a08c0006a05c700a305c7005c06390065
0239003b05aa008f055600a305c7004a0000fcfb04b5004a04e3003f0639
005a04e5004607b0004107b4004205e5001a06ac004506ac004506ac0043
06ac0043063900b405560029082200a205e1005b06ac007b05c7006d05c7
00340473001a080a00a20642005b0547001503d0001f0636003005ba0029
05c700a30473003b02aaffcc04ac009a0425009a063d009a0524008705c7
00a10473008204e300340400002108d9ffef06ddfff7054f0062040a0033
056d00a00412006a05df00a20486007c05df005f0412002c04f800220412
0028056dfff80412ffe105ac00a0047a006205ac00a0047a006205560023
0556002304d900ac037c007505ac00a004d7006206e300a00552006a0776
00a205d9007c05560023055600230731001305d100230767002505f80025
0767002505f80025075b00360543001b05df00a20486007c0473003b054f
00a6054f00a606ac007b04f0005b088a003e06a6003305c7003904e1001d
05eb002f04e3001a04730047054f0062040a003305f10022049c00140239
0089056dfff80412ffe10556002f05c7003405c7005c0473004704e3fff1
04e3002102390059031e002b04e30021055600a304e3007b04e3007b0556
00a50473002f0473002d0239fff305c7009c01a9001a01a9001a02aa000c
02aa000c02aa000702aaffe102aa00e802aa002402aa0024067d0057067d
003d067d00ad02aa00e8067d003d067d005c067d011002aa00e802aa00e8
063900680412002c0412002c055600a504e3008005c7005c06aa00970630
00970548001605c7005c05c7005c05c7005c047300470473004704730047
04e3003f061b003a06a80039062e003b0384002b062200240549003b04e5
004f02aa00bf02aa00bf02aa00bf02aa00bf025d003d025e003d03cc0009
03cc000903c3000003c3000003c3000004c2001303fe0027043c005c0444
00780444007803070055034f0012070f003e0662004405fe00350000f7dc
0698004a0545004901ec004e01f4004e01b3002a01b2000c01d3002b01d3
001a033c001f0343001f03420013033f0013033f001302ff004e0224000a
0224000b07ec003d0982004e0933004b093300020149004e0485002505d2
000705d1000d04d10014047a00200224000a0224000b044b0041044b0041
04290041038c0008049e00440000fb230000fc720000fb870000fc560000
fc4f0000fa110000fcaf0000fe390000fc470000fc100000f9d30000fc5e
04cc003c04cc00380468003c046800380821001b04a60021044400220533
003b069a0037057f003a071d006a08c4006a08c0006a05c7003705c70037
025effd3025effd20556002705560027045f001605e5001a05e5001a05e5
001a0800ffeb0800ffeb080003b40800038c080003b40800038c0800ffe9
0800ffe9080003b40800038c0800ffe90800ffe908000000045f0016011d
0045023a001e023a001802720021023a000d023a001805c7005c06390055
05c7005c045e0023063c002f04e3002105c7003405320053062500320508
003205c70058071d008006420033067800390832003604b5004a04b5004a
03470042034300470346004103430047034600570344004f034600570344
004f03a1005703940057039400570394005703a1005703a0000d03940000
039400000394000003a0000d03e9005703dd005703dd005703dd005703ea
00570397000303fc003803fc00290412001505a8003106de002e039b0073
0000fbf40000fbf40000fbe00000fbe00000fbe00000fbe00000fb9e0000
fb9e0000fcf104cc0038046800380aac0065095600420444007804440078
044400780329002a0329002a035d002a050d0028037800570378002d0329
00210329002102de003202de00320378002f019400610329005c050d005b
037800600378002f032900320378002f0378002f0378005901e4000f0378
00590383003a050d005b03290012036e00540329001a0378004604f40052
066f003604f5005204e3004204e300410501003b04fe003d0530003b078e
00420329000e019400610236005c0378005903290012036e00540329001a
0378006d0329000e040a00460604001202390089043c005c089800290724
0037052c00210558001d0320000e052b002303730017031c000f031f0010
023900920400009202390085040000970239009204000092023900850400
00970519001b070200090310007e05d500a208c00022047300400351002e
049300600473003604730036047300360473004004730034046000360473
003d03cc000903cc000903cc0009046d001603a2003a044d003804b2003a
0797003a0454003a0459003a05a0003a079e003a04d2003a042c003a090a
003a0459003a047e006b06e2003a044f003a0490003f0672003a043c006b
0616003a06dc003a0630003a0467003a0678003a043d003a0485003a042d
006b0497003a046e003a0442003a04aa003a043f006b0657003a03c0003a
0568003a04c3003a0469003a0409003a0463003a06fc003a041c00bc04d5
00b10473003e047300310000000000000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000114000001140000
011400000114000001140000011400000114000001140000011400000114
000001140000011400000114000001140000011400000114000001140000
011400000114000002d4000002d4000002d4000002d4000002d4000002d4
000002d4000002d4000002d4000002d40000041c0000041c0000041c0000
041c0000041c000004e8000005dc000005dc000006440000064400000644
0000064400000644000006e4000006e4000006e4000006e4000007780000
07780000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c000100000895007a0009006c000800020010
00100066000007e80b970004000100000045034200010000000000000050
000000010000000000010009005000010000000000020004005900010000
00000003002401ad0001000000000004000e01d100010000000000050008
02980001000000000006000e02a00001000000000007003202ae00010000
00000012000e045700010000000001000009046500010000000001010010
046e0001000000000102000e047e00010000000001030014048c00010000
00000104001204a00001000000000105000904b20001000000010004000e
01df0001000000010007002f02e00001000000020004000e01ed00010000
00020007003c030f0001000000030004001301fb00010000000300070030
034b0001000000040004000d020e0001000000040007003a037b00010000
00050004000d021b0001000000050007003603b500010000000600040011
02280001000000060007003003eb0001000000070007003c041b00010000
000800040013023900010000000900040011024c00010000000d00040010
025d00010004000c0004000e026d00010004001f00040010027b00010005
000a0004000d028b0003000104030002000e011700030001040400020004
00ad0003000104050002000801390003000104060002000600c700030001
040700020008006d0003000104080002000c014900030001040900020008
005d00030001040b0002000c00cd00030001040c00020008006500030001
040d00020006015500030001040e00020010015b00030001041000020012
008700030001041100020008007500030001041200020006009900030001
04130002000600810003000104140002000600d900030001041500020008
00df0003000104160002000e00b90003000104180002000a017f00030001
04190002000c00f500030001041a00020014012500030001041b00020008
018900030001041d00020006010100030001041e00020006010700030001
041f0002000a010d0003000104210002000a016b0003000104220002000c
019100030001042a0002000601a70003000104390002000a019d00030001
043e0002000a017500030001080400020004007d00030001080900020008
01410003000108160002000e00e7000300010c010002000800b100030001
0c0a0002000e009fa920313939302d32303036204170706c6520436f6d70
7574657220496e632e20a92031393831204c696e6f7479706520414720a9
20313939302d3931205479706520536f6c7574696f6e7320496e632e4865
6c766574696361426f6c640042006f006c00640047007200610073004600
650074007430dc30fc30eb30c97c974f5300560065007400470072006100
730073006500740074006fbcfcb4dcccb4004e0065006700720069007400
617c979ad406390631064a0636004e00650067007200690074006f004600
650064004c006900680061007600610046006500740042006f006c006400
4e00650067007200690074006f041604380440043d044b04390046006500
740e2b0e190e32004b0061006c0131006e004e0065006700720065007400
610050006f006400650062006c006a0061006e00690042006f006c006400
42006f006c0064038803bd03c403bf03bd03b105e205d105d4004600e900
6c006b00f6007600e900720054006500620061006c005400650062006100
6c0041006c00640069006e0042006f006c0064041604380440043d043804
39092c094b0932094d092101101ead006d48656c76657469636120426f6c
643b2031332e30643165313b20323031372d30362d313448656c76657469
636120426f6c6448656c766574696361204772617348656c766574696361
204665747448656c7665746963612067726173736574746f48656c766574
6963612076657448656c7665746963612046657448656c76657469636120
4e65677269746148656c7665746963612043617272656761646f48656c76
65746963612048616c7666657448656c766574696361206c696861766148
656c76657469636120c3d3e8cf48656c76657469636120c8d1ccd3cae748
656c76657469636120f2e1e431332e306431653148656c7665746963612d
426f6c6448656c7665746963612069732061207265676973746572656420
74726164656d61726b206f66204c696e6f7479706520414748656c766574
6963612065737420756e65206d617271756520648e706f738e6520646520
4c696e6f7479706520414748656c766574696361206973742065696e2065
696e676574726167656e657320576172656e7a65696368656e2064657220
4c696e6f7479706520414748656c766574696361208f20756e206d617263
68696f207265676973747261746f206469204c696e6f7479706520414748
656c7665746963612069732065656e206765726567697374726565726420
68616e64656c736d65726b2076616e204c696e6f7479706520414748656c
766574696361208a72206574742072656769737472657261742076617275
6d8a726b6520669a72204c696e6f7479706520414748656c766574696361
20657320756e61206d617263612072656769737472616461206465204c69
6e6f7479706520414748656c766574696361206572206574207265676973
74726572657420766172656dbe726b652074696c68bf72656e6465204c69
6e6f7479706520414748656c76657469636120426f6c644c696761747572
6573436f6d6d6f6e204c69676174757265734e756d626572205370616369
6e6750726f706f7274696f6e616c204e756d626572734d6f6e6f73706163
6564204e756d626572734e6f204368616e6765000000b8005c2bb800522b
b800482bb8003e2bb800342bb8002a2bb10840ba019000145df44009011f
04000b1fd819eebe012e000d00e6012e000d00b0012e400c0d000963833c
1f63838348294109014b00370401001f014500240401001f0144b224ab1f
b8013eb224231fb8013db224231fb80102b2371d1fb80100400937241ffd
37621ffc37b80801401b1ff824931ff724931ff6243f1ff524311fd1371d
1fd037471fcd41b80801b21fcb2ab80201b21fca24b80401400f1fc82481
1fb537291fb4373b1fb227b80401b21fb141b80401b61fa437811fa384b8
0401b21fa22ab80401b21fa124b8019ab21fa024b8019ab61f9f243f1f96
83b80401b21f9527b80401b21f8227b80401b21f7084b80801b21f6fb3b8
0801b21f6eb3b802abb61f6d24261f6224b80101400b1f5d246c1f5c2439
1f5441b80125b21f4d27b80401b61f4c27cd1f4b41b80401b21f4024b801
9ab21f3683b80401b21f3524b80201b21f3224b8019ab61f2c24bb1f2884
b80801b21f2241b8040140131f20244c1f1d24261f2ca0961f2c245e1f41
2ab801a8b748282a2448279636b801f4b21f4d27b801f4b21f9527b801f4
b21f6e27b801f4b21f6327bd01a700470029015a00250199b348296fb3b8
0190b21f83b3b8019ab348283725b803e840121fb3274827842748273627
48272527482755b80154402c0797076407550733072b072907260721071e
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b806008516763f183f123e113946443e
113946443e113946443e113946443e11394660443e11394660442b2b2b2b
2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d
59b0324b5358b0ff1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b4b5279b3
5279eb56456523456023456560234560b08b766818b080622020b1eb7945
65234520b003266062636820b003266165b079236544b0eb234420b15256
4565234520b003266062636820b003266165b056236544b0522344b10056
455458b156406544b25240524523614459b35045484e4565234560234565
60234560b089766818b080622020b148454565234520b003266062636820
b003266165b045236544b048234420b1504e4565234520b0032660626368
20b003266165b04e236544b0502344b1004e455458b14e406544b2504050
45236144592b2b456953420000>
[2061 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 104 39 <0002009c0000057b05c2000900170053403277120107082707270c58126a
127b048c038a048a12980398049812ad030d022a15092a16021508063710
1a19012515191819b80120b3215256182b2b4ef44dfd4e10f64ded003f3f
ed10ed3130015d005d011121323736353426233617161716121510070229
01112101c7011cda562f8dd2bd5b9b604d3876a0feb2fd85027b04c2fc3e
d776a3e1f1fe1e33886eff0074fedaccfeed05c20000>HIBBAA+Helvetica-Bold AddT42Char 
1 276 58 <0001001e0000076f05c20012016a40f20a040505090c06104a044505480c
880487058a0c880d870f8610d904d705db0cd6101116001a041405190d17
0f05010202000304040206070705080909070d080e180e0209030a040505
0606080b06110712170a170b180c79037904760576067611ba03ba04b405
b506c903c904c605c606d903d904d605d606e903e904e605e6061f58035a
045505570657116903690466056606680b66110b090c0610190c1610b50b
bb11e50be511f70af50bf3110b0b0a02190a251209070911120219122512
0000020e070203110405090a1205000211100c0b0808090b030a05060c03
0e070001110312030410030e021417171a0abe01b8000701010002010100
0e01b8b612191365e572182b764e10f4184dfde4e4fd194e456544e64d11
1217391217391112173912173918003f3c3c3c3f173c12173905872e2b7d
4b52787a10c487102b7d4b52787a10c43130015d7171005dc487100ec487
100ec487100ec487100ec43130017271011317371321131737132101210b
0321010165c32a2ba60145af2d2dc50139fe61fedab23434b2fee2fe5e05
c2fcb4ebe60351fcb4ebe20355fa3e035e011dfee3fca205c2000000>HIBBAA+Helvetica-Bold AddT42Char 
1 724 68 <0003003bffde0438045f000e0039003a008f404f3b0235367901890104d8
1e0126f3e62ae7230e0d05020005131a2b24232204262e262e2a0d050200
041b0b221b162c3a1f072a0a0b2c320b3a134d004d2e3a352a3e261a3c1a
4d1b2d084d35193b3cbc01190021004801ae00182b2b4ef44dedf4ed4e10
f64de41139cde5e52f003fed3f3f3cfdcd39111217391239390111121739
111217392b3130015d005d010e010f010607061514163332363727363736
35342623220706072136373621321716151114171e011715212e01270607
0623222635343736371302de1b3730405a2742513a5c9b03ad4f223d5d5a
652a1e0afeed0947710113b38b8b02031c1cfeca0d0a033b4d5c7494c19b
55a57002121115090c1017275249416c8fef0a0f1a37433332253f8f5c90
4747c5fe0c344a38280d2a213a25402d35a99bc95a311501d4000000>HIBBAA+Helvetica-Bold AddT42Char 
1 1052 73 <000100150000028b05d100170081412f00150003002c0002001f004f0004
005f000400020004002c00170001000b0010005c001200090006000e000a
001900170017001a000a001f0003000d0015001600090027000e001f0013
00920010001900180019010e00210060006600182b2b4ef44df4e4fd3939
3cd4f44e456544e6003f3f3c4dfd3c3fed5df4ed393130001617152e0106
151415331523112111233533353437363302322c2618712bbbbbfee49f9c
3b3eed05d10303e803033520203cc9fc91036fc946af4262>HIBBAA+Helvetica-Bold AddT42Char 
1 1256 74 <00030042fe42045e045f000d002f0030005a40108a1e0111120524302f07
1206250d2429b8013f40201c202c180f30021f121f2527302c131a321c84
1b2d09362c19313298214845182b2b4ef44dedf4ed4e10f64d1139fdf4e4
2f003ffdcd3fed393f3f3ced11393130015d243635342623220706151417
1633121716173521111407062122242721161716333237363d0106070623
2202353412333702bd8a836e96391e203a960b3d68400115477afea6d1fe
f80e01360c1b2e6d9a3422292f5588d2fbf2de5bea97a59ba28d4b6e5f4a
8a0372192b739dfbf6d36bb8a4a332162767429c464623410127fcf3014b
03000000>HIBBAA+Helvetica-Bold AddT42Char 
1 1500 76 <00020089000001aa05cb00030007003b40224c004c015c005c010401b102
000406070a0917171a0006270107190809b2215045182b2b4ef43c4dfd3c
4e456544e6003f3f3f4ded3130005d012111210121112101aafedf0121fe
df0121fedf04c40107fe77fbbe00>HIBBAA+Helvetica-Bold AddT42Char 
1 1604 81 <0002008700000461045f00160017004b402d0501150125013701580b680b
060112100609241716070e040a170536170f021a19110e270f191819be21
5045182b2b4ef44dfdc44e10f64d1139ed2f003f3c3f3ced3f3939313001
5d001615112111342726232207061511211121153637363327038ad7fedc
172a7691361cfee401133731588769045cb1cdfd220297562e547b4165fd
b204409f542542030000>HIBBAA+Helvetica-Bold AddT42Char 
1 1764 85 <00010082000002fb045c0013004ab900030147b3020f0d06b80147401913
070d060c0a200230024002031517171a020e0b270c191415b80164b32150
66182b2b4ef44dfdc4d44e456544e64d5d003f3f3fed1139d4ed31300016
17112e01232207061511211121153637363302dd0b131b2a0dac3b21fee1
011042315080045c0101fedc0302703f83fdf70442be6d2843000000>HIBBAA+Helvetica-Bold AddT42Char 
1 1912 87 <00010015ffea027805680016004ab6102c0f1f0c2c11ba01710004015c40
1607005c0601061817171a0f06f4040927009203151718b8010eb3216066
182b2bd43ce4fd3cf43c4e456544ee4d003f3cfd3ced3ffdf4e431301335
3311211133152311141633323637150706272635111598011ab1b122570d
1d0e87ca4a30036dcb0130fed0cbfdc043210101d505074d3166029f>HIBBAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>HIBBAA+Helvetica-Bold AddT42Char 
HIBBAA+Helvetica-Bold /CharStrings get begin
/D 39 def
/W 58 def
/a 68 def
/f 73 def
/g 74 def
/i 76 def
/n 81 def
/r 85 def
/t 87 def
end
HIBBAA+Helvetica-Bold /Encoding get
dup 68 /D put
dup 87 /W put
dup 97 /a put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/DYERME+Helvetica-Bold /HIBBAA+Helvetica-Bold findfont ct_VMDictPut
/DYERME+Helvetica-Bold*1 
[68{/.notdef}rp /D 18{/.notdef}rp /W 9{/.notdef}rp /a 4{/.notdef}rp /f 
/g /.notdef /i 4{/.notdef}rp /n 3{/.notdef}rp /r /.notdef 
/t 139{/.notdef}rp]
DYERME+Helvetica-Bold nf
DYERME+Helvetica-Bold*1 [8.63492 0 0 -8.63492 0 0 ]msf
288.978 224.508 mo
(Drift)sh
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
313.342 243.217 mo
( )sh
DYERME+Helvetica-Bold*1 [8.63492 0 0 -8.63492 0 0 ]msf
315.737 243.217 mo
(W)sh
323.571 243.217 mo
(arning)sh
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
349.95 243.217 mo
( )sh
241.384 257.608 mo
( Stable)sh
287.763 269.841 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMC+ AddGlyphs
systemdict begin DYERMD+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g427 {685 0 64 -286 621 -220 setcachedevice
621 -220 mo
621 -286 li
64 -286 li
64 -220 li
621 -220 li
cp
false sop
f
}bind def
/g438 {266 0 100 -690 166 189 setcachedevice
166 189 mo
166 -690 li
100 -690 li
100 189 li
166 189 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMD+*1 
[32{/.notdef}rp /g41D /g427 /g438 221{/.notdef}rp]
DYERMD+ nf
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
221.54 224.508 mo
(!)sh
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1F {685 0 56 -534 621 24 setcachedevice
621 -249 mo
621 -259 li
56 -534 li
56 -469 li
488 -254 li
56 -39 li
56 24 li
621 -249 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
217{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
248.164 224.508 mo
(&)sh
%ADOBeginSubsetFont: DYERMF+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMF+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 0 0.856 0.448 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g3B0 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g3B0 {926 0 70 -448 856 -57 setcachedevice
856 -258 mo
760 -298 684 -373 619 -448 cv
599 -429 li
621 -396 652 -361 681 -333 cv
691 -323 695 -317 695 -308 cv
695 -298 679 -286 669 -286 cv
70 -286 li
70 -220 li
668 -220 li
686 -220 694 -210 694 -200 cv
694 -192 689 -181 680 -172 cv
650 -141 621 -109 598 -76 cv
618 -57 li
684 -133 760 -207 856 -248 cv
856 -258 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMG+ /DYERMF+ findfont ct_VMDictPut
/DYERMG+*1 
[32{/.notdef}rp /g3B0 223{/.notdef}rp]
DYERMG+ nf
DYERMG+*1 [10.4483 0 0 -10.4483 0 0 ]msf
273.27 224.508 mo
( )sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
205.079 220.91 mo
(")sh
205.079 228.825 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g29 {722 0 -8 -653 769 0 setcachedevice
769 -653 mo
521 -653 li
521 -637 li
577 -633 593 -619 593 -595 cv
593 -579 586 -558 579 -532 cv
533 -368 li
248 -368 li
302 -566 li
315 -614 342 -633 402 -637 cv
402 -653 li
131 -653 li
131 -637 li
194 -631 208 -625 208 -596 cv
208 -581 203 -559 196 -532 cv
78 -102 li
60 -37 48 -22 -8 -16 cv
-8 0 li
237 0 li
237 -16 li
177 -24 167 -31 167 -60 cv
167 -67 168 -75 170 -82 cv
236 -326 li
521 -326 li
457 -93 li
444 -44 426 -21 355 -16 cv
355 0 li
629 0 li
629 -16 li
564 -23 550 -30 550 -58 cv
550 -66 551 -74 553 -82 cv
685 -563 li
701 -621 712 -627 769 -637 cv
769 -653 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 220{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
208.947 224.508 mo
(#)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMH+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMH+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.279 0.979 1.566 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /gC put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/gC {979 0 0 -777 979 -564 setcachedevice
979 -564 mo
514 -777 li
466 -777 li
0 -564 li
99 -564 li
490 -709 li
880 -564 li
979 -564 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMI+ /DYERMH+ findfont ct_VMDictPut
/DYERMI+*1 
[32{/.notdef}rp /gC 223{/.notdef}rp]
DYERMI+ nf
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
208.441 221.63 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g28 {722 0 52 -666 722 18 setcachedevice
722 -319 mo
455 -319 li
455 -303 li
487 -300 li
520 -297 534 -285 534 -267 cv
534 -245 528 -221 508 -154 cv
486 -77 481 -65 469 -53 cv
447 -31 409 -19 364 -19 cv
235 -19 162 -97 162 -228 cv
162 -339 203 -450 268 -533 cv
316 -594 384 -632 463 -632 cv
525 -632 573 -611 604 -573 cv
626 -546 639 -510 641 -467 cv
659 -464 li
708 -661 li
693 -666 li
676 -642 659 -632 633 -632 cv
622 -632 612 -633 589 -642 cv
545 -659 496 -666 455 -666 cv
376 -666 300 -639 235 -594 cv
127 -519 52 -392 52 -251 cv
52 -183 79 -106 126 -58 cv
177 -7 252 18 339 18 cv
427 18 499 -1 576 -44 cv
625 -231 li
640 -288 657 -299 722 -303 cv
722 -319 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 219{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
232.907 224.508 mo
($)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
231.569 221.63 mo
( )sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
241.789 220.91 mo
(")sh
241.789 228.825 mo
(")sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMJ+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMJ+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.108 -0.207 0.536 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g203 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g203 {444 0 30 -441 425 11 setcachedevice
360 -98 mo
307 -41 258 -25 205 -25 cv
162 -25 116 -45 116 -106 cv
116 -182 198 -213 245 -213 cv
266 -213 273 -204 291 -204 cv
324 -204 336 -213 336 -231 cv
336 -243 320 -252 302 -252 cv
277 -252 259 -245 249 -245 cv
206 -245 175 -263 175 -298 cv
175 -390 258 -420 316 -420 cv
339 -420 353 -411 353 -400 cv
353 -381 338 -372 338 -352 cv
338 -328 353 -312 377 -312 cv
396 -312 425 -329 425 -358 cv
425 -406 382 -441 317 -441 cv
179 -441 94 -370 93 -294 cv
93 -264 112 -236 146 -230 cv
81 -213 30 -162 30 -100 cv
30 -48 57 11 177 11 cv
252 11 315 -11 376 -88 cv
360 -98 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMK+ /DYERMJ+ findfont ct_VMDictPut
/DYERMK+*1 
[32{/.notdef}rp /g203 223{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
258.913 224.508 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g25 {722 0 -8 -653 700 0 setcachedevice
131 -653 mo
131 -637 li
192 -635 207 -623 207 -596 cv
207 -581 203 -562 196 -537 cv
74 -92 li
58 -33 48 -26 -8 -16 cv
-8 0 li
249 0 li
366 0 467 -26 540 -83 cv
638 -159 700 -260 700 -384 cv
700 -559 583 -653 408 -653 cv
131 -653 li
cp
310 -584 mo
320 -619 342 -623 380 -623 cv
438 -623 480 -611 511 -588 cv
560 -551 589 -488 589 -408 cv
589 -307 550 -189 479 -120 cv
417 -60 339 -30 238 -30 cv
192 -30 170 -41 170 -67 cv
170 -80 175 -100 192 -162 cv
310 -584 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 220{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
263.545 225.947 mo
(#)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMC+ AddGlyphs
systemdict begin DYERMD+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g479 {685 0 64 -609 629 103 setcachedevice
629 -51 mo
629 -114 li
197 -329 li
629 -544 li
629 -609 li
64 -334 li
64 -324 li
629 -51 li
cp
629 103 mo
629 37 li
64 37 li
64 103 li
629 103 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMD+*1 
[32{/.notdef}rp /g41D /g427 /g438 /g479 220{/.notdef}rp]
DYERMD+ nf
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
220.786 243.217 mo
(#)sh
247.995 243.217 mo
(!)sh
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1D {685 0 56 -534 621 24 setcachedevice
621 24 mo
621 -39 li
189 -254 li
621 -469 li
621 -534 li
56 -259 li
56 -249 li
621 24 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
/g1D 216{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
274.62 243.217 mo
(')sh
DYERMG+*1 [10.4483 0 0 -10.4483 0 0 ]msf
299.726 243.217 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
205.079 243.217 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g38 {833 0 71 -653 906 18 setcachedevice
906 -653 mo
722 -653 li
722 -637 li
772 -636 789 -620 789 -595 cv
789 -576 779 -552 766 -527 cv
578 -162 li
538 -574 li
538 -577 536 -583 536 -589 cv
536 -621 553 -632 604 -637 cv
604 -653 li
368 -653 li
368 -637 li
426 -635 437 -626 443 -575 cv
451 -510 li
279 -162 li
235 -566 li
234 -573 234 -581 234 -586 cv
234 -624 255 -632 306 -637 cv
306 -653 li
71 -653 li
71 -637 li
103 -633 113 -631 122 -622 cv
136 -607 140 -590 151 -496 cv
212 18 li
231 18 li
453 -435 li
458 -435 li
508 18 li
528 18 li
829 -562 li
858 -617 868 -625 906 -637 cv
906 -653 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 219{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
209.712 244.656 mo
($)sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
231.535 238.899 mo
(")sh
231.535 246.815 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
235.403 243.217 mo
(#)sh
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
234.897 240.339 mo
( )sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
259.362 243.217 mo
($)sh
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
258.024 240.339 mo
( )sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
268.245 238.899 mo
(")sh
268.245 246.815 mo
(")sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
285.368 243.217 mo
( )sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
290.001 244.656 mo
(#)sh
gsave
408 248.254 mo
9.09495e-13 248.254 li
0 259.767 li
408 259.767 li
408 248.254 li
cp
eclp
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g46 {444 0 31 -441 412 11 setcachedevice
358 -109 mo
286 -50 255 -34 211 -34 cv
155 -34 118 -70 118 -125 cv
118 -140 118 -166 128 -186 cv
307 -209 412 -287 412 -373 cv
412 -415 383 -441 330 -441 cv
180 -441 31 -281 31 -126 cv
31 -43 85 11 166 11 cv
249 11 313 -27 370 -97 cv
358 -109 li
cp
152 -252 mo
186 -341 254 -418 311 -418 cv
339 -418 346 -403 346 -379 cv
346 -348 327 -312 296 -282 cv
259 -247 221 -229 135 -208 cv
152 -252 li
cp
false sop
f
}bind def
/g4D {278 0 41 -683 279 11 setcachedevice
279 -678 mo
273 -683 li
214 -670 177 -663 118 -656 cv
118 -640 li
136 -640 li
168 -640 185 -630 185 -618 cv
185 -615 185 -609 182 -599 cv
45 -75 li
42 -65 41 -53 41 -45 cv
41 -8 58 11 90 11 cv
144 11 181 -19 241 -114 cv
227 -124 li
202 -89 li
173 -48 150 -32 135 -32 cv
125 -32 118 -38 118 -50 cv
118 -58 121 -75 126 -93 cv
279 -678 li
cp
false sop
f
}bind def
/g54 {389 0 16 -442 366 13 setcachedevice
366 -442 mo
352 -442 li
344 -428 337 -424 322 -424 cv
314 -424 305 -425 286 -431 cv
261 -438 247 -441 230 -441 cv
156 -441 109 -399 109 -333 cv
109 -301 129 -256 172 -202 cv
211 -153 228 -119 228 -87 cv
228 -38 199 -10 152 -10 cv
100 -10 66 -51 52 -146 cv
36 -146 li
16 13 li
32 13 li
39 -3 50 -8 61 -8 cv
72 -8 86 -7 105 1 cv
128 10 143 11 160 11 cv
243 11 304 -40 304 -123 cv
304 -162 286 -201 236 -259 cv
197 -305 182 -334 182 -361 cv
182 -398 206 -418 241 -418 cv
290 -418 320 -385 330 -302 cv
346 -302 li
366 -442 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 216{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
205.079 257.608 mo
(%)sh
209.712 257.608 mo
(&)sh
212.612 257.608 mo
(')sh
216.671 257.608 mo
(%)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
221.304 257.608 mo
(%)sh
DYERMG+*1 [10.4483 0 0 -10.4483 0 0 ]msf
227.51 257.608 mo
( )sh
grestore
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
217.29 269.841 mo
( )sh
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g42 {501 0 17 -441 476 11 setcachedevice
463 -111 mo
436 -82 li
406 -49 393 -41 384 -41 cv
376 -41 370 -47 370 -54 cv
370 -74 412 -246 459 -417 cv
462 -427 463 -429 465 -438 cv
458 -441 li
397 -434 li
394 -431 li
383 -383 li
375 -420 346 -441 303 -441 cv
170 -441 17 -260 17 -105 cv
17 -29 61 11 117 11 cv
187 11 245 -33 320 -146 cv
299 -64 297 -56 297 -31 cv
297 -2 309 10 337 10 cv
377 10 401 -9 476 -100 cv
463 -111 li
cp
365 -361 mo
365 -290 335 -204 288 -136 cv
258 -93 211 -38 161 -38 cv
125 -38 101 -57 101 -112 cv
101 -175 136 -264 178 -327 cv
220 -388 264 -419 309 -419 cv
344 -419 365 -396 365 -361 cv
cp
false sop
f
}bind def
/g53 {389 0 45 -441 412 0 setcachedevice
176 -223 mo
231 -439 li
228 -441 li
73 -414 li
73 -397 li
88 -399 96 -400 104 -400 cv
124 -400 142 -395 142 -374 cv
142 -353 140 -344 126 -292 cv
45 0 li
121 0 li
171 -168 189 -208 232 -282 cv
268 -343 296 -376 314 -376 cv
321 -376 324 -372 330 -362 cv
339 -347 347 -336 365 -336 cv
395 -336 412 -360 412 -390 cv
412 -420 393 -441 365 -441 cv
342 -441 312 -423 286 -396 cv
245 -353 211 -300 192 -258 cv
176 -223 li
cp
false sop
f
}bind def
/g48 {500 0 8 -441 471 206 setcachedevice
471 -366 mo
471 -405 li
411 -405 li
408 -405 403 -407 395 -413 cv
368 -432 335 -441 297 -441 cv
196 -441 96 -372 96 -270 cv
96 -218 119 -182 175 -162 cv
121 -137 98 -107 98 -78 cv
98 -65 107 -50 125 -39 cv
27 20 8 47 8 98 cv
8 170 73 206 175 206 cv
308 206 385 142 385 55 cv
385 -5 339 -49 243 -72 cv
199 -83 172 -96 172 -114 cv
172 -135 191 -155 208 -155 cv
210 -155 212 -155 215 -154 cv
224 -152 235 -151 246 -151 cv
339 -151 431 -231 431 -315 cv
431 -332 431 -348 422 -366 cv
471 -366 li
cp
352 -348 mo
352 -306 339 -265 319 -231 cv
295 -190 268 -172 234 -172 cv
196 -172 174 -200 174 -247 cv
174 -346 234 -419 296 -419 cv
333 -419 352 -401 352 -348 cv
cp
325 90 mo
325 141 271 184 190 184 cv
110 184 63 152 63 82 cv
63 59 68 43 83 24 cv
97 6 139 -28 148 -28 cv
159 -24 169 -21 182 -17 cv
289 16 325 44 325 90 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 213{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
228.038 269.841 mo
(\()sh
233.267 269.841 mo
(\))sh
237.561 269.841 mo
(*)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
205.079 269.841 mo
(&)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g58 {667 0 15 -441 648 18 setcachedevice
403 -426 mo
403 -437 401 -440 395 -440 cv
390 -440 387 -438 382 -430 cv
190 -126 li
186 -214 172 -339 158 -407 cv
151 -439 150 -441 139 -441 cv
132 -441 123 -437 110 -434 cv
80 -426 46 -422 15 -417 cv
15 -404 li
43 -404 li
72 -404 81 -399 90 -362 cv
102 -314 113 -207 117 -120 cv
121 -29 li
123 10 125 18 134 18 cv
145 18 162 -7 198 -76 cv
217 -112 235 -145 253 -175 cv
342 -327 li
371 -17 li
373 9 375 18 382 18 cv
391 18 400 8 427 -25 cv
436 -36 li
574 -204 648 -321 648 -385 cv
648 -417 626 -441 596 -441 cv
574 -441 557 -426 557 -410 cv
557 -396 562 -384 578 -369 cv
594 -354 600 -346 600 -334 cv
600 -291 566 -238 435 -74 cv
403 -426 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 218{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
207.98 271.28 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4E {778 0 16 -460 775 0 setcachedevice
775 0 mo
775 -15 li
749 -17 li
719 -19 706 -32 706 -77 cv
706 -280 li
706 -398 671 -460 590 -460 cv
532 -460 481 -434 427 -376 cv
409 -433 375 -460 321 -460 cv
276 -460 234 -451 168 -383 cv
166 -383 li
166 -457 li
158 -460 li
107 -441 74 -430 19 -415 cv
19 -398 li
32 -401 40 -402 51 -402 cv
77 -402 86 -385 86 -336 cv
86 -88 li
86 -30 72 -16 16 -15 cv
16 0 li
238 0 li
238 -15 li
185 -17 170 -27 170 -70 cv
170 -348 li
170 -350 176 -357 183 -365 cv
203 -389 252 -408 289 -408 cv
332 -408 354 -366 354 -297 cv
354 -86 li
354 -25 343 -19 286 -15 cv
286 0 li
510 0 li
510 -15 li
453 -16 438 -30 438 -95 cv
438 -347 li
468 -390 498 -408 545 -408 cv
602 -408 622 -375 622 -296 cv
622 -90 li
622 -32 613 -21 557 -15 cv
557 0 li
775 0 li
cp
false sop
f
}bind def
/g42 {444 0 37 -460 442 10 setcachedevice
442 -66 mo
425 -52 415 -47 399 -47 cv
381 -47 368 -67 368 -113 cv
368 -304 li
368 -365 364 -386 340 -415 cv
316 -444 278 -460 222 -460 cv
177 -460 135 -448 107 -430 cv
72 -408 56 -376 56 -350 cv
56 -323 78 -304 99 -304 cv
125 -304 145 -326 145 -345 cv
145 -366 139 -369 139 -387 cv
139 -414 169 -436 209 -436 cv
254 -436 287 -408 287 -346 cv
287 -292 li
174 -250 137 -231 107 -211 cv
68 -185 37 -146 37 -94 cv
37 -28 80 10 142 10 cv
185 10 234 -3 287 -63 cv
288 -63 li
293 -10 315 10 352 10 cv
386 10 412 0 442 -38 cv
442 -66 li
cp
287 -127 mo
287 -98 281 -84 252 -64 cv
235 -53 214 -48 194 -48 cv
155 -48 125 -72 125 -125 cv
125 -156 135 -180 159 -202 cv
184 -225 225 -246 287 -268 cv
287 -127 li
cp
false sop
f
}bind def
/g59 {500 0 17 -450 479 0 setcachedevice
479 0 mo
479 -15 li
448 -15 425 -32 397 -75 cv
269 -271 li
352 -391 li
371 -418 401 -434 433 -435 cv
433 -450 li
275 -450 li
275 -435 li
305 -433 315 -427 315 -413 cv
315 -401 300 -383 278 -348 cv
268 -333 258 -317 248 -304 cv
244 -311 239 -317 234 -324 cv
205 -367 188 -400 188 -413 cv
188 -428 201 -434 231 -435 cv
231 -450 li
24 -450 li
24 -435 li
33 -435 li
63 -435 79 -422 110 -375 cv
204 -231 li
90 -66 li
62 -25 50 -18 17 -15 cv
17 0 li
162 0 li
162 -15 li
133 -15 122 -20 122 -33 cv
122 -40 128 -52 142 -74 cv
221 -197 li
312 -57 li
316 -51 318 -46 318 -39 cv
318 -21 311 -17 278 -15 cv
278 0 li
479 0 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
/g1D /g4E /g42 /g59 213{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
249.468 269.841 mo
(\()sh
257.597 269.841 mo
(\))sh
262.236 269.841 mo
(*)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4D {278 0 41 -683 279 11 setcachedevice
279 -678 mo
273 -683 li
214 -670 177 -663 118 -656 cv
118 -640 li
136 -640 li
168 -640 185 -630 185 -618 cv
185 -615 185 -609 182 -599 cv
45 -75 li
42 -65 41 -53 41 -45 cv
41 -8 58 11 90 11 cv
144 11 181 -19 241 -114 cv
227 -124 li
202 -89 li
173 -48 150 -32 135 -32 cv
125 -32 118 -38 118 -50 cv
118 -58 121 -75 126 -93 cv
279 -678 li
cp
false sop
f
}bind def
/g2D {556 0 -8 -653 559 0 setcachedevice
559 -180 mo
539 -186 li
511 -128 489 -95 457 -74 cv
408 -41 377 -36 277 -36 cv
195 -36 172 -46 172 -77 cv
172 -91 176 -108 182 -131 cv
302 -560 li
318 -617 343 -633 403 -637 cv
403 -653 li
130 -653 li
130 -637 li
192 -633 207 -623 207 -594 cv
207 -579 204 -559 196 -532 cv
74 -94 li
56 -31 48 -22 -8 -16 cv
-8 0 li
501 0 li
559 -180 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D 216{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
246.376 276.317 mo
(&)sh
%ADOBeginSubsetFont: DYERLY+ AddGlyphs
systemdict begin DYERLZ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1E {685 0 48 -386 637 -120 setcachedevice
637 -320 mo
637 -386 li
48 -386 li
48 -320 li
637 -320 li
cp
637 -120 mo
637 -186 li
48 -186 li
48 -120 li
637 -120 li
cp
false sop
f
}bind def
/gD {250 0 55 -102 195 141 setcachedevice
83 141 mo
152 108 195 45 195 -15 cv
195 -67 160 -102 115 -102 cv
79 -102 55 -79 55 -45 cv
55 -11 76 6 113 6 cv
124 6 134 2 142 2 cv
150 2 156 8 156 15 cv
156 48 128 85 73 122 cv
83 141 li
cp
false sop
f
}bind def
/gF {250 0 70 -100 181 11 setcachedevice
181 -43 mo
181 -73 155 -100 126 -100 cv
95 -100 70 -75 70 -44 cv
70 -13 94 11 125 11 cv
155 11 181 -14 181 -43 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLZ+*1 
[32{/.notdef}rp /g12 /g1E /gD /gF 220{/.notdef}rp]
DYERLZ+ nf
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
248.423 276.317 mo
(!)sh
253.471 276.317 mo
( )sh
257.159 276.317 mo
(")sh
259.003 276.317 mo
(#)sh
260.848 276.317 mo
(#)sh
262.694 276.317 mo
(#)sh
264.534 276.317 mo
(")sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
266.378 276.317 mo
(')sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g200 {506 0 -40 -678 514 205 setcachedevice
-9 127 mo
-15 148 -31 191 -40 205 cv
38 205 li
47 190 57 170 69 127 cv
107 -6 li
133 6 152 11 173 11 cv
216 11 258 3 297 -19 cv
390 -70 474 -191 474 -284 cv
474 -355 424 -392 386 -395 cv
386 -396 li
446 -423 514 -496 514 -577 cv
514 -653 446 -678 393 -678 cv
236 -678 167 -507 128 -368 cv
-9 127 li
cp
233 -477 mo
255 -561 302 -657 375 -657 cv
410 -657 442 -643 442 -566 cv
442 -508 395 -408 352 -408 cv
338 -408 317 -414 309 -414 cv
274 -414 265 -401 265 -390 cv
265 -378 277 -368 295 -368 cv
312 -368 327 -376 345 -376 cv
373 -376 385 -352 385 -317 cv
385 -183 281 -8 167 -8 cv
139 -8 119 -23 119 -45 cv
233 -477 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 222{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
274.147 269.841 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLY+ AddGlyphs
systemdict begin DYERLZ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g9 {333 0 48 -676 304 177 setcachedevice
304 161 mo
164 44 134 -69 134 -255 cv
134 -448 165 -541 304 -660 cv
295 -676 li
135 -581 48 -437 48 -252 cv
48 -82 134 87 292 177 cv
304 161 li
cp
false sop
f
}bind def
/gA {333 0 29 -676 285 177 setcachedevice
29 -660 mo
174 -546 199 -431 199 -244 cv
199 -50 171 44 29 161 cv
38 177 li
197 80 285 -62 285 -247 cv
285 -417 194 -584 41 -676 cv
29 -660 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLZ+*1 
[32{/.notdef}rp /g12 /g1E /gD /gF /g9 /gA 218{/.notdef}rp]
DYERLZ+ nf
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
280.05 265.524 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
282.501 265.524 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
284.548 265.524 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 1048 30 <000200e3fed001b80421000f00130039401d00230f0a6408132a1006080a
1517171a0734120a641000081914787c182b4e10f44d3c3cfd3ced4e4565
44e6003f3f4ded10edd4ed31301736373635342627233533151407060711
331523e3461b0e01016dd51f3482d5d5d10d502a3205070cdaca6b487617
0551da00>DYERLT+Helvetica AddT42Char 
1 3400 58 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>DYERLT+Helvetica AddT42Char 
1 6784 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>DYERLT+Helvetica AddT42Char 
1 8588 92 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/semicolon 30 def
/W 58 def
/p 83 def
/y 92 def
end
DYERLT+Helvetica /Encoding get
dup 59 /semicolon put
dup 87 /W put
dup 112 /p put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp 
/one 2{/.notdef}rp /four 6{/.notdef}rp /semicolon 5{/.notdef}rp /A 2{/.notdef}rp 
/D /.notdef /F 5{/.notdef}rp /L 6{/.notdef}rp /S /T 
2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /.notdef /v 
/w /.notdef /y 134{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
218.189 51.8095 mo
(Dynamic Adaptation of Layer W)sh
339.462 51.8095 mo
(eight)sh
278.274 91.3862 mo
(;)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g71 {685 0 48 -502 637 87 setcachedevice
637 -242 mo
637 -308 li
375 -308 li
375 -502 li
309 -502 li
309 -308 li
48 -308 li
48 -242 li
309 -242 li
309 -33 li
375 -33 li
375 -242 li
637 -242 li
cp
637 87 mo
637 21 li
48 21 li
48 87 li
637 87 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
/g1D /g4E /g42 /g59 /g71 212{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
234.807 64.0423 mo
( )sh
261.454 64.0423 mo
(+)sh
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g204 {454 0 30 -683 475 185 setcachedevice
290 -683 mo
211 -662 171 -623 171 -581 cv
171 -542 210 -523 241 -523 cv
242 -522 li
125 -408 30 -267 30 -107 cv
30 -9 96 11 152 11 cv
182 11 216 1 243 1 cv
289 1 319 12 319 51 cv
319 92 281 120 238 120 cv
213 120 203 91 173 91 cv
146 91 130 111 130 133 cv
130 170 163 185 197 185 cv
242 185 301 151 331 106 cv
349 80 359 47 359 21 cv
359 -33 315 -71 228 -71 cv
221 -71 203 -70 190 -70 cv
120 -70 81 -95 81 -163 cv
81 -294 199 -462 285 -520 cv
374 -528 475 -588 475 -632 cv
475 -647 465 -657 444 -657 cv
393 -657 306 -593 270 -550 cv
240 -555 222 -572 222 -598 cv
222 -623 247 -650 295 -668 cv
290 -683 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 221{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
271.483 64.0423 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g51 {504 0 -75 -441 472 205 setcachedevice
215 -428 mo
216 -432 217 -437 217 -437 cv
217 -439 215 -441 212 -441 cv
56 -419 li
58 -404 li
80 -404 li
96 -404 124 -401 124 -377 cv
124 -372 119 -346 108 -306 cv
-7 126 li
-19 173 -32 188 -75 189 cv
-75 205 li
128 205 li
128 189 li
81 189 66 182 66 160 cv
66 146 89 64 106 -6 cv
131 7 152 11 175 11 cv
321 11 472 -151 472 -316 cv
472 -394 431 -441 357 -441 cv
297 -441 240 -409 186 -328 cv
215 -428 li
cp
382 -313 mo
382 -243 361 -170 313 -103 cv
269 -41 221 -8 168 -8 cv
140 -8 120 -24 120 -46 cv
120 -80 156 -209 185 -284 cv
208 -344 267 -398 320 -398 cv
365 -398 382 -370 382 -313 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 /g51 212{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
218.189 64.0423 mo
(+)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
223.451 59.7249 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
225.902 59.7249 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
227.948 59.7249 mo
(%)sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
245.556 64.0423 mo
(+)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
250.817 59.7249 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
253.269 59.7249 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
255.315 59.7249 mo
(%)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4A {278 0 16 -683 253 0 setcachedevice
180 -632 mo
180 -660 158 -683 129 -683 cv
101 -683 78 -660 78 -632 cv
78 -603 100 -581 128 -581 cv
158 -581 180 -603 180 -632 cv
cp
253 0 mo
253 -15 li
187 -20 179 -31 179 -105 cv
179 -456 li
175 -460 li
20 -405 li
20 -389 li
38 -394 53 -394 62 -394 cv
87 -394 95 -378 95 -331 cv
95 -104 li
95 -28 85 -19 16 -15 cv
16 0 li
253 0 li
cp
false sop
f
}bind def
/g4F {500 0 16 -460 485 0 setcachedevice
485 0 mo
485 -15 li
436 -20 424 -31 424 -85 cv
424 -306 li
424 -405 382 -460 306 -460 cv
260 -460 214 -438 162 -379 cv
161 -379 li
161 -457 li
153 -460 li
104 -442 71 -431 16 -415 cv
16 -398 li
23 -401 34 -402 45 -402 cv
73 -402 80 -386 80 -337 cv
80 -94 li
80 -35 69 -19 18 -15 cv
18 0 li
229 0 li
229 -15 li
178 -19 164 -33 164 -72 cv
164 -348 li
210 -393 234 -405 267 -405 cv
316 -405 340 -375 340 -304 cv
340 -105 li
340 -39 328 -19 278 -15 cv
277 0 li
485 0 li
cp
false sop
f
}bind def
/g12 {500 0 111 -676 394 0 setcachedevice
394 0 mo
394 -15 li
319 -15 299 -33 299 -76 cv
299 -673 li
290 -676 li
111 -585 li
111 -571 li
138 -581 li
156 -588 173 -593 183 -593 cv
204 -593 213 -578 213 -544 cv
213 -95 li
213 -40 192 -19 118 -15 cv
118 0 li
394 0 li
cp
false sop
f
}bind def
/gC {685 0 48 -547 636 41 setcachedevice
636 -220 mo
636 -286 li
375 -286 li
375 -547 li
309 -547 li
309 -286 li
48 -286 li
48 -220 li
309 -220 li
309 41 li
375 41 li
375 -220 li
636 -220 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
/g1D /g4E /g42 /g59 /g71 /g4A /g4F /g12 
/gC 208{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
235.47 76.9947 mo
( )sh
249.817 76.9947 mo
(\()sh
257.946 76.9947 mo
(,-)
[2.9046 0 ]xsh
%ADOBeginSubsetFont: DYERML+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERML+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.164 0.56 1.066 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2 put
dup 33 /g3 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2 {468 0 139 -1066 382 164 setcachedevice
382 134 mo
292 24 220 -145 220 -451 cv
220 -754 292 -926 382 -1036 cv
382 -1066 li
240 -932 139 -718 139 -451 cv
139 -179 240 30 382 164 cv
382 134 li
cp
false sop
f
}bind def
/g3 {468 0 86 -1066 329 164 setcachedevice
86 -1036 mo
176 -926 248 -757 248 -451 cv
248 -148 176 24 86 134 cv
86 164 li
228 30 329 -184 329 -451 cv
329 -723 228 -932 86 -1066 cv
86 -1036 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMM+ /DYERML+ findfont ct_VMDictPut
/DYERMM+*1 
[32{/.notdef}rp /g2 /g3 222{/.notdef}rp]
DYERMM+ nf
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
269.661 79.1534 mo
( )sh
288.224 79.1534 mo
( )sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
293.104 76.9947 mo
(.)sh
301.199 76.9947 mo
(/)sh
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
324.248 79.1534 mo
(!)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
329.128 76.9947 mo
(")sh
333.895 76.9947 mo
(.)sh
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
339.112 79.1534 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
218.189 76.9947 mo
(!)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
224.092 72.6772 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
226.543 72.6772 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
228.589 72.6772 mo
(%)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
274.541 76.9947 mo
(!)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
280.444 72.6772 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
282.895 72.6772 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
284.941 72.6772 mo
(%)sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
311.228 76.9947 mo
(+)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
316.49 72.6772 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
318.941 72.6772 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
320.987 72.6772 mo
(%)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
235.47 91.3862 mo
( )sh
259.239 91.3862 mo
(#)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
218.189 91.3862 mo
(!)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
224.092 87.0688 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
226.543 87.0688 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
228.589 87.0688 mo
(%)sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
246.219 91.3862 mo
(+)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
251.481 87.0688 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
253.932 87.0688 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
255.978 87.0688 mo
(%)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
264.006 91.3862 mo
(!)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
269.909 87.0688 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
272.36 87.0688 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
274.406 87.0688 mo
(%)sh
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 2220 43 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>DYERLT+Helvetica AddT42Char 
1 2584 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>DYERLT+Helvetica AddT42Char 
1 7760 88 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/H 43 def
/P 51 def
/u 88 def
end
DYERLT+Helvetica /Encoding get
dup 72 /H put
dup 80 /P put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp 
/one 2{/.notdef}rp /four 6{/.notdef}rp /semicolon 5{/.notdef}rp /A 2{/.notdef}rp 
/D /.notdef /F /.notdef /H 3{/.notdef}rp /L 3{/.notdef}rp 
/P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
212.354 141.037 mo
(Hidden Layer Pruning Scenario)sh
354.144 153.27 mo
( )sh
%ADOBeginSubsetFont: QJJAAA+Helvetica-Oblique Initial
ct_T42Dict begin
-0.93 -0.48 1.57 1.137
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Helvetica-Oblique
Type42DictBegin
[<00010000000b000b000b000b63767420f37d8ca3000000bc0000038c6670
676de80497d30000044800000a1d676c79662da3111b00005d7c00000834
6865616498f5e53400000e6800000036686865610cfb16f300000ea00000
0024686d7478472d862700000ec4000022506c6f63610044259800003114
000022546d61787010f30ac500005368000000206e616d65c922eae50000
53880000057870726570b5b19784000059000000047c6764697200000000
0000000000000000c0051000bd05280080051a002f041f000000d9ff0000
daff0000d9ff55fee6ffc70510006dfef1ff3b030000b9000000b900fe02
3c3fc0008d009b00af000600a800c00028005e009800c9006a01b9005c01
b400d6001e012e0080000400b8004c00cc00ff01d1ff6600a400af007400
c2009500b1000c0028006d0015004c008e0025017aff0c0040004c006200
8400a2ff240038008600bd0039005e008e00ed00a9ffb3ff400052005500
aa00ab00c200cb002301b1021304aeffe4ff0800510074008400aa00d100
4cffafff12002c004200500051008400be002501da0368ff18003b009800
9c009f00a100c100ec008201b40168ff76ffd0ffe1ff020018001c005300
53007d00b401e101af0386049cffeafffeff1f0028002a00520060009300
a300aa00af00af00c000000145016b0174019301950140028202b4028504
1705fdfe060029004700470048006f008800b400b900c400f200f900ef01
180210037403c50335fff3ff0b004b004c00520055006500760076008700
87008e00ab00bb0006013001430150017d0194019501d3012a0255025802
77027802e6024e035c037903d3037304b2048c0598050b06f5febbffc7ff
d5ff17001d005b0072007e009c00c200d000f400fa00030106011c012501
3b0142015e015e0180019b01b902a101b9015002c001d001aa02df01e301
ef01fb0105020c0215022b0274029302ab02c202ce02690395039903df03
f5033e040205a105e5052506db0762fe89fecefe3bffe1fff8ff03000800
2100390042004e005f0061006f00700034007f008e00ad00ad00af00bd00
c400c500c900c900c900e3001c01ed00f800f900000112011a0132014d01
4d014e014f01660169019e01ba01ba01be01e301ef01f601000200020902
110217021c02530262026d028002d50280021b032a034a035a03af03af03
c803d603fb03fb03050413041504470449048c006d049a049a04a604a804
b204cf0439053e054e055605800589058c056303d105d6057e068e06b206
ef06f00628074c076f078c07b400c900c000c10000000000000000000000
000004002401af0032006e0063004401620196004301a10161018a007400
64008801ef01700128005dff7e0347033002aa00be007b0062009a007d00
89005c03a100d8ffaa03d70093006c0000008000a70042041d0097051d00
820030002a002a002a002a00002a0093007600ac011500ac00b800c500d1
0000002bfe55001a042f002105be002740292a292827262524232221201f
1e1d1c1b1a191817161514131211100d0c0b0a090807060504030201002c
4523466020b02660b004262348482d2c452346236120b02661b004262348
482d2c45234660b0206120b04660b004262348482d2c4523462361b02060
20b02661b02061b004262348482d2c45234660b0406120b06660b0042623
48482d2c4523462361b0406020b02661b04061b004262348482d2c011020
3c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51
582320b04d44235920b09051582320b00d44235921212d2c202045186844
20b001602045b04676688a4560442d2c01b9400000000a2d2c00b9000040
000b2d2c2045b00043617d6818b0004360442d2c45b01a234445b0192344
2d2c2045b00325456164b050515845441b2121592d2c20b0032552582359
212d2c69b04061b0008b0c6423648bb8400062600c642364615c58b00361
59b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d
2c45b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040
608b482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0
0185592d2c20b0032545b019236a4445b01a23444565234520b00325606a
20b009234223688a6a606120b0005258b21a401a4523614459b0005058b2
19401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b2118
7e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c456920b00943b002
2660b00325b005254961b0805358b21940194523616844b21a401a452360
6a44b209191a45652345604259b00943608a103a2d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2c764520b003254523616818236860442d2c7645b003254523616823
18456860442d2c7645b0032545616823452361442d2c4569b014b0324b50
5821b0205961442db8002b2c4bb800095058b101018e59b801ff85b80044
1db9000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a
212db8002e2c2046b003254652582359208a208a49648a204620686164b0
04254620686164525823658a592f20b00053586920b000545821b040591b
6920b000545821b0406559593a2db8002f2c2046b00425465258238a5920
46206a6164b0042546206a61645258238a592ffd2db800302c4b20b00326
50585158b080441bb04044591b21212045b0c05058b0c0441b2159592db8
00312c2020456944b001602020457d691844b001602db800322cb800312a
2db800332c4b20b003265358b0801bb040598a8a20b0032653582321b0c0
8a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326535823
21b801408a8a1b8a235920b80003265358b0032545b8018050582321b801
8023211bb003254523212321591b2159442db800342c4b535845441b2121
592db800352c4bb800095058b101018e59b801ff85b800441db900090003
5f5e2db800362c2020456944b001602db800372cb800362a212db800382c
2046b003254652582359208a208a49648a204620686164b0042546206861
64525823658a592f20b00053586920b000545821b040591b6920b0005458
21b0406559593a2db800392c2046b00425465258238a592046206a6164b0
042546206a61645258238a592ffd2db8003a2c4b20b0032650585158b080
441bb04044591b21212045b0c05058b0c0441b2159592db8003b2c202045
6944b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b
20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a2359
20b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a
1b8a235920b80003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db8003e2c4b535845441b2121592db8003f2c
4bb800095058b101018e59b801ff85b800441db9000900035f5e2db80040
2c2020456944b001602db800412cb800402a212db800422c2046b0032546
52582359208a208a49648a204620686164b004254620686164525823658a
592f20b00053586920b000545821b040591b6920b000545821b040655959
3a2db800432c2046b00425465258238a592046206a6164b0042546206a61
645258238a592ffd2db800442c4b20b0032650585158b080441bb0404459
1b21212045b0c05058b0c0441b2159592db800452c2020456944b0016020
20457d691844b001602db800462cb800452a2db800472c4b20b003265358
b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b003265358
2321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8
0003265358b0032545b8018050582321b8018023211bb003254523212321
591b2159442db800482c4b535845441b2121592db800492c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944
b001602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db8004d2c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db8004f2c2020456944b001602020457d691844
b001602db800502cb8004f2a2db800512c4b20b003265358b0801bb04059
8a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a
8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b0
032545b8018050582321b8018023211bb003254523212321591b2159442d
b800522c4b535845441b2121592db800532c4bb800095058b101018e59b8
01ff85b800441db9000900035f5e2db800542c2020456944b001602db800
552cb800542a212db800562c2046b003254652582359208a208a49648a20
4620686164b004254620686164525823658a592f20b00053586920b00054
5821b040591b6920b000545821b0406559593a2db800572c2046b0042546
5258238a592046206a6164b0042546206a61645258238a592ffd2db80058
2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c044
1b2159592db800592c2020456944b001602020457d691844b001602db800
5a2cb800592a2db8005b2c4b20b003265358b0401bb000598a8a20b00326
53582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920
b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b
8a235920b80003265358b0032545b8018050582321b8018023211bb00325
4523212321591b2159442db8005c2c4b535845441b2121592d0000000001
00000000000005b62a905f0f3cf500110800000000005f4d8f0000000000
d5670bf3f88afc270c92091b000200090001000100000000000100000629
fe2900000c01f88afc350c92080001b30000000000000000000000000894
05120042000000000239000002390000023900ed02d7012c0473005e0473
0078071d0100055600860187017802aa00d702aaffef031d014f04ac00b9
0239006902aa00ba023900af023900000473008f0473019b047300400473
00640473007e0473007404730085047301170473006904730080023900e3
023900a204ac007904ac008b04ac001704730172081f013b0556001e0556
009705c7009e05c700a5055600af04e300af063900ab05c700a1023900c9
040000400556009c0473009c06aa009705c7009c063900a4055600af0639
00a405c700b40556009204e3013405c700f90556016c078d015d0556002a
0556016204e3002f0239002a023900f30239ffda03c100f80473ffca02aa
01b50473007004730076040000750473006f0473007d023900b10473002c
0473008401c7008401c7ff800400008001c7008906aa0084047300840473
00720473001b0473006d02aa00890400006e023900bf047300ab040000ee
05c700f50400000b0400001b0400003402ac003b0214009002acffd204ac
00560556001e0556001e05c7009e055600af05c7009c063900a405c700f9
0473007004730070047300700473007004730070047300700400006f0473
007d0473007d0473007d0473007d023900bd023900bd023900bd023900bd
047300840473007204730072047300720473007204730072047300ab0473
00ab047300ab047300ab0473010b03330145047300b10473005b04730085
02cd00ea044c00a304e300c705e5007005e5006d0800020b02aa019b02aa
01580464008b080000100639004705b400a10464005c0464005a0464005c
047300c7049cff5b03f4009705b4ffe90696008d046400c30231002802f6
010302ec010f0625005e071d006504e3005c04e3008e02aa009304ac00e7
046400a50473ffd40464007e04e5007104730124047300ef080000ed0239
00000556001e0556001e063900a408000096078d007a0473006308000159
02aa011a02aa011701c7015001c70173046400b903f400420400001b0556
01620156fea205f400cf02aa011602aa00d7040000b1040000b104730062
0239012001c7006902aa000d0800009e0556001e055600af0556001e0556
00af055600af023900c9023900c9023900c9023900b8063900a4063900a4
06520066063900a405c700f905c700f905c700f9023900bd02aa015102aa
010202aa012502aa012a02aa01fd02aa019b02aa003002aa00fe02aa004c
02aa01140473004f01c70042055600920400006e04e3002f040000340214
009005c700a504730078055601620400001b055600800473002304ac00b9
04ac009202aa014c02aa008402aa009906ac010706ac017706ac00e70473
0030063900ab0473002c023900c9055600920400006e05c7009e04000075
05c7009e040000750473006f0556001e047300700556001e047300700556
001e0473007005c7009e0400007505c7009e0400007505c700a50548006f
055600af0473007d055600af0473007d055600af0473007d055600af0473
007d055600af0473007d063900ab0473002c063900ab0473002c063900ab
0473002c0473002c05c700a10473008405c700a104730084038f015a0371
013503330139031f013a0239ffd601c7ff66063900c9038e008404000040
01c7ff800556ffb60400ff7c0473009c021f00890473009c01c7ff880473
009c023f004e0473009c027b008905c7009c0473008405c7ffaa0473ff8b
05c7009c04730084047300e8063900a404730072063900a4047300720639
00a40473007205c700b402aa008905c7ffc002aaff8405c700b402aa0089
055600920400006e055600920400006e04e3011a0239003904e3013402e1
00bf04e30134028f006605c700f9047300ab05c700f9047300ab05c700f9
047300ab05c700f9047300ab05c700f9047300ab05c700f9047300ab078d
015d05c700f5055601620400001b04e3002f0400003404e3002f04000034
055600920400006e04e301340239006a0473008d0000fe3c0000fdfe0000
fd9e0000fd6e0000fd970000fdbe0000fe700000fdcb0000fe110000fd72
0000fddc0000fcd10000fc920000fccc0000fc9105c700a5063900ab0473
002c0473009c01c700060556009c0400008005c7009c0473008405c700b4
02aa000801aaff890237009f02aa00ba01c7ff8004000080023900b10473
00980473009b0400006f047300de0000fe830000fd770000fd9a023900c9
023900bd05c7009c047300840000fda00556ffba0556001005c7004c0473
00100556ff3704e300390748ffc504e3ffe905c7001005c7001005560056
0583ff81071d004c05c700390639007b05c700210556004c05c7007b0473
00a4055600660639003f04e3000005c700210537008f078d0021078d0021
06aa009c071d00100556002105c70025078dfffe05cb001d047300250473
002504730004031d001204beff960473003306aaffaa0400fff80473fffe
0473fffe0400000404c5ffd10558000404730004047300250473000404e3
ffbe0473002503d900810400ffe706aa00330400ffc50473000404460060
06ac000406ac000404e3006d05c700040400000404730033063900040477
ffec04e300390473003304730010031d00120239003901c7fffe0400fff6
05c70064047300330239003901c7fffe0831ffd306e1ffd1078d00100639
000401c7ff370556005e061b00790473004c055600560400000404000004
060a00b20473004c055600660400ffe705c700210473000404730010031d
00120000fe280000fe250000fe250000fe4e0000fd910000fe870000fe1e
0000fdbe0000fce80000fcaa0000fc430000fd1c0000fc770000fcbd0000
fd330000fc880000fc4a0000fc640000fc480000fc1a0000fc430000fc23
0000fcd10000fced0000fccd0000fbf20000fe250000fd460000fe250000
fd8e0000fd9e0000fcca000000000239ffc1047300ad06aa00b502aa0088
06aa00b502aa004702aa0088042b0071042b00780202009c033affa90239
0052023900650400000905c7001004000014047301720473016d047300d3
0400009704b2007604b200a505c700ae05c700a5048900ac055600ae0556
0083040000650498003906e600f9059500ab060a00a4021400b6037300b6
023900ed048c0080040000750134ffd402aa018302aa02010b0600a20556
00ed029600ed02aa014201c7019c02aa00ba044c0024042f0183042f0201
056501830565020102aa00ba0296017102aa00ba0800015902d50111011d
000000000000000000000000000000000000000000000000000000000000
023900000239000002390000023900000239000002390000023900000239
0000023900000000000000000000000000000000000000000000011d0000
008f000002aaff83037000b60473017202aa00ba02aa0133044c00b0044c
00f00556001e04e300ad0473009b071c00a4056800720000fe5f0000fe79
0000fd250000fd0b0000fdae0000fdc20000fe6d0000fdbe0000fdda0000
fdd30000fdca0000fdc10000fd330000fe190000fe730000fe160000fda6
0000fc100000fcdc0000fc710000fc9f0000fc420000fc710000fc430000
fdb40155011d027b011d0155011d0155fff40464ff480464008b03f4ff0a
03f4009705b4fffb05b4ffe90231fd30023100280464fda0046400a50464
ff3b0464007e08fa0145081601450556009c023900c9047200c906ab00c9
078f00c90556016c078f016c09c8016c0c01016c078f00c90556002a078f
002a09c8002a0473009c05c7009e05c700a506aa009701c70084038e0084
0555008405c70084040000ee05c700ee078e00ee095500ee05c700840400
000b05c7000b078e000b01c70089040000750473006f06aa008409e20073
08c1004e07db006f07da006a05a7007002f7005708e7007006f0006a05a1
00520556001e04730070023900c9023900bd063900a40473007205c700f9
047300ab05c700f9047300ab05c700f9047300ab05c700f9047300ab05c7
00f9047300ab0556001e047300700556001e0473007008000010071d0065
063900ab0473002c0556009c04000080063900a404730072063900a40473
007201c7ff8009cd005308fc006e07fb006f063900ab05c7009c04730084
0556001e0473007008000010071d00650639004704e3005c0556001e0473
00700556001e04730070055600af0473007d055600af0473007d023900c7
01c70052023900c901c7008c063900a404730072063900a40473007205c7
00b402aa008905c700b402aa008905c700f9047300ab05c700f9047300ab
05c700a1047300840556001e04730070055600af0473007d063900a40473
0072063900a404730072063900a404730072063900a40473007205560162
0400001b02aa0117023900c90556001e0473007005560097047300760556
009704730076055600970473007605c7009e0400006f05c700a50473006f
05c700a50473006f05c700a50473006f05c700a50473006f05c700a50473
006f055600af0473007d055600af0473007d055600af0473007d055600af
0473007d055600af0473007d04e300af023900b1063900ab0473002c05c7
00a10473008405c700a10473008405c700a10473008405c7ffbd0473ff8c
05c700a1047300840239ffab01c7ff5d023900c9023900bd0556009c0400
00800556009c040000800556009c040000800473009c01c700550473009c
01c700470473009c01c7ff870473009c01c7ff5f06aa009706aa008406aa
009706aa008406aa009706aa008405c7009c0473008405c7009c04730084
05c7009c0473008405c7009c04730084063900a404730072063900a40473
0072063900a404730072063900a404730072055600af0473001b055600af
0473001b05c700b402aa008905c700b402aa004a05c700b402aa004405c7
00b402aaffeb055600920400006e055600920400006e055600920400006e
055600920400006e055600920400006e04e30134023900bf04e301340239
008804e301180239000304e301040239ff9f05c700f9047300ab05c700f9
0473007605c700f9047300ab05c700f9047300ab05c700f9047300ab0556
016c040000ee0556016c040000ee078d015d05c700f5078d015d05c700f5
078d015d05c700f5078d015d05c700f5078d015d05c700f50556002a0400
000b0556002a0400000b055601620400001b04e3002f0400003404e3002f
0400003404e3002f0400003404730084023900bf05c700f50400001b0239
00b10556001e047300700556001e047300700556001e047300700556001e
047300700556001e047300700556001e047300700556001e047300700556
001e047300700556001e047300700556001e047300700556001e04730070
0556001e04730070055600af0473007d055600af0473007d055600af0473
007d055600af0473007d055600af0473007d055600af0473007d055600af
0473007d055600af0473007d023900c9023900bd0239009f01c700470639
00a404730072063900a404730072063900a404730072063900a404730072
063900a404730072063900a404730072063900a404730072071c00a40568
0072071c00a405680072071c00a405680072071c00a405680072071c00a4
0568007205c700f9047300ab05c700f9047300ab06e600f9059500ab06e6
00f9059500ab06e600f9059500ab06e600f9059500ab06e600f9059500ab
055601620400001b055601620400001b055601620400001b055601620400
001b055600af0473007d055600af0473007d056d001505df000d04860035
0486fffe0723ffc50589ffaa056dffb904860011056dffb904860011056d
00150486003508d9ffcb06ddffa4054fffe6040afff405df000d0486fffe
05df000d0486fffe0655007b0486002f05df00200412003b056d00460412
ffe9056d00460412ffe9056d00460412ffe905ac008c047a006d07480010
0600000a08000010071d006506aa009706aa008405c700b402aa00890222
00f50556001b05c700c504e300d505c70029055600c504e3004805c700b0
063900c2023900ba055600b00556002f071d00be05c700b004e300620639
00c205c700b0055600c504e3005804e1013d0556015c05c700b40558003d
06a800f206390064023900ba0556015c04e3009a04e3005e047300d504e3
00a3047300a3038d007404e300b804e500f5023900d1047300b004730025
04e3006204730124040000a004e300b004e300540473008d04e300b00400
00fb04e300b505c700b80473ffbe05c700bd061000a6023900d104e300b5
023901160222010e0000fcc50239005b016c015c016c015c0000fe3c0000
fdfe016c017c02ca011f02b5011f0305015c0312017c0222015a02220106
031e015c036201850333017c036201850735007f062500c30639003201c7
015001c70173047200ed06ac017206ac00ed0473007d0473007d0556001e
0473007004730070055600af0473007d055600af0473007d055600af0473
007d023900c9023900bd01c70084063900a404730072063900a404730072
063900a404730072055600920400006e05c700f9047300ab0400000b06e6
00f9059500ab060200d40473ff7c05c7ff980473008406aa008403f0009c
046000c203a6009c03e9009702cf00630448008c060200d4047300330655
00a70486008a063900a402aaffcc07c6002b07c6010c08e600840000fa2a
0000faf40000fb3c0000fb170000f9c3060200d404730033065500a70486
008a0222010602b5011f0473002504e3002f040000340473007204d20084
04dc006f0473007604bd006f04d7002c0473008404d700840222004b078d
007a0387008802aa004b04d2006d04b80107052b01070772006f056000bf
043a007705ce00b104c2008904b8008901a9018a01a901a401c7019c0187
016b02aa011802aa01c202aa01790187001702aaffc502aa006e02aa0025
01a900e001a900fa02aa000902aa00d6023a00dd023a00dd00e4005a0155
00e0015500df01c400df02e40116020000a8023a0154023a0152025600d7
025600a7025600b80256013402aa00b20256005c0256002d0256008b0200
00d2020000a100e300df025600e4023a0105025600350256ffba0256ffd9
0256ffa802aa003e023a01520000fc790000fc6d0000fc3c0000fd070000
fd170000fc060000fd5a0000fb380000fd3c0000fc060000fdcd0000fdc8
0000fdda0000000002390000000000000000000000000000031d0090031d
009006da018307c6ffe3023900cf08e6017207c6002b071d019a0703005f
0239002a0239002f00000000000000000000000000000000000000000000
0000067b007c023a00f1023900e9023900e4023a00ed02390135023a00de
023900ea0256010601550107025600ef01550115015500a0023a00ec023a
ffb3023a00380239ff8c0239ff9d0239ffab0239ffa6023affaf0239fff7
023affa00239ffac0256ffc80155ffca0256ffb10155ffd70155ff62063c
0011063900cd047301af0473009c0556002a06abffe9060000f307560144
047300a907c8010206ac010705c700b50556018404e501a90696ffdd06ab
ff1c06abffe9055600af04730076055600dd047300b604e3ffa8063900a4
04c400a102410022036900ed05c7009102bb00ab033affa9047301430473
015801c7002a01c700e30473002c04e3009a04e3009a04e3009a04e3009a
04e3009a04e3009a04e3009a04e3009a05c1005b05b3005b076c015c0776
017c0776015c078d017c07ca018507a00185047300a3047300a3047300a3
047300a3047300a3047300a306c2015c06c2017c0874015c0889017c085b
015c0868017c04e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b80733015c0733017c08e5015c08fa017c08cc015c08d9
017c0929018509290185023900d1023900d1023900d1023900d1023900d1
023900d1023900d1023900d103a5015c03a5017c0557015c056c017c053e
015c054b017c059b0185059b018504e300b004e300b004e300b004e300b0
04e300b004e300b007a5015c07a5017c0957015c096c017c093e015c094b
017c04e300b504e300b504e300b504e300b504e300b504e300b504e300b5
04e300b506c2017c0889017c0868017c08b80185061000a6061000a60610
00a6061000a6061000a6061000a6061000a6061000a60791015c0791017c
0943015c0958017c092a015c0937017c098701850987018504e3009a04e3
009a047300a3047300a304e300b804e300b8023900d1023900d104e300b0
04e300b004e300b504e300b5061000a6061000a604e3009a04e3009a04e3
009a04e3009a04e3009a04e3009a04e3009a04e3009a0811005b080c005b
0991015c09d8017c097f015c099b017c09d3018509ce018504e3004304e3
004304e3004304e3004304e3004304e3004304e3004304e30043096c015c
096c017c0b1e015c0b33017c0b05015c0b12017c0b6201850b6201850610
00a6061000a6061000a6061000a6061000a6061000a6061000a6061000a6
09ca015c09ca017c0b7c015c0b91017c0b63015c0b70017c0bc001850bc0
018504e3009a04e3009a04e3009a04e3009a04e3009a04e3009a04e3009a
0556001b0556001b066601110661010607a9001b04e3004304e3004304e3
004304e300b804e3004306ac015a06a7010606d2015a06ba0106083100b0
023900d1023900d1023900d1023900c7023900d1023900d1023900ba0239
00ba0343015a0348010604e300b504e300b504e300b504e300b504e30054
04e3005404e300b504e300b50556015c0556015c06b1015a0713010606c2
017c061000a6061000a6061000a6061000a6061000a6075a015a07890106
0792015a07a901060878005e04e3009a047300a304e300b8023900d104e3
00b004e300b5061000a60661010606a7010606ba01060348010607890106
0713010607a90106023900c804e300b504ac008304ea00d204f7016002f3
00ae02bb00cd0473002504e3009a04e3009a04e3009a04e3009a04e3009a
04e3009a04e3009a04e3009a04e3009a04e3009a04e3009a04e3009a04e3
009a04e3009a04e3009a04e3009a023900cb023900cf023900c6023900d1
023900cb023900bc023900c5023900c1023900cf023900d1023900d10239
00d1023900d1023900d1023900d1023900d1023900d1023900d104e300b5
04e300b504e300b504e300b504e300b504e300b504e300b504e300b504e3
00b504e300b504e300b504e300b504e300b504e300b504e300b504e300b5
04e300b504e300b5066601110661010605c1005b076c015c0776015c05b3
005b0776017c078d017c066601110661010605c1005b076c015c0776015c
05b3005b0776017c078d017c0343015a034801060348010603a5015c0557
015c053e015c03a5017c056c017c054b017c0343015a0348010603480106
03a5015c0557015c053e015c03a5017c056c017c054b017c06b1015a0713
01060713010606c2015c0889015c0868015c06c2017c0889017c0868017c
06b1015a071301060713010606c2015c0889015c0868015c06c2017c0889
017c0868017c05c700b405c7009e063900a401c700ca051d0029055600af
05c700a10000fd1c055200680473006f0639007b04730025077200920738
007605e5006e06ac00f406ac00f406ac00fe06ac00fe0556fffc04e3006d
082200d005e1008a06a800f205c700bd0556001e0400000b079900d005cf
008a04da00bd02ca00a905d90099058800e105c7007904730070031f0000
04da00a103eb00a1064900a104cf00840556009c0400008004e3002f0400
003408d9001406dd0030054f00b4040a0072056d00a50412007a05df00ac
0486009105df00c00412008104f8014604120100056d002e0412002405ac
0161047a00f705ac00ac047a0077055601620556010e04d900bc037c0091
05ac0161047a00f7063200a504df007a075f00ac059b0091055601480556
00fe06fe0146054e00fb074800da059400a0074800da059400a007720163
05b300fe05df00ac0486009104730070054f00c2054f006806a8007f04dc
005d0855004405e000260556009a0400006d0556016c04b600ee0400007c
054f00a2040a006105f10028049c0023023900bd056d002e041200240556
00340556001e05c7009e040000750473007c04e300cd01c7005802bb00cd
04e3010b055600af0473017204730120055600af0473007d0456004001c7
ff8005c700aa01a9009f01a9001d02aa00b002aa00ee02aa00f502aaffe9
0239013a02aa003802aa0038057f00be04ac008304ac00a0023900e304ac
00a9057c00ac04ac00f9023900e3023900e3063900c20412008104120067
055600ae0473002305c7009e06aa009705dd0041059b000f05c700b505c7
009e05c700b50400007c040000750400007c047300bd05ca007b06c600ce
063f00b4031f0065062e00f904e9009b0488004502aa017e02aa01e602aa
00be02aa00be0277003b0277003b034b0118034b0000034b00d2034b008c
034b00460487004203f70101045e0054043600830436008302fd00f3034f
0084069900b706550063052900b40000f88a06e1007d04e9005f01e0010b
01e9010b015d00e5015d012c019900ea019800f402fb013f0304013f0267
00c6025700c50257013e02c8010b01d8013201d800d407e9003a097c0014
0931ffdb0931ffcc013c004b0457007f058900940589013604be00100442
001c01d8007101d8001303fe007c03fe005c04040032036f009204670077
0000fb560000fc4c0000fbcd0000fd820000fd8b0000fa2a0000fc8e0000
ff9c0000fc510000fc180000f9e80000fdd30465005b0465006704010003
040100130776004e044c006003ea000c051a00340653007a04c8002206c2
015c0889015c0868015c0556001b0556001b023900ba023900ba0556015c
0556015c0404002205e5006f05e5006f05e5006f0800ffeb0800ffeb0800
03b40800038c080003b40800038c0800ffe90800ffe9080003b40800038c
0800ffe90800ffe9080000000404002200e400ec023affa4023affab023a
ffa50200ff72023affba05c7009e063900ab05c7009e047100c1055200de
04e300cb0556001e04d0009c05c2004e04d9004e05c7003906aa008405d0
00c1066400a1082d00b40552011705520097039c003f03800025039c011e
038000de039c010d038100bb039c00540381000202eb005302e3005302e3
005302e3005302eb005302eb011a02e300d102e3009102e3005002eb0017
0363005303630053036300530363005303630053027f00d2033000cf03b2
00d303c300d4050b00b3069c00c50390007e0000fd420000fd970000fd2c
0000fd700000fd6b0000fd380000fd2f0000fcf70000fcc5046500670401
00130a3900a4087300720436008304360083043600c2032900e603290136
035500ea0543003e032900ea032900e6032900ef0329010502f600e602f6
010c032900b6014300f402d700f104bb00f4032900f4032900e802d700e6
0329010b032900e8032900aa0194011e03290110037300db04bb011802d7
0140037800da0329012e0378010a04dc00600632008a04be000e047300a6
0473007204e6007904e1008304fa007d076e0092032900670143ffca01e4
ffcd0329ffe602d700140378ffaf032900020378ffa80329ff3c042b00a5
0699001001c70084045e0054070a002e06cb006004d6010c04fa005102d8
006a04e9ffd80330006d02d9006a02db006c01c7006902aa000d01c7005c
02aa002001c7006902aa000d01c7006f02aa0030053d00e60708003b0310
00e405d5009708c0008e0473008f02e000eb04730040047300640473007e
0473007404730085043300d7045300490473008003cc011e03cc000903cc
00090428010d040600b504bc00d3051600da083e00ba04a7002904c9005f
0626016d084600dc053900dc0499007609c900b104bc00d204e10101077d
00dd04bf00cd04d10055070600de046c00f306a400aa0768010406be00fa
04c90074070c00b1048d007404ea00f4048b00ac050b00b304c000d504b1
0171051e0074049e00ec06bd004a042500bc05ec0100053a007e04c90079
0473007604d400b4077c00de046d010a047300a5047300f5000000000000
009000000090000000900000009000000090000000900000009000000090
000000900000009000000090000000900000009000000090000000900000
009000000090000000900000009000000090000000900000009000000090
000000900000009000000090000000900000009000000090000000900000
009000000090000000900000009000000090000000900000009000000090
00000090000000900000009000000090000000900000011c0000011c0000
011c0000011c000001700000017000000170000001700000020000000200
000002000000020000000200000002000000020000000200000002000000
020000000200000002000000020000000200000002000000020000000200
000002000000020000000200000002000000020000000200000003d40000
03d400000428000004280000042800000428000004280000050800000508
000006700000067000000738000007380000073800000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340000083400000834
000008340000083400000834000008340000083400000834000008340000
083400000834000008340000083400000834000008340001000008940096
000900000000000200100010005d000007e80a1d0000000000000032025e
000100000000000000500000000100000000000100090050000100000000
00020007005900010000000000030027022e000100000000000400110255
00010000000000050008026600010000000000060011026e000100000000
00070032027f0001000000000012001102b10001000000000100000902c2
0001000000000101001002cb0001000000000102000e02db000100000000
0103001402e90001000000000104001202fd00010000000001050009030f
0003000104030002000e01640003000104040002000600c8000300010405
0002000e01960003000104060002000800e60003000104070002000c007c
0003000104080002000801b20003000104090002000e006000030001040b
0002001600ee00030001040c0002000e006e00030001040d0002001201ba
00030001040e0002000c01cc0003000104100002000e00a4000300010411
0002000a00880003000104120002000800b20003000104130002000c0098
0003000104140002001201040003000104150002000e0116000300010416
0002000e00d80003000104180002000a01f0000300010419000200120132
00030001041a00020024017200030001041b0002000e01fa00030001041d
0002000e014400030001041e0002000a015200030001041f00020008015c
0003000104210002000c01d800030001042200020012020800030001042a
0002000802260003000104390002000c021a00030001043e0002000c01e4
0003000108040002000600920003000108090002000e01a4000300010816
0002000e0124000300010c010002000a00ce000300010c0a0002000e00ba
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c7665746963614f
626c69717565004f0062006c0069007100750065004f0062006c00690071
00750065005300630068007200e4006730aa30d630ea30fc30af4f2a659c
4f5300530063006800750069006e004f0062006c006900710075006fae30
c6b8c784ccb4004f0062006c0069006300750061507d659c9ad406450646
062d062f0631004f0062006c00ed00710075006f0053006b007200e5004b
0061006c006c00690073007400650074007400750053006b007200e50073
00740069006c0074004f0062006c0069007100750065004f0062006c00ed
00710075006f041d0430043a043b043e043d043d044b0439004c00750074
0061006e006400650e400e090e350e220e070045011f0069006b004f0062
006c00690071007500610045006c0065006b00740072006f006e0073006b
00690020006b00750072007a00690076004f0062006c0069007100750065
004f0062006c0069007100750065039b03bf03be03ac05e005d805d505d9
002005e705dc05d505ea004b00750072007a00ed0076004d006900720069
006e0067004d006900720069006e0067004f0062006c00690063004f0062
006c0069007100750065041d043004450438043b0435043d043804390913
092c094d0932094009150058006900ea006e48656c766574696361204f62
6c697175653b2031332e30643165313b20323031372d30362d313448656c
766574696361204f626c6971756531332e306431653148656c7665746963
612d4f626c6971756548656c766574696361206973206120726567697374
657265642074726164656d61726b206f66204c696e6f7479706520414748
656c766574696361204f626c697175654c6967617475726573436f6d6d6f
6e204c69676174757265734e756d6265722053706163696e6750726f706f
7274696f6e616c204e756d626572734d6f6e6f737061636564204e756d62
6572734e6f204368616e67650000b800532b01ba000501b900552b01bf01
ba004200320027001d00100000005b2bbf01bb003e00320027001d001000
00005b2bbf01bc003a00320027001d00100000005b2bbf01bd0036003200
27001600100000005b2b00bf01b6004d003f0037002800180000005b2bbf
01b70060004f0037002800180000005b2bbf01b8004200320027001d0010
0000005b2bbf01b900290022001a001600100000005b2b00ba01be000400
5a2bb801b520457d691844b800492bb8003f2bb800352bb8002b2b411800
8001a6009001a600a001a600030069018b0079018b0089018b0099018b00
040089018b0099018b00a9018b00b9018bb2040840ba0179001a014a400b
041f5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b2
0d0009410a01a0019f0064001f01a50025017a00480028019ab3296c1f60
410a01a9007001a9008001a90003008001a9000101a9b21e321fbe012c00
250401001f0126001e0401b61fe7312d1fe531b80201b21fc227b80401b2
1fc11eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29
b80401b61fa91d6c1f931eb8019ab21f921db80101b21f911db80101b21f
751db80201b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156
400b1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db8
02abb21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01
aa019b002a019bb2254a1fba019b0025017ab349293896b8017bb3482831
25b8017a403648289629482725294c1f252946272729482756c80784075b
07410732072b072807260721071b071408120810080e080c080a08080807
b801acb23f1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01
ad003f001f01adb70804080208000814b8ffe0b40000010014b801abb410
00000100b801abb606100000010006b801adb300000100b801ad401f0400
0001000410000001001002000001000200000001000002010802004a00b0
018db806008516763f183f123e113946443e113946443e113946443e1139
46443e113946443e11394660443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358
b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b
65422b2b4b5279b376706a66456523456023456560234560b08b766818b0
80622020b16a704565234520b003266062636820b003266165b070236544
b06a234420b176664565234520b003266062636820b003266165b0662365
44b0762344b10066455458b166406544b27640764523614459b36242725d
456523456023456560234560b089766818b080622020b172424565234520
b003266062636820b003266165b042236544b072234420b1625d45652345
20b003266062636820b003266165b05d236544b0622344b1005d455458b1
5d406544b262406245236144592b2b2b2b456953427374b8019a2045694b
20b02853b049515a58b020615944b801a6204569447500>
[2101 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 144 43 <000100a10000066705bd000b0055b800532b00b801b54558b800002f1bb9
000001c43e59b801b54558b800042f1bb9000401c43e59b801b54558b800
062f1bb9000601be3e59b801b54558b8000a2f1bb9000a01be3e59bb0003
01b8000800572b303101330321133301231321032301d9c98102fc81c9fe
c8c992fd0492c905bdfda1025ffa4302affd5100>QJJAAA+Helvetica-Oblique AddT42Char 
1 284 47 <0001009c0000047005bd0005002fb800532b00b801b54558b800002f1bb9
000001c43e59b801b54558b800042f1bb9000401be3e59b9000201b8f430
3101330121072101d4c7feed02e825fc5105bdfaf2af0000>QJJAAA+Helvetica-Oblique AddT42Char 
1 512 74 <0002002cfe3b04c90442001f002d013eb800532b00b801b54558b8001e2f
1bb9001e01c23e59b801b54558b800092f1bb9000901c03e59b801b54558
b800182f1bb9001801be3e59ba00020009001e111239b8000910b9001101
b6f4411b0007001100170011002700110037001100470011005700110067
001100770011008700110097001100a7001100b7001100c70011000d5d41
0500d6001100e6001100025dba00150009001e111239b8001e10b9002001
b6f4410500d9002000e9002000025d411b00080020001800200028002000
38002000480020005800200068002000780020008800200098002000a800
2000b8002000c80020000d5db8001810b9002701b6f4411b000700270017
002700270027003700270047002700570027006700270077002700870027
0097002700a7002700b7002700c70027000d5d410500d6002700e6002700
025d3031011617373303060706212226373306171633323736370e012322
261312003332072207060706163332373637362603b42c261da6cf2b559f
fec9adcb15b7021f3083cf5f382c47a97daed13d390147ba7e7fbe6b3a20
276b7cc274411c2b7c0404234387fc32cc76da9ba548273c9256dd5250f7
011d010d012e9fb25f9ab5bdaf6384c7c000>QJJAAA+Helvetica-Oblique AddT42Char 
1 980 76 <000200840000027305bd000300070029b800532b00b801b54558b800042f
1bb9000401c43e59b801b54558b800022f1bb9000201be3e593031013303
23013307230166b7e2b70138b72cb7042afbd605bdcc0000>QJJAAA+Helvetica-Oblique AddT42Char 
1 1064 81 <00010084000004a1044700190085b800532b00b801b54558b800002f1bb9
000001c23e59b801b54558b800052f1bb9000501c23e59b801b54558b800
0a2f1bb9000a01be3e59b801b54558b800182f1bb9001801be3e59ba0002
000a0005111239b8000510b9001001b8f44105005900100069001000025d
410b000800100018001000280010003800100048001000055d3031013307
3e01333217160703231336272623220706070e010703230167ab2060bb68
e42e1a2292b78f15101b7e402c4f4638331677b4042f985e529f57a2fd51
02a3623c640d1642357169fdcf00>QJJAAA+Helvetica-Oblique AddT42Char 
1 1288 83 <0002001bfe5504d20449000e002200eeb800532b00b801b54558b800152f
1bb9001501c23e59b801b54558b800212f1bb9002101c03e59b801b54558
b8001c2f1bb9001c01be3e59b8001510b9000401b6f4410500d9000400e9
000400025d411b0008000400180004002800040038000400480004005800
040068000400780004008800040098000400a8000400b8000400c8000400
0d5db8001c10b9000c01b6f4411b0007000c0017000c0027000c0037000c
0047000c0057000c0067000c0077000c0087000c0097000c00a7000c00b7
000c00c7000c000d5d410500d6000c00e6000c00025db8000410b9001001
b7f4ba0020001c000c111239303101362726232207060706171633323601
3307363736333212030207062322272627032303e01b1220babb6d3a211a
1322ba7ed4fda5af1e4549687bb6c2374ad7889a79472a2b74b4021e805c
b1bb649a7c57a6d302de8e49283cfee9fefdfea2965f351e49fddd000000
>QJJAAA+Helvetica-Oblique AddT42Char 
1 1648 85 <0001008900000379044700110085b800532b00b801b54558b800002f1bb9
000001c23e59b801b54558b800052f1bb9000501c23e59b801b54558b800
082f1bb9000801c23e59b801b54558b800102f1bb9001001be3e59ba0002
00100005111239b8000510b9000c01b8f441050059000c0069000c00025d
410b0008000c0018000c0028000c0038000c0048000c00055d3031013307
3e0133321617072e01232206070323016cab2720c56b05181c28101a1088
b71982b4042fb9369b0203be0302af72fd980000>QJJAAA+Helvetica-Oblique AddT42Char 
1 1848 88 <000100abffe304c1042f001700a5b800532b00b801b54558b800002f1bb9
000001c23e59b801b54558b8000a2f1bb9000a01c23e59b801b54558b800
122f1bb9001201be3e59b801b54558b8000c2f1bb9000c01be3e59b80012
10b9000501b6f4411b000700050017000500270005003700050047000500
5700050067000500770005008700050097000500a7000500b7000500c700
05000d5d410500d6000500e6000500025dba000e00120000111239303101
0306171633323736371333032337060706232227263713021b97110f1b83
bc68382170b4e3aa23303d7993e5321c1d9b042ffd39523460a85a9d020e
fbd19e3d2a5499528902d800>QJJAAA+Helvetica-Oblique AddT42Char 

1 0 172 <> QJJAAA+Helvetica-Oblique AddT42Char 
1 0 0 <00020042000004d005bd000300070069b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b9000301bbf4b8000010b9000701bbf4
b8000310b80009dc00b801b54558b800012f1bb9000101c43e59b801b545
58b800002f1bb9000001be3e59b9000401b8f4b8000110b9000501b8f430
31331121112711211142048eb8fce205bdfa43b8044dfbb3>QJJAAA+Helvetica-Oblique AddT42Char 
QJJAAA+Helvetica-Oblique /CharStrings get begin
/H 43 def
/L 47 def
/g 74 def
/i 76 def
/n 81 def
/p 83 def
/r 85 def
/u 88 def
/nobreakspace 172 def
end
QJJAAA+Helvetica-Oblique /Encoding get
dup 72 /H put
dup 76 /L put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 117 /u put
dup 160 /nobreakspace put
pop
end
%ADOEndSubsetFont
/DYERMN+Helvetica-Oblique /QJJAAA+Helvetica-Oblique findfont ct_VMDictPut
/DYERMN+Helvetica-Oblique*1 
[72{/.notdef}rp /H 3{/.notdef}rp /L 26{/.notdef}rp /g /.notdef /i 
4{/.notdef}rp /n /.notdef /p /.notdef /r 2{/.notdef}rp /u 
42{/.notdef}rp /nobreakspace 95{/.notdef}rp]
DYERMN+Helvetica-Oblique nf
DYERMN+Helvetica-Oblique*1 [8.63492 0 0 -8.63492 0 0 ]msf
190.575 167.661 mo
(HLpruning\240)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g201 {410 0 19 -435 438 206 setcachedevice
438 -428 mo
342 -428 li
164 -127 li
169 -175 182 -255 182 -317 cv
182 -387 169 -435 118 -435 cv
68 -435 36 -360 19 -296 cv
35 -296 li
54 -351 81 -372 99 -372 cv
137 -372 147 -312 147 -243 cv
147 -167 135 -90 132 -62 cv
102 6 35 103 35 156 cv
35 189 50 206 73 206 cv
152 206 159 52 164 -39 cv
438 -428 li
cp
false sop
f
}bind def
/g202 {460 0 24 -668 460 11 setcachedevice
460 -604 mo
460 -649 389 -668 340 -668 cv
276 -668 171 -636 171 -540 cv
171 -486 227 -447 272 -401 cv
144 -389 24 -259 24 -131 cv
24 -40 78 11 172 11 cv
332 11 437 -136 437 -267 cv
437 -345 413 -376 372 -415 cv
309 -476 206 -512 206 -570 cv
206 -608 264 -628 300 -628 cv
389 -628 356 -556 421 -556 cv
451 -556 460 -583 460 -604 cv
cp
356 -266 mo
356 -187 278 -10 186 -10 cv
139 -10 108 -46 108 -101 cv
108 -239 202 -380 289 -380 cv
323 -380 356 -353 356 -266 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 /g201 /g202 219{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
190.575 153.27 mo
(#)sh
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
195.151 155.429 mo
( )sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
212.433 153.27 mo
(")sh
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
229.601 155.429 mo
(!)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
238.079 153.27 mo
(&)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
248.827 153.27 mo
($)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
253.628 153.27 mo
(")sh
258.395 153.27 mo
(")sh
%ADOBeginSubsetFont: DYERMC+ AddGlyphs
systemdict begin DYERMD+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g415 {560 0 2 -662 558 0 setcachedevice
558 -662 mo
487 -662 li
413 -463 li
147 -463 li
73 -662 li
2 -662 li
247 0 li
313 0 li
558 -662 li
cp
391 -403 mo
280 -103 li
169 -403 li
391 -403 li
cp
false sop
f
}bind def
/g475 {685 0 48 -662 637 156 setcachedevice
637 -120 mo
637 -186 li
340 -186 li
399 -320 li
637 -320 li
637 -386 li
427 -386 li
548 -662 li
494 -662 li
374 -386 li
48 -386 li
48 -320 li
345 -320 li
286 -186 li
48 -186 li
48 -120 li
257 -120 li
137 156 li
191 156 li
311 -120 li
637 -120 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMD+*1 
[32{/.notdef}rp /g41D /g427 /g438 /g479 /g415 /g475 218{/.notdef}rp]
DYERMD+ nf
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
264.602 153.27 mo
($)sh
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4A {278 0 49 -654 264 11 setcachedevice
264 -599 mo
264 -628 241 -654 214 -654 cv
187 -654 167 -632 167 -601 cv
167 -569 186 -548 215 -548 cv
241 -548 264 -571 264 -599 cv
cp
222 -114 mo
179 -57 155 -36 138 -36 cv
130 -36 124 -41 124 -51 cv
124 -65 129 -78 134 -95 cv
228 -438 li
224 -441 li
123 -422 103 -419 64 -416 cv
64 -400 li
118 -399 128 -396 128 -376 cv
128 -368 124 -350 119 -332 cv
71 -155 li
56 -99 49 -64 49 -44 cv
49 -7 65 11 98 11 cv
148 11 180 -19 235 -103 cv
222 -114 li
cp
false sop
f
}bind def
/g4B {278 0 -124 -652 279 207 setcachedevice
279 -598 mo
279 -626 255 -652 228 -652 cv
200 -652 175 -630 175 -600 cv
175 -569 199 -548 229 -548 cv
255 -548 279 -571 279 -598 cv
cp
246 -438 mo
242 -441 li
158 -426 105 -418 73 -416 cv
73 -400 li
99 -400 li
135 -400 147 -391 147 -369 cv
147 -359 143 -338 131 -289 cv
59 3 li
25 141 2 185 -38 185 cv
-50 185 -56 180 -56 173 cv
-56 158 -44 161 -44 139 cv
-44 118 -56 102 -83 102 cv
-106 102 -124 122 -124 146 cv
-124 182 -91 207 -45 207 cv
42 207 101 134 142 -28 cv
246 -438 li
cp
false sop
f
}bind def
/g2D {556 0 -8 -653 559 0 setcachedevice
559 -180 mo
539 -186 li
511 -128 489 -95 457 -74 cv
408 -41 377 -36 277 -36 cv
195 -36 172 -46 172 -77 cv
172 -91 176 -108 182 -131 cv
302 -560 li
318 -617 343 -633 403 -637 cv
403 -653 li
130 -653 li
130 -637 li
192 -633 207 -623 207 -594 cv
207 -579 204 -559 196 -532 cv
74 -94 li
56 -31 48 -22 -8 -16 cv
-8 0 li
501 0 li
559 -180 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 /g51 /g4A /g4B /g2D 
209{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
271.168 153.27 mo
(,)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
274.069 153.27 mo
(")sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
278.836 153.27 mo
(-)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
285.335 153.27 mo
( )sh
296.083 153.27 mo
(.)sh
301.3 153.27 mo
(")sh
306.067 153.27 mo
(#)sh
308.68 153.27 mo
(#)sh
311.292 153.27 mo
(#)sh
313.893 153.27 mo
(")sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
318.66 153.27 mo
(.)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
324.484 153.27 mo
(")sh
329.251 153.27 mo
(")sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
334.018 153.27 mo
(,)sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
340.517 153.27 mo
(%)sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
351.266 153.27 mo
(-)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g5A {444 0 -24 -441 426 206 setcachedevice
243 -186 mo
226 -275 173 -441 158 -441 cv
154 -441 li
100 -433 67 -427 47 -423 cv
37 -421 26 -419 15 -417 cv
15 -400 li
26 -403 35 -404 46 -404 cv
86 -404 104 -389 123 -340 cv
150 -272 205 -48 205 -8 cv
205 3 201 15 195 27 cv
187 40 142 99 124 118 cv
101 143 89 151 76 151 cv
50 151 50 123 15 123 cv
-7 123 -24 141 -24 163 cv
-24 189 -3 206 27 206 cv
84 206 191 91 295 -81 cv
378 -219 426 -329 426 -386 cv
426 -416 404 -441 374 -441 cv
351 -441 334 -426 334 -404 cv
334 -388 340 -378 360 -365 cv
379 -353 386 -347 386 -333 cv
386 -289 349 -217 264 -76 cv
243 -186 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 /g51 /g4A /g4B /g2D 
/g5A 208{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
200.031 153.27 mo
(/)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
204.663 148.952 mo
($)sh
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4A {278 0 49 -654 264 11 setcachedevice
264 -599 mo
264 -628 241 -654 214 -654 cv
187 -654 167 -632 167 -601 cv
167 -569 186 -548 215 -548 cv
241 -548 264 -571 264 -599 cv
cp
222 -114 mo
179 -57 155 -36 138 -36 cv
130 -36 124 -41 124 -51 cv
124 -65 129 -78 134 -95 cv
228 -438 li
224 -441 li
123 -422 103 -419 64 -416 cv
64 -400 li
118 -399 128 -396 128 -376 cv
128 -368 124 -350 119 -332 cv
71 -155 li
56 -99 49 -64 49 -44 cv
49 -7 65 11 98 11 cv
148 11 180 -19 235 -103 cv
222 -114 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A 215{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
207.114 148.952 mo
(\()sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
209.161 148.952 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
217.2 153.27 mo
(/)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
221.832 148.952 mo
($)sh
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4B {278 0 -124 -652 279 207 setcachedevice
279 -598 mo
279 -626 255 -652 228 -652 cv
200 -652 175 -630 175 -600 cv
175 -569 199 -548 229 -548 cv
255 -548 279 -571 279 -598 cv
cp
246 -438 mo
242 -441 li
158 -426 105 -418 73 -416 cv
73 -400 li
99 -400 li
135 -400 147 -391 147 -369 cv
147 -359 143 -338 131 -289 cv
59 3 li
25 141 2 185 -38 185 cv
-50 185 -56 180 -56 173 cv
-56 158 -44 161 -44 139 cv
-44 118 -56 102 -83 102 cv
-106 102 -124 122 -124 146 cv
-124 182 -91 207 -45 207 cv
42 207 101 134 142 -28 cv
246 -438 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B 214{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
224.283 148.952 mo
(\))sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
226.329 148.952 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMG+*1 [10.4483 0 0 -10.4483 0 0 ]msf
236.415 167.661 mo
( )sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
253.28 167.661 mo
(\()sh
261.408 167.661 mo
(,-)
[2.9046 0 ]xsh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g51 {504 0 -75 -441 472 205 setcachedevice
215 -428 mo
216 -432 217 -437 217 -437 cv
217 -439 215 -441 212 -441 cv
56 -419 li
58 -404 li
80 -404 li
96 -404 124 -401 124 -377 cv
124 -372 119 -346 108 -306 cv
-7 126 li
-19 173 -32 188 -75 189 cv
-75 205 li
128 205 li
128 189 li
81 189 66 182 66 160 cv
66 146 89 64 106 -6 cv
131 7 152 11 175 11 cv
321 11 472 -151 472 -316 cv
472 -394 431 -441 357 -441 cv
297 -441 240 -409 186 -328 cv
215 -428 li
cp
382 -313 mo
382 -243 361 -170 313 -103 cv
269 -41 221 -8 168 -8 cv
140 -8 120 -24 120 -46 cv
120 -80 156 -209 185 -284 cv
208 -344 267 -398 320 -398 cv
365 -398 382 -370 382 -313 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B /g51 213{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
254.022 174.857 mo
(*)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
257.732 174.857 mo
(!)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
262.78 174.857 mo
(\()sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
264.827 174.857 mo
(")sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
266.671 174.857 mo
(\))sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
273.124 167.661 mo
(!)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
279.027 163.344 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
281.478 163.344 mo
(*)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
285.188 163.344 mo
(%)sh
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 1884 42 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>DYERLT+Helvetica AddT42Char 
1 2412 49 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/G 42 def
/N 49 def
end
DYERLT+Helvetica /Encoding get
dup 71 /G put
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp 
/one 2{/.notdef}rp /four 6{/.notdef}rp /semicolon 5{/.notdef}rp /A 2{/.notdef}rp 
/D /.notdef /F /G /H 3{/.notdef}rp /L /.notdef 
/N /.notdef /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
219.797 308.698 mo
(Hidden Node Growing Strategy)sh
339.303 308.698 mo
( )sh
357.472 339.64 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
223.114 320.212 mo
(/)sh
%ADOBeginSubsetFont: DYERMC+ AddGlyphs
systemdict begin DYERMD+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g47A {685 0 64 -609 629 103 setcachedevice
629 -324 mo
629 -334 li
64 -609 li
64 -544 li
496 -329 li
64 -114 li
64 -51 li
629 -324 li
cp
629 103 mo
629 37 li
64 37 li
64 103 li
629 103 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMD+*1 
[32{/.notdef}rp /g41D /g427 /g438 /g479 /g415 /g475 /g47A 
217{/.notdef}rp]
DYERMD+ nf
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
255.045 320.212 mo
(&)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
287.268 320.212 mo
(/)sh
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g20E {504 0 19 -428 536 18 setcachedevice
536 -428 mo
265 -428 li
164 -428 112 -390 58 -299 cv
74 -299 li
118 -353 145 -354 197 -354 cv
203 -354 li
121 -145 li
111 -119 91 -86 49 -75 cv
24 -68 19 -41 19 -26 cv
19 -2 43 18 69 18 cv
80 18 94 14 105 6 cv
186 -58 212 -232 257 -354 cv
361 -354 li
285 -144 li
278 -125 268 -87 268 -64 cv
268 -25 284 11 327 11 cv
402 11 449 -69 464 -131 cv
448 -131 li
424 -77 397 -70 377 -70 cv
356 -70 346 -89 346 -112 cv
346 -132 399 -304 413 -354 cv
515 -354 li
536 -428 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 /g201 /g202 /g20E 218{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
297.298 320.212 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g20A {526 0 -33 -428 483 205 setcachedevice
469 -117 mo
417 -49 402 -36 386 -36 cv
379 -36 375 -43 375 -51 cv
375 -61 390 -112 394 -128 cv
473 -428 li
396 -428 li
363 -306 li
346 -242 237 -55 178 -55 cv
150 -55 138 -76 138 -103 cv
138 -112 140 -121 142 -130 cv
217 -428 li
142 -428 li
11 93 li
-5 156 -19 185 -33 205 cv
38 205 li
60 179 66 131 105 -19 cv
110 -1 122 9 141 9 cv
201 9 256 -58 344 -214 cv
345 -214 li
312 -110 li
304 -86 297 -51 297 -34 cv
297 -6 318 11 346 11 cv
391 11 421 -12 483 -108 cv
469 -117 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 /g201 /g202 /g20E /g20A 
217{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
201.639 320.212 mo
(&)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g55 {278 0 38 -546 296 11 setcachedevice
296 -428 mo
216 -428 li
244 -531 li
245 -533 245 -538 245 -538 cv
245 -543 242 -546 236 -546 cv
232 -546 226 -543 222 -537 cv
186 -483 121 -434 89 -427 cv
65 -422 56 -413 56 -402 cv
56 -402 56 -399 57 -396 cv
132 -396 li
54 -100 li
46 -68 38 -37 38 -26 cv
38 -1 57 11 84 11 cv
136 11 167 -18 227 -110 cv
214 -117 li
165 -54 149 -38 133 -38 cv
124 -38 118 -41 118 -54 cv
118 -57 119 -64 120 -68 cv
207 -396 li
291 -396 li
296 -428 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B /g51 /g55 212{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
207.126 316.614 mo
(+)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g43 {500 0 23 -683 473 11 setcachedevice
163 -290 mo
247 -596 li
268 -678 li
263 -683 li
213 -674 177 -668 110 -660 cv
110 -643 li
169 -641 174 -640 174 -618 cv
174 -609 171 -595 165 -571 cv
23 -48 li
23 -42 li
23 -12 96 11 153 11 cv
308 11 473 -163 473 -321 cv
473 -398 424 -441 357 -441 cv
287 -441 232 -403 164 -290 cv
163 -290 li
cp
388 -306 mo
388 -232 338 -133 278 -71 cv
241 -33 198 -12 155 -12 cv
124 -12 109 -23 109 -46 cv
109 -106 137 -203 181 -277 cv
224 -350 270 -392 318 -392 cv
362 -392 388 -367 388 -306 cv
cp
false sop
f
}bind def
/g42 {501 0 17 -441 476 11 setcachedevice
463 -111 mo
436 -82 li
406 -49 393 -41 384 -41 cv
376 -41 370 -47 370 -54 cv
370 -74 412 -246 459 -417 cv
462 -427 463 -429 465 -438 cv
458 -441 li
397 -434 li
394 -431 li
383 -383 li
375 -420 346 -441 303 -441 cv
170 -441 17 -260 17 -105 cv
17 -29 61 11 117 11 cv
187 11 245 -33 320 -146 cv
299 -64 297 -56 297 -31 cv
297 -2 309 10 337 10 cv
377 10 401 -9 476 -100 cv
463 -111 li
cp
365 -361 mo
365 -290 335 -204 288 -136 cv
258 -93 211 -38 161 -38 cv
125 -38 101 -57 101 -112 cv
101 -175 136 -264 178 -327 cv
220 -388 264 -419 309 -419 cv
344 -419 365 -396 365 -361 cv
cp
false sop
f
}bind def
/g54 {389 0 16 -442 366 13 setcachedevice
366 -442 mo
352 -442 li
344 -428 337 -424 322 -424 cv
314 -424 305 -425 286 -431 cv
261 -438 247 -441 230 -441 cv
156 -441 109 -399 109 -333 cv
109 -301 129 -256 172 -202 cv
211 -153 228 -119 228 -87 cv
228 -38 199 -10 152 -10 cv
100 -10 66 -51 52 -146 cv
36 -146 li
16 13 li
32 13 li
39 -3 50 -8 61 -8 cv
72 -8 86 -7 105 1 cv
128 10 143 11 160 11 cv
243 11 304 -40 304 -123 cv
304 -162 286 -201 236 -259 cv
197 -305 182 -334 182 -361 cv
182 -398 206 -418 241 -418 cv
290 -418 320 -385 330 -302 cv
346 -302 li
366 -442 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B /g51 /g55 /g43 /g42 /g54 
209{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
207.126 323.81 mo
(,)sh
210.813 323.81 mo
(\()sh
212.86 323.81 mo
(-)sh
216.548 323.81 mo
(.)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g211 {498 0 27 -428 531 11 setcachedevice
531 -428 mo
337 -428 li
148 -428 27 -265 27 -130 cv
27 -43 79 11 173 11 cv
313 11 439 -107 439 -217 cv
439 -292 383 -291 343 -354 cv
513 -354 li
531 -428 li
cp
355 -221 mo
355 -141 285 -10 189 -10 cv
142 -10 111 -40 111 -100 cv
111 -241 228 -354 297 -354 cv
329 -335 355 -285 355 -221 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 /g201 /g202 /g20E /g20A 
/g211 216{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
233.143 320.212 mo
(')sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
239.315 316.614 mo
(+)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
238.337 323.81 mo
(,)sh
242.025 323.81 mo
(\()sh
244.071 323.81 mo
(-)sh
247.759 323.81 mo
(.)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
265.794 320.212 mo
(&)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLY+ AddGlyphs
systemdict begin DYERLZ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4E {778 0 16 -460 775 0 setcachedevice
775 0 mo
775 -15 li
749 -17 li
719 -19 706 -32 706 -77 cv
706 -280 li
706 -398 671 -460 590 -460 cv
532 -460 481 -434 427 -376 cv
409 -433 375 -460 321 -460 cv
276 -460 234 -451 168 -383 cv
166 -383 li
166 -457 li
158 -460 li
107 -441 74 -430 19 -415 cv
19 -398 li
32 -401 40 -402 51 -402 cv
77 -402 86 -385 86 -336 cv
86 -88 li
86 -30 72 -16 16 -15 cv
16 0 li
238 0 li
238 -15 li
185 -17 170 -27 170 -70 cv
170 -348 li
170 -350 176 -357 183 -365 cv
203 -389 252 -408 289 -408 cv
332 -408 354 -366 354 -297 cv
354 -86 li
354 -25 343 -19 286 -15 cv
286 0 li
510 0 li
510 -15 li
453 -16 438 -30 438 -95 cv
438 -347 li
468 -390 498 -408 545 -408 cv
602 -408 622 -375 622 -296 cv
622 -90 li
622 -32 613 -21 557 -15 cv
557 0 li
775 0 li
cp
false sop
f
}bind def
/g4A {278 0 16 -683 253 0 setcachedevice
180 -632 mo
180 -660 158 -683 129 -683 cv
101 -683 78 -660 78 -632 cv
78 -603 100 -581 128 -581 cv
158 -581 180 -603 180 -632 cv
cp
253 0 mo
253 -15 li
187 -20 179 -31 179 -105 cv
179 -456 li
175 -460 li
20 -405 li
20 -389 li
38 -394 53 -394 62 -394 cv
87 -394 95 -378 95 -331 cv
95 -104 li
95 -28 85 -19 16 -15 cv
16 0 li
253 0 li
cp
false sop
f
}bind def
/g4F {500 0 16 -460 485 0 setcachedevice
485 0 mo
485 -15 li
436 -20 424 -31 424 -85 cv
424 -306 li
424 -405 382 -460 306 -460 cv
260 -460 214 -438 162 -379 cv
161 -379 li
161 -457 li
153 -460 li
104 -442 71 -431 16 -415 cv
16 -398 li
23 -401 34 -402 45 -402 cv
73 -402 80 -386 80 -337 cv
80 -94 li
80 -35 69 -19 18 -15 cv
18 0 li
229 0 li
229 -15 li
178 -19 164 -33 164 -72 cv
164 -348 li
210 -393 234 -405 267 -405 cv
316 -405 340 -375 340 -304 cv
340 -105 li
340 -39 328 -19 278 -15 cv
277 0 li
485 0 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLZ+*1 
[32{/.notdef}rp /g12 /g1E /gD /gF /g9 /gA /g4E 
/g4A /g4F 215{/.notdef}rp]
DYERLZ+ nf
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
271.28 316.614 mo
(&)sh
277.024 316.614 mo
(')sh
279.077 316.614 mo
(\()sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
271.28 323.81 mo
(,)sh
274.968 323.81 mo
(\()sh
277.015 323.81 mo
(-)sh
280.702 323.81 mo
(.)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
302.886 320.212 mo
(')sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
309.058 316.614 mo
(&)sh
314.802 316.614 mo
(')sh
316.854 316.614 mo
(\()sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
308.08 323.81 mo
(,)sh
311.768 323.81 mo
(\()sh
313.814 323.81 mo
(-)sh
317.502 323.81 mo
(.)sh
gsave
0 323.09 mo
408 323.09 li
408 349.714 li
0 349.714 li
cp
eclp
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
201.639 339.64 mo
(%)sh
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g14 {500 0 41 -676 431 14 setcachedevice
61 -510 mo
102 -584 148 -616 210 -616 cv
276 -616 318 -582 318 -514 cv
318 -453 286 -408 237 -380 cv
217 -368 191 -357 153 -344 cv
153 -330 li
210 -330 233 -327 255 -320 cv
324 -300 359 -251 359 -175 cv
359 -90 303 -22 229 -22 cv
201 -22 180 -27 143 -53 cv
115 -73 99 -79 82 -79 cv
59 -79 41 -64 41 -43 cv
41 -7 80 14 153 14 cv
242 14 337 -15 385 -79 cv
414 -117 431 -166 431 -219 cv
431 -271 415 -317 387 -348 cv
366 -370 348 -382 304 -401 cv
371 -441 397 -491 397 -539 cv
397 -621 334 -676 241 -676 cv
137 -676 74 -609 45 -514 cv
61 -510 li
cp
false sop
f
}bind def
/g46 {444 0 25 -460 424 10 setcachedevice
408 -164 mo
359 -90 321 -59 254 -59 cv
208 -59 171 -77 143 -114 cv
107 -162 102 -201 97 -277 cv
405 -277 li
401 -331 391 -363 371 -391 cv
339 -436 294 -460 232 -460 cv
106 -460 25 -358 25 -217 cv
25 -79 97 10 215 10 cv
315 10 385 -48 424 -157 cv
408 -164 li
cp
99 -309 mo
110 -384 149 -424 205 -424 cv
271 -424 292 -390 303 -309 cv
99 -309 li
cp
false sop
f
}bind def
/g51 {500 0 5 -460 470 217 setcachedevice
159 -458 mo
153 -460 li
100 -439 64 -426 9 -409 cv
9 -393 li
18 -394 25 -394 34 -394 cv
68 -394 75 -384 75 -337 cv
75 131 li
75 183 64 194 5 200 cv
5 217 li
247 217 li
247 199 li
172 198 159 187 159 124 cv
159 -33 li
195 0 218 10 260 10 cv
379 10 470 -102 470 -247 cv
470 -371 400 -460 303 -460 cv
247 -460 203 -436 159 -381 cv
159 -458 li
cp
159 -334 mo
159 -364 215 -400 261 -400 cv
335 -400 384 -324 384 -207 cv
384 -97 335 -22 263 -22 cv
216 -22 159 -58 159 -88 cv
159 -334 li
cp
false sop
f
}bind def
/g11 {500 0 24 -676 476 14 setcachedevice
476 -330 mo
476 -535 385 -676 254 -676 cv
93 -676 24 -513 24 -336 cv
24 -172 79 14 250 14 cv
413 14 476 -158 476 -330 cv
cp
380 -325 mo
380 -127 335 -12 250 -12 cv
164 -12 120 -126 120 -329 cv
120 -532 165 -650 248 -650 cv
336 -650 380 -533 380 -325 cv
cp
false sop
f
}bind def
/g18 {500 0 20 -662 449 8 setcachedevice
449 -646 mo
449 -662 li
80 -662 li
20 -515 li
38 -506 li
80 -574 97 -588 155 -588 cv
370 -588 li
172 8 li
237 8 li
449 -646 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
/g1D /g4E /g42 /g59 /g71 /g4A /g4F /g12 
/gC /g14 /g46 /g51 /g11 /g18 203{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
210.825 339.64 mo
( )sh
221.573 339.64 mo
(.)sh
226.798 339.64 mo
(#)sh
229.41 339.64 mo
(0)sh
236.066 339.64 mo
(1)sh
240.486 339.64 mo
(*)sh
245.71 339.64 mo
(2)sh
%ADOBeginSubsetFont: DYERMO+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMO+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.279 0.503 1.566 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2 put
dup 33 /g3 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2 {589 0 139 -1566 503 279 setcachedevice
503 243 mo
369 78 234 -187 234 -643 cv
234 -1101 369 -1395 503 -1533 cv
503 -1566 li
290 -1395 139 -1043 139 -643 cv
139 -234 290 79 503 279 cv
503 243 li
cp
false sop
f
}bind def
/g3 {608 0 114 -1566 478 279 setcachedevice
114 -1530 mo
248 -1365 383 -1103 383 -643 cv
383 -189 248 108 114 246 cv
114 279 li
327 108 478 -243 478 -643 cv
478 -1052 327 -1366 114 -1566 cv
114 -1530 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMP+ /DYERMO+ findfont ct_VMDictPut
/DYERMP+*1 
[32{/.notdef}rp /g2 /g3 222{/.notdef}rp]
DYERMP+ nf
DYERMP+*1 [11.5924 0 0 -11.5924 0 0 ]msf
250.93 344.677 mo
( )sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
260.633 339.64 mo
(!)sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
270.662 339.64 mo
( )sh
277.037 339.64 mo
(,)sh
279.938 339.64 mo
(\()sh
285.166 339.64 mo
(')sh
DYERMP+*1 [11.5924 0 0 -11.5924 0 0 ]msf
324.214 344.677 mo
(!)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
334.131 339.64 mo
(/)sh
344.16 339.64 mo
(3)sh
349.384 339.64 mo
(#)sh
351.996 339.64 mo
(4)sh
grestore
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMH+ AddGlyphs
systemdict begin DYERMI+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g2 {589 0 139 -1566 503 279 setcachedevice
503 243 mo
369 78 234 -187 234 -643 cv
234 -1101 369 -1395 503 -1533 cv
503 -1566 li
290 -1395 139 -1043 139 -643 cv
139 -234 290 79 503 279 cv
503 243 li
cp
false sop
f
}bind def
/g3 {608 0 114 -1566 478 279 setcachedevice
114 -1530 mo
248 -1365 383 -1103 383 -643 cv
383 -189 248 108 114 246 cv
114 279 li
327 108 478 -243 478 -643 cv
478 -1052 327 -1366 114 -1566 cv
114 -1530 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMI+*1 
[32{/.notdef}rp /gC /g2 /g3 221{/.notdef}rp]
DYERMI+ nf
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
289.225 343.238 mo
(!)sh
313.376 343.238 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
295.971 339.64 mo
(/)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERML+ AddGlyphs
systemdict begin DYERMM+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/gC {560 0 0 -767 560 -554 setcachedevice
560 -554 mo
304 -767 li
256 -767 li
0 -554 li
64 -554 li
280 -700 li
496 -554 li
560 -554 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMM+*1 
[32{/.notdef}rp /g2 /g3 /gC 221{/.notdef}rp]
DYERMM+ nf
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
295.375 338.921 mo
(")sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
301.222 333.884 mo
($)sh
310.115 333.884 mo
(%)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
303.673 333.884 mo
(&)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMQ+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMQ+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.018 0.648 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g58 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g58 {667 0 15 -441 648 18 setcachedevice
403 -426 mo
403 -437 401 -440 395 -440 cv
390 -440 387 -438 382 -430 cv
190 -126 li
186 -214 172 -339 158 -407 cv
151 -439 150 -441 139 -441 cv
132 -441 123 -437 110 -434 cv
80 -426 46 -422 15 -417 cv
15 -404 li
43 -404 li
72 -404 81 -399 90 -362 cv
102 -314 113 -207 117 -120 cv
121 -29 li
123 10 125 18 134 18 cv
145 18 162 -7 198 -76 cv
217 -112 235 -145 253 -175 cv
342 -327 li
371 -17 li
373 9 375 18 382 18 cv
391 18 400 8 427 -25 cv
436 -36 li
574 -204 648 -321 648 -385 cv
648 -417 626 -441 596 -441 cv
574 -441 557 -426 557 -410 cv
557 -396 562 -384 578 -369 cv
594 -354 600 -346 600 -334 cv
600 -291 566 -238 435 -74 cv
403 -426 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMR+ /DYERMQ+ findfont ct_VMDictPut
/DYERMR+*1 
[32{/.notdef}rp /g58 223{/.notdef}rp]
DYERMR+ nf
DYERMR+*1 [5.75661 0 0 -5.75661 0 0 ]msf
305.73 334.603 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLY+ AddGlyphs
systemdict begin DYERLZ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g13 {500 0 29 -676 474 0 setcachedevice
474 -137 mo
460 -143 li
427 -87 406 -76 364 -76 cv
130 -76 li
295 -252 li
384 -346 423 -421 423 -500 cv
423 -599 351 -676 238 -676 cv
115 -676 51 -594 30 -477 cv
51 -472 li
91 -570 126 -602 198 -602 cv
283 -602 337 -552 337 -461 cv
337 -376 301 -300 207 -201 cv
29 -12 li
29 0 li
420 0 li
474 -137 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLZ+*1 
[32{/.notdef}rp /g12 /g1E /gD /gF /g9 /gA /g4E 
/g4A /g4F /g13 214{/.notdef}rp]
DYERLZ+ nf
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
319.728 330.286 mo
(\))sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
39.6554 193.566 mo
(Hidden Node Pruning Strategy)sh
171.968 220.91 mo
( )sh
%ADOBeginSubsetFont: QJJAAA+Helvetica-Oblique AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERMN+Helvetica-Oblique gcheck setglobal} if
1 368 51 <000200af0000060105bd000a0014003db800532b00b801b54558b800002f
1bb9000001c43e59b801b54558b800092f1bb9000901be3e59bb001001b8
000700572bb8000010b9000d01b8f4303101213216070604232103230126
232103213236373601e70295c4c12b24fef3defe3283c704153c73fe746c
018c86bf1f2205bdddc8acfffd9304f31ffe037290a20000>DYERMN+Helvetica-Oblique AddT42Char 
DYERMN+Helvetica-Oblique /CharStrings get begin
/P 51 def
end
DYERMN+Helvetica-Oblique /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERMN+Helvetica-Oblique*1 
[72{/.notdef}rp /H 3{/.notdef}rp /L 3{/.notdef}rp /P 22{/.notdef}rp /g 
/.notdef /i 4{/.notdef}rp /n /.notdef /p /.notdef /r 
2{/.notdef}rp /u 42{/.notdef}rp /nobreakspace 95{/.notdef}rp]
DYERMN+Helvetica-Oblique nf
DYERMN+Helvetica-Oblique*1 [8.63492 0 0 -8.63492 0 0 ]msf
24.4656 238.899 mo
(Pruning)sh
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
54.2268 238.899 mo
( )sh
147.041 238.899 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLW+ AddGlyphs
systemdict begin DYERLX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g13 {500 0 29 -676 474 0 setcachedevice
474 -137 mo
460 -143 li
427 -87 406 -76 364 -76 cv
130 -76 li
295 -252 li
384 -346 423 -421 423 -500 cv
423 -599 351 -676 238 -676 cv
115 -676 51 -594 30 -477 cv
51 -472 li
91 -570 126 -602 198 -602 cv
283 -602 337 -552 337 -461 cv
337 -376 301 -300 207 -201 cv
29 -12 li
29 0 li
420 0 li
474 -137 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLX+*1 
[32{/.notdef}rp /g1E /g3C /gD /gF /g3E /g60 /g1F 
/g1D /g4E /g42 /g59 /g71 /g4A /g4F /g12 
/gC /g14 /g46 /g51 /g11 /g18 /g13 202{/.notdef}rp]
DYERLX+ nf
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
43.6468 205.079 mo
(/)sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
73.2844 205.079 mo
(&)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
104.676 205.079 mo
(/)sh
114.705 205.079 mo
(5)sh
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g215 {457 0 -108 -441 498 207 setcachedevice
498 -428 mo
405 -428 li
209 -174 li
211 -272 213 -287 213 -297 cv
213 -409 191 -441 155 -441 cv
97 -441 74 -370 57 -305 cv
73 -305 li
93 -362 120 -378 134 -378 cv
171 -378 179 -329 179 -235 cv
179 -146 li
-108 199 li
-15 199 li
182 -45 li
177 -14 174 43 174 79 cv
174 145 191 207 237 207 cv
295 207 317 135 330 70 cv
314 70 li
295 125 270 144 257 144 cv
228 144 212 120 212 -6 cv
212 -26 212 -49 213 -75 cv
498 -428 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 /g201 /g202 /g20E /g20A 
/g211 /g215 215{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
119.922 205.079 mo
(\()sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
24.4656 205.079 mo
(&)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
29.9524 201.481 mo
(+)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g57 {444 0 20 -441 426 18 setcachedevice
207 -70 mo
201 -205 195 -260 182 -327 cv
161 -435 161 -441 152 -441 cv
147 -441 140 -440 132 -437 cv
100 -430 65 -423 20 -416 cv
20 -403 li
31 -404 41 -404 51 -404 cv
88 -404 99 -387 112 -311 cv
125 -235 136 -102 136 -33 cv
136 -9 li
136 8 139 18 145 18 cv
162 18 189 -15 244 -74 cv
262 -93 318 -157 363 -227 cv
398 -281 426 -339 426 -382 cv
426 -409 403 -441 370 -441 cv
349 -441 332 -428 332 -407 cv
332 -391 339 -378 357 -362 cv
370 -350 375 -343 375 -333 cv
375 -286 310 -176 238 -102 cv
207 -70 li
cp
false sop
f
}bind def
/g53 {389 0 45 -441 412 0 setcachedevice
176 -223 mo
231 -439 li
228 -441 li
73 -414 li
73 -397 li
88 -399 96 -400 104 -400 cv
124 -400 142 -395 142 -374 cv
142 -353 140 -344 126 -292 cv
45 0 li
121 0 li
171 -168 189 -208 232 -282 cv
268 -343 296 -376 314 -376 cv
321 -376 324 -372 330 -362 cv
339 -347 347 -336 365 -336 cv
395 -336 412 -360 412 -390 cv
412 -420 393 -441 365 -441 cv
342 -441 312 -423 286 -396 cv
245 -353 211 -300 192 -258 cv
176 -223 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B /g51 /g55 /g43 /g42 /g54 
/g57 /g53 207{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
29.9524 206.519 mo
(/)sh
33.2242 206.519 mo
(-)sh
36.912 206.519 mo
(0)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
53.6759 205.079 mo
(')sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
59.8485 201.481 mo
(+)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
58.8704 206.519 mo
(/)sh
62.1422 206.519 mo
(-)sh
65.83 206.519 mo
(0)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
84.0331 205.079 mo
(&)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
89.5198 201.481 mo
(&)sh
95.2637 201.481 mo
(')sh
97.3161 201.481 mo
(\()sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
89.5198 206.519 mo
(/)sh
92.7917 206.519 mo
(-)sh
96.4795 206.519 mo
(0)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
125.116 205.079 mo
(')sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
131.289 201.481 mo
(&)sh
137.033 201.481 mo
(')sh
139.085 201.481 mo
(\()sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
130.311 206.519 mo
(/)sh
133.583 206.519 mo
(-)sh
137.27 206.519 mo
(0)sh
gsave
408 206.519 mo
9.09495e-13 206.519 li
0 230.265 li
408 230.265 li
408 206.519 li
cp
eclp
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
24.4656 220.91 mo
(\()sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
33.2579 220.91 mo
( )sh
44.0066 220.91 mo
(.)sh
49.2307 220.91 mo
(#)sh
51.8428 220.91 mo
(0)sh
58.4993 220.91 mo
(1)sh
62.9189 220.91 mo
(*)sh
68.1431 220.91 mo
(2)sh
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
73.3631 225.227 mo
(!)sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
82.3915 220.91 mo
(!)sh
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g37 {611 0 76 -653 688 18 setcachedevice
688 -653 mo
503 -653 li
503 -637 li
548 -632 565 -622 565 -603 cv
565 -584 547 -541 516 -488 cv
306 -128 li
241 -571 li
240 -576 240 -581 240 -586 cv
240 -620 253 -630 316 -637 cv
316 -653 li
76 -653 li
76 -637 li
132 -630 135 -625 158 -485 cv
240 18 li
259 18 li
632 -597 li
649 -624 665 -636 688 -637 cv
688 -653 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 /g51 /g4A /g4B /g2D 
/g5A /g37 207{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
92.4206 220.91 mo
(0)sh
99.5939 220.91 mo
(\()sh
104.822 220.91 mo
(\))sh
DYERMI+*1 [10.4483 0 0 -10.4483 0 0 ]msf
109.117 225.227 mo
(!)sh
133.268 225.227 mo
(")sh
139.62 225.227 mo
(")sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
148.851 220.91 mo
(/)sh
158.88 220.91 mo
(3)sh
164.104 220.91 mo
(#)sh
166.716 220.91 mo
(4)sh
grestore
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
115.863 220.91 mo
(/)sh
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
115.267 220.19 mo
(")sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
121.114 215.153 mo
($)sh
130.007 215.153 mo
(%)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
123.565 215.153 mo
(&)sh
DYERMR+*1 [5.75661 0 0 -5.75661 0 0 ]msf
125.622 216.593 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
DYERMG+*1 [10.4483 0 0 -10.4483 0 0 ]msf
60.2196 238.899 mo
( )sh
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g26 {611 0 -1 -653 634 0 setcachedevice
634 -653 mo
137 -653 li
137 -637 li
199 -631 214 -623 214 -596 cv
214 -584 209 -552 203 -532 cv
80 -90 li
64 -32 55 -26 -1 -16 cv
-1 0 li
506 0 li
568 -162 li
552 -170 li
514 -117 490 -89 458 -72 cv
407 -45 353 -33 255 -33 cv
199 -33 176 -43 176 -67 cv
176 -79 187 -125 212 -213 cv
244 -325 li
322 -325 li
362 -325 389 -320 400 -310 cv
405 -305 407 -296 407 -279 cv
407 -261 405 -249 400 -227 cv
420 -222 li
488 -454 li
470 -458 li
432 -373 421 -361 331 -361 cv
253 -361 li
319 -594 li
325 -616 335 -620 392 -620 cv
549 -620 584 -607 584 -547 cv
584 -534 583 -518 581 -501 cv
603 -499 li
634 -653 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 /g51 /g4A /g4B /g2D 
/g5A /g37 /g26 206{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
111.658 238.899 mo
(1)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
84.4491 238.899 mo
(\()sh
92.5778 238.899 mo
(,-)
[2.90462 0 ]xsh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
77.0847 246.095 mo
(\()sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
79.131 246.095 mo
(!)sh
84.1792 246.095 mo
( )sh
87.8671 246.095 mo
(")sh
89.711 246.095 mo
(#)sh
91.5567 246.095 mo
(#)sh
93.4024 246.095 mo
(#)sh
95.2427 246.095 mo
(")sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g33 {611 0 -13 -653 588 0 setcachedevice
132 -653 mo
132 -637 li
174 -631 178 -630 189 -623 cv
196 -618 203 -606 203 -595 cv
203 -578 198 -559 191 -532 cv
72 -101 li
56 -42 42 -23 -13 -16 cv
-13 0 li
230 0 li
230 -16 li
173 -22 163 -33 163 -63 cv
163 -73 165 -87 176 -126 cv
231 -329 li
297 -324 li
420 0 li
567 0 li
567 -16 li
522 -16 502 -39 480 -98 cv
391 -333 li
458 -348 491 -360 522 -384 cv
563 -415 588 -464 588 -512 cv
588 -597 516 -653 384 -653 cv
132 -653 li
cp
306 -593 mo
311 -612 332 -623 363 -623 cv
441 -623 483 -580 483 -511 cv
483 -418 413 -361 294 -361 cv
276 -361 268 -362 243 -366 cv
306 -593 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B /g51 /g55 /g43 /g42 /g54 
/g57 /g53 /g33 206{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
97.0866 246.095 mo
(1)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMQ+ AddGlyphs
systemdict begin DYERMR+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4D {278 0 41 -683 279 11 setcachedevice
279 -678 mo
273 -683 li
214 -670 177 -663 118 -656 cv
118 -640 li
136 -640 li
168 -640 185 -630 185 -618 cv
185 -615 185 -609 182 -599 cv
45 -75 li
42 -65 41 -53 41 -45 cv
41 -8 58 11 90 11 cv
144 11 181 -19 241 -114 cv
227 -124 li
202 -89 li
173 -48 150 -32 135 -32 cv
125 -32 118 -38 118 -50 cv
118 -58 121 -75 126 -93 cv
279 -678 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMR+*1 
[32{/.notdef}rp /g58 /g4D 222{/.notdef}rp]
DYERMR+ nf
DYERMR+*1 [5.75661 0 0 -5.75661 0 0 ]msf
101.595 247.534 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERMR+*1 [5.75661 0 0 -5.75661 0 0 ]msf
103.192 248.254 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERML+ AddGlyphs
systemdict begin DYERMM+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g5 {383 0 180 -1066 363 164 setcachedevice
363 164 mo
363 131 li
250 131 li
250 -1033 li
363 -1033 li
363 -1066 li
180 -1066 li
180 164 li
363 164 li
cp
false sop
f
}bind def
/g7 {383 0 20 -1066 203 164 setcachedevice
203 164 mo
203 -1066 li
20 -1066 li
20 -1033 li
133 -1033 li
133 131 li
20 131 li
20 164 li
203 164 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMM+*1 
[32{/.notdef}rp /g2 /g3 /gC /g5 /g7 219{/.notdef}rp]
DYERMM+ nf
DYERMM+*1 [10.4483 0 0 -10.4483 0 0 ]msf
118.269 241.058 mo
(#)sh
139.632 241.058 mo
($)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERLU+ AddGlyphs
systemdict begin DYERLV+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g49 {500 0 19 -683 478 9 setcachedevice
465 -118 mo
411 -50 399 -38 383 -38 cv
374 -38 367 -46 367 -56 cv
367 -67 383 -129 400 -181 cv
430 -275 448 -349 448 -374 cv
448 -411 429 -441 383 -441 cv
321 -441 243 -376 153 -230 cv
274 -677 li
267 -683 li
209 -670 170 -663 110 -656 cv
110 -641 li
137 -641 li
155 -641 178 -633 178 -616 cv
178 -602 173 -585 165 -554 cv
19 0 li
94 0 li
134 -154 150 -189 190 -250 cv
242 -329 306 -390 342 -390 cv
365 -390 370 -380 370 -365 cv
370 -361 367 -348 363 -332 cv
308 -125 li
295 -76 288 -45 288 -33 cv
288 -7 305 9 332 9 cv
383 9 417 -18 478 -105 cv
465 -118 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLV+*1 
[32{/.notdef}rp /g23 /g24 /g33 /g29 /g28 /g46 /g4D 
/g54 /g42 /g53 /g48 /g51 /g4A /g4B /g2D 
/g5A /g37 /g26 /g49 205{/.notdef}rp]
DYERLV+ nf
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
122.261 238.899 mo
(2)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
127.478 234.582 mo
($)sh
136.371 234.582 mo
(%)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
129.929 234.582 mo
(&)sh
DYERMR+*1 [5.75661 0 0 -5.75661 0 0 ]msf
131.986 235.302 mo
( )sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
143.645 243.217 mo
(\()sh
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 3256 56 <000200aaffd9052f05bd00150016003c4023170527053810030a0002053a
1009160316161409250c1a18012514191718a0219570182b2b4ef44ded4e
10f64ded12392f003f3fed3f3c5d31300111141716333237363511331110
07022120032619012101743c59d3fd5b31ca4986fe8cfe8c8549024305bd
fc74a06aa0ad5e9f038cfcc7fef192fef6010a92010f0339>DYERLT+Helvetica AddT42Char 

1 0 172 <> DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/U 56 def
/nobreakspace 172 def
end
DYERLT+Helvetica /Encoding get
dup 85 /U put
dup 160 /nobreakspace put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp 
/one 2{/.notdef}rp /four 6{/.notdef}rp /semicolon 5{/.notdef}rp /A 2{/.notdef}rp 
/D /.notdef /F /G /H 3{/.notdef}rp /L /.notdef 
/N /.notdef /P 2{/.notdef}rp /S /T /U /.notdef 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/.notdef /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
78.7599 124.487 mo
(The Adaptation of\240)sh
149.323 124.487 mo
( )sh
92.4544 146.794 mo
(Using SGD)sh
135.64 146.794 mo
( )sh
114.042 156.868 mo
( )sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMJ+ AddGlyphs
systemdict begin DYERMK+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g206 {480 0 27 -678 494 11 setcachedevice
494 -511 mo
494 -630 442 -678 371 -678 cv
331 -678 293 -669 249 -636 cv
140 -553 27 -376 27 -161 cv
27 -55 74 11 155 11 cv
225 11 295 -20 360 -106 cv
434 -205 494 -349 494 -511 cv
cp
147 -347 mo
172 -436 270 -657 357 -657 cv
392 -657 410 -616 410 -552 cv
410 -477 397 -405 380 -347 cv
147 -347 li
cp
373 -315 mo
349 -217 263 -10 167 -10 cv
130 -10 111 -61 111 -150 cv
111 -213 121 -265 140 -315 cv
373 -315 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMK+*1 
[32{/.notdef}rp /g203 /g200 /g204 /g201 /g202 /g20E /g20A 
/g211 /g215 /g206 214{/.notdef}rp]
DYERMK+ nf
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
104.822 136.72 mo
(\))sh
false sop
1 /0 /CSD get_res sepcs
1 sep
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
110.545 132.402 mo
($)sh
119.438 132.402 mo
(%)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
112.996 132.402 mo
(&)sh
DYERMR+*1 [5.75661 0 0 -5.75661 0 0 ]msf
115.054 133.841 mo
( )sh
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 384 16 <0001005501de024b029700030020400a002f03011a0500190405b80142b3
21ba48182b2b4ee410e6002f4ded3130132115215501f6fe0a0297b90000
>DYERLT+Helvetica AddT42Char 
1 508 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>DYERLT+Helvetica AddT42Char 
1 1648 40 <000200af000004ed05bd000b000c004e4024071e04040b031e0100020908
1e0a0b080c020c0c02000669023b091a0e03082500190d0eb8010bb32195
89182b2b4ef44dfd3c4e10f64df4e41112392f003f3f3cfd3c3f3ced1239
2ffd313013211521112115211121152101af042ffc93032bfcd5037cfbc2
021f05bdb4fe42aafe0eaf05bd000000>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/hyphen 16 def
/zero 19 def
/E 40 def
end
DYERLT+Helvetica /Encoding get
dup 45 /hyphen put
dup 48 /zero put
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period 
/.notdef /zero /one 2{/.notdef}rp /four 6{/.notdef}rp /semicolon 5{/.notdef}rp 
/A 2{/.notdef}rp /D /E /F /G /H 3{/.notdef}rp 
/L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 
/U /.notdef /W 9{/.notdef}rp /a /b /c /d 
/e /f /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /.notdef /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
142.083 15.8588 mo
(1-0 Encoding Scheme)sh
227.038 15.8588 mo
( )sh
214.603 28.0916 mo
( )sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
154.518 28.0916 mo
(!)sh
DYERMD+*1 [10.4483 0 0 -10.4483 0 0 ]msf
165.3 28.0916 mo
( )sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
176.049 28.0916 mo
(%)sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
178.657 28.0916 mo
(")sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMA+ AddGlyphs
systemdict begin DYERMB+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4E {722 0 12 -441 704 9 setcachedevice
704 -105 mo
689 -117 li
668 -91 li
638 -54 620 -38 603 -38 cv
595 -38 591 -43 591 -54 cv
591 -58 595 -76 601 -99 cv
669 -350 li
670 -355 672 -371 672 -378 cv
672 -414 651 -441 614 -441 cv
594 -441 575 -436 551 -421 cv
502 -390 461 -340 391 -229 cv
418 -306 431 -362 431 -381 cv
431 -417 411 -441 371 -441 cv
310 -441 240 -375 151 -230 cv
209 -439 li
206 -441 li
44 -410 li
44 -394 li
69 -394 li
96 -394 110 -387 110 -372 cv
110 -360 95 -277 55 -144 cv
12 0 li
87 0 li
135 -158 149 -194 183 -246 cv
239 -331 298 -389 332 -389 cv
345 -389 354 -380 354 -364 cv
354 -351 330 -245 286 -93 cv
259 0 li
334 0 li
373 -154 393 -203 442 -272 cv
492 -342 543 -389 573 -389 cv
584 -389 593 -380 593 -368 cv
593 -363 591 -350 586 -330 cv
528 -103 li
518 -64 515 -47 515 -37 cv
515 -7 529 9 555 9 cv
602 9 646 -24 699 -98 cv
704 -105 li
cp
false sop
f
}bind def
/g4F {500 0 14 -441 474 9 setcachedevice
460 -117 mo
453 -108 446 -99 439 -91 cv
410 -54 392 -38 378 -38 cv
366 -38 362 -47 362 -56 cv
362 -64 366 -81 376 -117 cv
432 -320 li
438 -341 442 -362 442 -380 cv
442 -416 420 -441 377 -441 cv
313 -441 246 -381 146 -221 cv
213 -439 li
209 -441 li
156 -430 128 -426 47 -410 cv
47 -394 li
98 -393 112 -387 112 -367 cv
112 -361 111 -355 110 -350 cv
14 0 li
89 0 li
136 -158 144 -181 189 -248 cv
252 -341 297 -390 337 -390 cv
352 -390 361 -379 361 -361 cv
361 -349 355 -313 347 -282 cv
303 -120 li
289 -68 287 -55 287 -45 cv
287 -7 309 9 334 9 cv
381 9 406 -11 474 -104 cv
460 -117 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMB+*1 
[32{/.notdef}rp /g4C /g2C /g35 /g25 /g38 /g58 /g4D 
/g2D /g4A /g4B /g51 /g55 /g43 /g42 /g54 
/g57 /g53 /g33 /g4E /g4F 204{/.notdef}rp]
DYERMB+ nf
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
185.032 23.7741 mo
(")sh
%ADOBeginSubsetFont: DYERLY+ AddGlyphs
systemdict begin DYERLZ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g97 {640 0 43 -529 597 25 setcachedevice
597 -22 mo
367 -252 li
597 -484 li
551 -529 li
320 -299 li
90 -529 li
43 -483 li
273 -252 li
43 -21 li
89 25 li
320 -205 li
551 25 li
597 -22 li
cp
false sop
f
}bind def
/gC {685 0 48 -547 636 41 setcachedevice
636 -220 mo
636 -286 li
375 -286 li
375 -547 li
309 -547 li
309 -286 li
48 -286 li
48 -220 li
309 -220 li
309 41 li
375 41 li
375 -220 li
636 -220 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERLZ+*1 
[32{/.notdef}rp /g12 /g1E /gD /gF /g9 /gA /g4E 
/g4A /g4F /g13 /g97 /gC 212{/.notdef}rp]
DYERLZ+ nf
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
189.53 23.7741 mo
(*)sh
194.252 23.7741 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
196.703 23.7741 mo
(2)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
202.032 23.7741 mo
(+)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
207.081 23.7741 mo
(3)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
210.769 23.7741 mo
(%)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DYERLT+Helvetica gcheck setglobal} if
1 960 29 <000200e3000001b40421000300070032401a052a07032a0006070a091717
1a05016404001908096421787c182b2b4ef44d3cfd3c4e456544e6003f3f
4ded10ed31301333152311331523e3d1d1d1d10421dafd93da000000>DYERLT+Helvetica AddT42Char 
DYERLT+Helvetica /CharStrings get begin
/colon 29 def
end
DYERLT+Helvetica /Encoding get
dup 58 /colon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DYERLT+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period 
/.notdef /zero /one 2{/.notdef}rp /four 5{/.notdef}rp /colon /semicolon 
5{/.notdef}rp /A 2{/.notdef}rp /D /E /F /G /H 
3{/.notdef}rp /L /.notdef /N /.notdef /P 2{/.notdef}rp /S 
/T /U /.notdef /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /.notdef /y 38{/.notdef}rp /nobreakspace 95{/.notdef}rp]
DYERLT+Helvetica nf
DYERLT+Helvetica*1 [8.63492 0 0 -8.63492 0 0 ]msf
30.2222 280.635 mo
(Legend:)sh
60.4444 293.587 mo
(The high level learning)sh
60.4444 307.979 mo
(The low level learning)sh
60.4444 322.37 mo
(The model testing)sh
355.606 221.63 mo
( )sh
347.286 233.862 mo
( )sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
311.577 221.63 mo
(.)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
320.999 221.63 mo
( )sh
DYERLV+*1 [10.4483 0 0 -10.4483 0 0 ]msf
331.747 221.63 mo
(.)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
340.45 221.63 mo
(/)sh
350.479 221.63 mo
(.)sh
DYERLX+*1 [10.4483 0 0 -10.4483 0 0 ]msf
330.927 233.862 mo
( )sh
341.675 233.862 mo
(.)sh
DYERMK+*1 [10.4483 0 0 -10.4483 0 0 ]msf
311.577 233.862 mo
(!)sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
317.479 229.545 mo
($)sh
DYERMB+*1 [7.38286 0 0 -7.38286 0 0 ]msf
319.931 229.545 mo
(')sh
DYERLZ+*1 [7.38286 0 0 -7.38286 0 0 ]msf
324.046 229.545 mo
(%)sh
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMS+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMS+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 0 0.637 0.676 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g1E put
dup 33 /g12 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g1E {685 0 48 -386 637 -120 setcachedevice
637 -320 mo
637 -386 li
48 -386 li
48 -320 li
637 -320 li
cp
637 -120 mo
637 -186 li
48 -186 li
48 -120 li
637 -120 li
cp
false sop
f
}bind def
/g12 {500 0 111 -676 394 0 setcachedevice
394 0 mo
394 -15 li
319 -15 299 -33 299 -76 cv
299 -673 li
290 -676 li
111 -585 li
111 -571 li
138 -581 li
156 -588 173 -593 183 -593 cv
204 -593 213 -578 213 -544 cv
213 -95 li
213 -40 192 -19 118 -15 cv
118 0 li
394 0 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMT+ /DYERMS+ findfont ct_VMDictPut
/DYERMT+*1 
[32{/.notdef}rp /g1E /g12 222{/.notdef}rp]
DYERMT+ nf
DYERMT+*1 [6.9655 0 0 -6.9655 0 0 ]msf
308.878 96.4233 mo
( )sh
315.804 96.4233 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMU+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMU+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 0 1.202 1.499 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g23 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g23 {1292 0 90 -1499 1202 -49 setcachedevice
1202 -465 mo
1163 -465 li
1127 -301 1058 -232 919 -232 cv
351 -232 li
821 -845 li
410 -1409 li
787 -1409 li
822 -1409 865 -1408 893 -1404 cv
960 -1396 1027 -1344 1055 -1213 cv
1059 -1193 1066 -1167 1066 -1148 cv
1102 -1148 li
1102 -1499 li
126 -1499 li
647 -784 li
90 -49 li
1128 -49 li
1202 -465 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMV+ /DYERMU+ findfont ct_VMDictPut
/DYERMV+*1 
[32{/.notdef}rp /g23 223{/.notdef}rp]
DYERMV+ nf
DYERMV+*1 [6.9655 0 0 -6.9655 0 0 ]msf
287.111 100.021 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMW+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMW+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.008 -0.011 0.559 0.683 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g4D put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g4D {278 0 41 -683 279 11 setcachedevice
279 -678 mo
273 -683 li
214 -670 177 -663 118 -656 cv
118 -640 li
136 -640 li
168 -640 185 -630 185 -618 cv
185 -615 185 -609 182 -599 cv
45 -75 li
42 -65 41 -53 41 -45 cv
41 -8 58 11 90 11 cv
144 11 181 -19 241 -114 cv
227 -124 li
202 -89 li
173 -48 150 -32 135 -32 cv
125 -32 118 -38 118 -50 cv
118 -58 121 -75 126 -93 cv
279 -678 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMX+ /DYERMW+ findfont ct_VMDictPut
/DYERMX+*1 
[32{/.notdef}rp /g4D 223{/.notdef}rp]
DYERMX+ nf
DYERMX+*1 [5.74942 0 0 -5.74942 0 0 ]msf
287.392 105.058 mo
( )sh
%ADOBeginSubsetFont: DYERMY+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERMY+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.177 0.637 0.676 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g1E put
dup 33 /g12 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g1E {685 0 48 -386 637 -120 setcachedevice
637 -320 mo
637 -386 li
48 -386 li
48 -320 li
637 -320 li
cp
637 -120 mo
637 -186 li
48 -186 li
48 -120 li
637 -120 li
cp
false sop
f
}bind def
/g12 {500 0 111 -676 394 0 setcachedevice
394 0 mo
394 -15 li
319 -15 299 -33 299 -76 cv
299 -673 li
290 -676 li
111 -585 li
111 -571 li
138 -581 li
156 -588 173 -593 183 -593 cv
204 -593 213 -578 213 -544 cv
213 -95 li
213 -40 192 -19 118 -15 cv
118 0 li
394 0 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERMZ+ /DYERMY+ findfont ct_VMDictPut
/DYERMZ+*1 
[32{/.notdef}rp /g1E /g12 222{/.notdef}rp]
DYERMZ+ nf
DYERMZ+*1 [5.74942 0 0 -5.74942 0 0 ]msf
288.989 105.058 mo
( )sh
292.924 105.058 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMW+ AddGlyphs
systemdict begin DYERMX+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g2D {556 0 -8 -653 559 0 setcachedevice
559 -180 mo
539 -186 li
511 -128 489 -95 457 -74 cv
408 -41 377 -36 277 -36 cv
195 -36 172 -46 172 -77 cv
172 -91 176 -108 182 -131 cv
302 -560 li
318 -617 343 -633 403 -637 cv
403 -653 li
130 -653 li
130 -637 li
192 -633 207 -623 207 -594 cv
207 -579 204 -559 196 -532 cv
74 -94 li
56 -31 48 -22 -8 -16 cv
-8 0 li
501 0 li
559 -180 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMX+*1 
[32{/.notdef}rp /g4D /g2D 222{/.notdef}rp]
DYERMX+ nf
DYERMX+*1 [5.74942 0 0 -5.74942 0 0 ]msf
290.001 87.7884 mo
(!)sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERNA+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /DYERNA+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.04 -0.205 0.514 0.678 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g200 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g200 {506 0 -40 -678 514 205 setcachedevice
-9 127 mo
-15 148 -31 191 -40 205 cv
38 205 li
47 190 57 170 69 127 cv
107 -6 li
133 6 152 11 173 11 cv
216 11 258 3 297 -19 cv
390 -70 474 -191 474 -284 cv
474 -355 424 -392 386 -395 cv
386 -396 li
446 -423 514 -496 514 -577 cv
514 -653 446 -678 393 -678 cv
236 -678 167 -507 128 -368 cv
-9 127 li
cp
233 -477 mo
255 -561 302 -657 375 -657 cv
410 -657 442 -643 442 -566 cv
442 -508 395 -408 352 -408 cv
338 -408 317 -414 309 -414 cv
274 -414 265 -401 265 -390 cv
265 -378 277 -368 295 -368 cv
312 -368 327 -376 345 -376 cv
373 -376 385 -352 385 -317 cv
385 -183 281 -8 167 -8 cv
139 -8 119 -23 119 -45 cv
233 -477 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/DYERNB+ /DYERNA+ findfont ct_VMDictPut
/DYERNB+*1 
[32{/.notdef}rp /g200 223{/.notdef}rp]
DYERNB+ nf
DYERNB+*1 [6.9655 0 0 -6.9655 0 0 ]msf
296.825 96.4233 mo
( )sh
false sop
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: DYERMY+ AddGlyphs
systemdict begin DYERMZ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g9 {333 0 48 -676 304 177 setcachedevice
304 161 mo
164 44 134 -69 134 -255 cv
134 -448 165 -541 304 -660 cv
295 -676 li
135 -581 48 -437 48 -252 cv
48 -82 134 87 292 177 cv
304 161 li
cp
false sop
f
}bind def
/gA {333 0 29 -676 285 177 setcachedevice
29 -660 mo
174 -546 199 -431 199 -244 cv
199 -50 171 44 29 161 cv
38 177 li
197 80 285 -62 285 -247 cv
285 -417 194 -584 41 -676 cv
29 -660 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/DYERMZ+*1 
[32{/.notdef}rp /g1E /g12 /g9 /gA 220{/.notdef}rp]
DYERMZ+ nf
DYERMZ+*1 [5.74942 0 0 -5.74942 0 0 ]msf
300.761 93.545 mo
(")sh
DYERMX+*1 [5.74942 0 0 -5.74942 0 0 ]msf
302.672 93.545 mo
( )sh
DYERMZ+*1 [5.74942 0 0 -5.74942 0 0 ]msf
304.269 93.545 mo
(#)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/DYERMZ+*1 uf
/DYERMZ+ uf
/ uf
/DYERMV+*1 uf
/DYERMV+ uf
/ uf
/DYERMT+*1 uf
/DYERMT+ uf
/ uf
/DYERNB+*1 uf
/DYERNB+ uf
/ uf
/DYERMX+*1 uf
/DYERMX+ uf
/ uf
/DYERMR+*1 uf
/DYERMR+ uf
/ uf
/DYERMP+*1 uf
/DYERMP+ uf
/ uf
/DYERMN+Helvetica-Oblique*1 uf
/DYERMN+Helvetica-Oblique uf
/QJJAAA+Helvetica-Oblique uf
/DYERMM+*1 uf
/DYERMM+ uf
/ uf
/DYERMK+*1 uf
/DYERMK+ uf
/ uf
/DYERMI+*1 uf
/DYERMI+ uf
/ uf
/DYERMG+*1 uf
/DYERMG+ uf
/ uf
/DYERME+Helvetica-Bold*1 uf
/DYERME+Helvetica-Bold uf
/HIBBAA+Helvetica-Bold uf
/DYERMD+*1 uf
/DYERMD+ uf
/ uf
/DYERMB+*1 uf
/DYERMB+ uf
/ uf
/DYERLZ+*1 uf
/DYERLZ+ uf
/ uf
/DYERLX+*1 uf
/DYERLX+ uf
/ uf
/DYERLV+*1 uf
/DYERLV+ uf
/ uf
/DYERLT+Helvetica*1 uf
/DYERLT+Helvetica uf
/PBAAAA+Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
